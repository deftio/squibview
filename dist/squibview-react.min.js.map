{"version":3,"file":"squibview-react.min.js","sources":["../src/SquibViewReact.js"],"sourcesContent":["import React from 'https://esm.sh/react@18.2.0';\nimport SquibView from './squibview.esm.min.js';\n\n/**\n * React component wrapper for SquibView\n */\nclass SquibViewReact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = React.createRef();\n    this.state = {\n      editor: null\n    };\n  }\n  \n  componentDidMount() {\n    if (this.containerRef.current) {\n      // Initialize SquibView\n      const instance = new SquibView(this.containerRef.current, {\n        initialContent: this.props.initialContent,\n        inputContentType: this.props.inputContentType,\n        showControls: this.props.showControls,\n        initialView: this.props.initialView,\n        titleShow: this.props.titleShow,\n        titleContent: this.props.titleContent\n      });\n      \n      // Listen for editor events and re-emit them as props callbacks\n      instance.events.on('content:rendered', (contentType) => {\n        if (this.props.onContentRendered) {\n          this.props.onContentRendered(contentType);\n        }\n      });\n      \n      instance.events.on('revision:undo', (content, contentType) => {\n        if (this.props.onUndoRedo) {\n          this.props.onUndoRedo('undo', content, contentType);\n        }\n      });\n      \n      instance.events.on('revision:redo', (content, contentType) => {\n        if (this.props.onUndoRedo) {\n          this.props.onUndoRedo('redo', content, contentType);\n        }\n      });\n\n      // Listen for content changes from the editor\n      instance.events.on('content:changed', (newContent, type) => {\n        if (this.props.onChange) {\n          this.props.onChange(newContent, type);\n        }\n      });\n      \n      this.setState({ editor: instance });\n    }\n  }\n  \n  componentDidUpdate(prevProps) {\n    const { editor } = this.state;\n    if (!editor) return;\n\n    // Handle content updates from parent only if they're different from current editor content\n    if (this.props.initialContent !== prevProps.initialContent) {\n      const currentContent = editor.getContent();\n      if (currentContent !== this.props.initialContent) {\n        editor.setContent(\n          this.props.initialContent, \n          this.props.inputContentType || editor.inputContentType, \n          false\n        );\n      }\n    }\n    \n    // Handle content type changes\n    if (this.props.inputContentType !== prevProps.inputContentType) {\n      editor.setContent(\n        editor.getContent(), \n        this.props.inputContentType,\n        false\n      );\n    }\n    \n    // Handle view changes\n    if (this.props.initialView !== prevProps.initialView) {\n      editor.setView(this.props.initialView);\n    }\n    \n    // Handle controls visibility\n    if (this.props.showControls !== prevProps.showControls) {\n      editor.controlsShow(this.props.showControls);\n    }\n    \n    // Handle title visibility\n    if (this.props.titleShow !== prevProps.titleShow) {\n      editor.titleShow(this.props.titleShow);\n    }\n    \n    // Handle title content\n    if (this.props.titleContent !== prevProps.titleContent) {\n      editor.titleSetContent(this.props.titleContent);\n    }\n  }\n  \n  componentWillUnmount() {\n    // Clean up event listeners\n    if (this.state.editor && this.state.editor.events) {\n      this.state.editor.events.off('*');\n    }\n  }\n  \n  render() {\n    const { className, ...otherProps } = this.props;\n    return React.createElement('div', { \n      ref: this.containerRef,\n      className: `squibview-react-container ${className || ''}`,\n      ...otherProps\n    });\n  }\n}\n\n// Add prop types documentation for IDE support\nSquibViewReact.propTypes = {\n  // React's PropTypes are not included directly to avoid dependencies\n  // This is just for documentation purposes\n  /*\n  initialContent: PropTypes.string,\n  inputContentType: PropTypes.string,\n  showControls: PropTypes.bool,\n  initialView: PropTypes.string,\n  titleShow: PropTypes.bool,\n  titleContent: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  onViewChange: PropTypes.func,\n  onContentRendered: PropTypes.func,\n  onUndoRedo: PropTypes.func\n  */\n};\n\n// Default props\nSquibViewReact.defaultProps = {\n  initialContent: '',\n  inputContentType: 'md',\n  showControls: true,\n  initialView: 'split',\n  titleShow: false,\n  titleContent: '',\n  className: ''\n};\n\nexport default SquibViewReact;"],"names":["SquibViewReact","props","_this","_classCallCheck","_callSuper","containerRef","React","createRef","state","editor","_inherits","Component","_createClass","key","value","_this2","this","current","instance","SquibView","initialContent","inputContentType","showControls","initialView","titleShow","titleContent","events","on","contentType","onContentRendered","content","onUndoRedo","newContent","type","onChange","setState","prevProps","getContent","setContent","setView","controlsShow","titleSetContent","off","_this$props","className","otherProps","_objectWithoutProperties","_excluded","createElement","_objectSpread","ref","concat","propTypes","defaultProps"],"mappings":"ywDAMMA,aACJ,SAAAA,EAAYC,GAAO,IAAAC,EAKf,mGALeC,MAAAH,IACjBE,EAAAE,EAAAJ,KAAAA,GAAMC,KACDI,aAAeC,EAAMC,YAC1BL,EAAKM,MAAQ,CACXC,OAAQ,MACRP,CACJ,CAAC,4RAAAQ,CAAAV,EAP0BM,EAAMK,WAOhCC,EAAAZ,EAAA,CAAA,CAAAa,IAAA,oBAAAC,MAED,WAAoB,IAAAC,EAAAC,KAClB,GAAIA,KAAKX,aAAaY,QAAS,CAE7B,IAAMC,EAAW,IAAIC,EAAUH,KAAKX,aAAaY,QAAS,CACxDG,eAAgBJ,KAAKf,MAAMmB,eAC3BC,iBAAkBL,KAAKf,MAAMoB,iBAC7BC,aAAcN,KAAKf,MAAMqB,aACzBC,YAAaP,KAAKf,MAAMsB,YACxBC,UAAWR,KAAKf,MAAMuB,UACtBC,aAAcT,KAAKf,MAAMwB,eAI3BP,EAASQ,OAAOC,GAAG,oBAAoB,SAACC,GAClCb,EAAKd,MAAM4B,mBACbd,EAAKd,MAAM4B,kBAAkBD,EAEjC,IAEAV,EAASQ,OAAOC,GAAG,iBAAiB,SAACG,EAASF,GACxCb,EAAKd,MAAM8B,YACbhB,EAAKd,MAAM8B,WAAW,OAAQD,EAASF,EAE3C,IAEAV,EAASQ,OAAOC,GAAG,iBAAiB,SAACG,EAASF,GACxCb,EAAKd,MAAM8B,YACbhB,EAAKd,MAAM8B,WAAW,OAAQD,EAASF,EAE3C,IAGAV,EAASQ,OAAOC,GAAG,mBAAmB,SAACK,EAAYC,GAC7ClB,EAAKd,MAAMiC,UACbnB,EAAKd,MAAMiC,SAASF,EAAYC,EAEpC,IAEAjB,KAAKmB,SAAS,CAAE1B,OAAQS,GAC1B,CACF,GAAC,CAAAL,IAAA,qBAAAC,MAED,SAAmBsB,GACjB,IAAQ3B,EAAWO,KAAKR,MAAhBC,OACR,GAAKA,EAAL,CAGA,GAAIO,KAAKf,MAAMmB,iBAAmBgB,EAAUhB,eACnBX,EAAO4B,eACPrB,KAAKf,MAAMmB,gBAChCX,EAAO6B,WACLtB,KAAKf,MAAMmB,eACXJ,KAAKf,MAAMoB,kBAAoBZ,EAAOY,kBACtC,GAMFL,KAAKf,MAAMoB,mBAAqBe,EAAUf,kBAC5CZ,EAAO6B,WACL7B,EAAO4B,aACPrB,KAAKf,MAAMoB,kBACX,GAKAL,KAAKf,MAAMsB,cAAgBa,EAAUb,aACvCd,EAAO8B,QAAQvB,KAAKf,MAAMsB,aAIxBP,KAAKf,MAAMqB,eAAiBc,EAAUd,cACxCb,EAAO+B,aAAaxB,KAAKf,MAAMqB,cAI7BN,KAAKf,MAAMuB,YAAcY,EAAUZ,WACrCf,EAAOe,UAAUR,KAAKf,MAAMuB,WAI1BR,KAAKf,MAAMwB,eAAiBW,EAAUX,cACxChB,EAAOgC,gBAAgBzB,KAAKf,MAAMwB,aAxCvB,CA0Cf,GAAC,CAAAZ,IAAA,uBAAAC,MAED,WAEME,KAAKR,MAAMC,QAAUO,KAAKR,MAAMC,OAAOiB,QACzCV,KAAKR,MAAMC,OAAOiB,OAAOgB,IAAI,IAEjC,GAAC,CAAA7B,IAAA,SAAAC,MAED,WACE,IAAA6B,EAAqC3B,KAAKf,MAAlC2C,EAASD,EAATC,UAAcC,+WAAUC,CAAAH,EAAAI,GAChC,OAAOzC,EAAM0C,cAAc,qWAAKC,CAAA,CAC9BC,IAAKlC,KAAKX,aACVuC,UAASO,6BAAAA,OAA+BP,GAAa,KAClDC,GAEP,IAAC,IAIH7C,EAAeoD,UAAY,CAGzB,EAgBFpD,EAAeqD,aAAe,CAC5BjC,eAAgB,GAChBC,iBAAkB,KAClBC,cAAc,EACdC,YAAa,QACbC,WAAW,EACXC,aAAc,GACdmB,UAAW"}