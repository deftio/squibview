{"version":3,"file":"squibview-react.min.js","sources":["../src/SquibViewReact.js"],"sourcesContent":["import React from 'react';\nimport SquibView from './squibview.js';\n\n/**\n * React component wrapper for SquibView\n */\nclass SquibViewReact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = React.createRef();\n    this.state = {\n      editor: null,\n      content: props.initialContent || ''\n    };\n  }\n  \n  componentDidMount() {\n    if (this.containerRef.current) {\n      // Initialize SquibView\n      const instance = new SquibView(this.containerRef.current, {\n        initialContent: this.props.initialContent,\n        inputContentType: this.props.inputContentType,\n        showControls: this.props.showControls,\n        initialView: this.props.initialView,\n        titleShow: this.props.titleShow,\n        titleContent: this.props.titleContent\n      });\n      \n      // Override methods to communicate with React\n      const originalSetContent = instance.setContent.bind(instance);\n      instance.setContent = (newContent, type, saveRevision) => {\n        originalSetContent(newContent, type, saveRevision);\n        this.setState({ content: newContent });\n        if (this.props.onChange) {\n          this.props.onChange(newContent, type);\n        }\n      };\n      \n      const originalSetView = instance.setView.bind(instance);\n      instance.setView = (view) => {\n        originalSetView(view);\n        if (this.props.onViewChange) {\n          this.props.onViewChange(view);\n        }\n      };\n      \n      // Listen for editor events and re-emit them as props callbacks\n      instance.events.on('content:rendered', (contentType) => {\n        if (this.props.onContentRendered) {\n          this.props.onContentRendered(contentType);\n        }\n      });\n      \n      instance.events.on('revision:undo', (content, contentType) => {\n        if (this.props.onUndoRedo) {\n          this.props.onUndoRedo('undo', content, contentType);\n        }\n      });\n      \n      instance.events.on('revision:redo', (content, contentType) => {\n        if (this.props.onUndoRedo) {\n          this.props.onUndoRedo('redo', content, contentType);\n        }\n      });\n      \n      this.setState({ editor: instance });\n    }\n  }\n  \n  componentDidUpdate(prevProps) {\n    // Handle content updates from parent\n    if (this.state.editor && this.props.initialContent !== prevProps.initialContent) {\n      this.state.editor.setContent(\n        this.props.initialContent, \n        this.props.inputContentType || this.state.editor.inputContentType, \n        false\n      );\n      this.setState({ content: this.props.initialContent });\n    }\n    \n    // Handle content type changes\n    if (this.state.editor && this.props.inputContentType !== prevProps.inputContentType) {\n      this.state.editor.setContent(\n        this.state.editor.getContent(), \n        this.props.inputContentType,\n        false\n      );\n    }\n    \n    // Handle view changes\n    if (this.state.editor && this.props.initialView !== prevProps.initialView) {\n      this.state.editor.setView(this.props.initialView);\n    }\n    \n    // Handle controls visibility\n    if (this.state.editor && this.props.showControls !== prevProps.showControls) {\n      this.state.editor.controlsShow(this.props.showControls);\n    }\n    \n    // Handle title visibility\n    if (this.state.editor && this.props.titleShow !== prevProps.titleShow) {\n      this.state.editor.titleShow(this.props.titleShow);\n    }\n    \n    // Handle title content\n    if (this.state.editor && this.props.titleContent !== prevProps.titleContent) {\n      this.state.editor.titleSetContent(this.props.titleContent);\n    }\n  }\n  \n  componentWillUnmount() {\n    // Clean up event listeners\n    if (this.state.editor && this.state.editor.events) {\n      this.state.editor.events.off('*');\n    }\n  }\n  \n  render() {\n    const { className, ...otherProps } = this.props;\n    return React.createElement('div', { \n      ref: this.containerRef,\n      className: `squibview-react-container ${className || ''}`,\n      ...otherProps\n    });\n  }\n}\n\n// Add prop types documentation for IDE support\nSquibViewReact.propTypes = {\n  // React's PropTypes are not included directly to avoid dependencies\n  // This is just for documentation purposes\n  /*\n  initialContent: PropTypes.string,\n  inputContentType: PropTypes.string,\n  showControls: PropTypes.bool,\n  initialView: PropTypes.string,\n  titleShow: PropTypes.bool,\n  titleContent: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  onViewChange: PropTypes.func,\n  onContentRendered: PropTypes.func,\n  onUndoRedo: PropTypes.func\n  */\n};\n\n// Default props\nSquibViewReact.defaultProps = {\n  initialContent: '',\n  inputContentType: 'md',\n  showControls: true,\n  initialView: 'split',\n  titleShow: false,\n  titleContent: '',\n  className: ''\n};\n\nexport default SquibViewReact;"],"names":["SquibViewReact","props","_this","_classCallCheck","_callSuper","containerRef","React","createRef","state","editor","content","initialContent","_inherits","Component","_createClass","key","value","_this2","this","current","instance","SquibView","inputContentType","showControls","initialView","titleShow","titleContent","originalSetContent","setContent","bind","newContent","type","saveRevision","setState","onChange","originalSetView","setView","view","onViewChange","events","on","contentType","onContentRendered","onUndoRedo","prevProps","getContent","controlsShow","titleSetContent","off","_this$props","className","otherProps","_objectWithoutProperties","_excluded","createElement","_objectSpread","ref","concat","propTypes","defaultProps"],"mappings":"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"}