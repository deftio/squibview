{"version":3,"file":"squibview.esm.js","sources":["../node_modules/tiny-emitter/index.js","../node_modules/diff-match-patch/index.js","../src/version.js","../node_modules/eventemitter3/index.js","../node_modules/papaparse/papaparse.min.js","../node_modules/turndown/lib/turndown.browser.es.js","../src/HtmlToMarkdown.js","../src/RevisionHistory.js","../src/squibview.js"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nvar diff_match_patch = function() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n};\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Class representing one diff tuple.\n * ~Attempts to look like a two-element array (which is what this used to be).~\n * Constructor returns an actual two-element array, to allow destructing @JackuB\n * See https://github.com/JackuB/diff-match-patch/issues/14 for details\n * @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n * @param {string} text Text to be deleted, inserted, or retained.\n * @constructor\n */\ndiff_match_patch.Diff = function(op, text) {\n  return [op, text];\n};\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number=} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [new diff_match_patch.Diff(DIFF_EQUAL, text1)];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, commonprefix));\n  }\n  if (commonsuffix) {\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, commonsuffix));\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1)];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(0, i)),\n             new diff_match_patch.Diff(DIFF_EQUAL, shorttext),\n             new diff_match_patch.Diff(DIFF_INSERT,\n                 longtext.substring(i + shorttext.length))];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n            new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL, mid_common)],\n                          diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var subDiff =\n              this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = subDiff.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, subDiff[j]);\n          }\n          pointer = pointer + subDiff.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n          new diff_match_patch.Diff(DIFF_INSERT, text2)];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength == maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  // Allocate 2/3rds of the space for text1, the rest for text2.\n  var maxLines = 40000;\n  var chars1 = diff_linesToCharsMunge_(text1);\n  maxLines = 65535;\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var i = 0; i < diffs.length; i++) {\n    var chars = diffs[i][1];\n    var text = [];\n    for (var j = 0; j < chars.length; j++) {\n      text[j] = lineArray[chars.charCodeAt(j)];\n    }\n    diffs[i][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: https://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastEquality && (lastEquality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastEquality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              insertion.substring(0, overlap_length1)));\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              deletion.substring(0, overlap_length2)));\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastEquality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastEquality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastEquality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastEquality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n                    text_insert.substring(0, commonlength)));\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n          if (text_delete.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n          if (text_insert.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] =\n              new diff_match_patch.Diff(DIFF_INSERT, decodeURI(param));\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_EQUAL, text);\n        } else {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_DELETE, text);\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  if (patch.start2 === null) {\n    throw Error('patch not initialized');\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, prefix));\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, suffix));\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // https://github.com/google/diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] =\n          new diff_match_patch.Diff(patch.diffs[y][0], patch.diffs[y][1]);\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, precontext));\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, postcontext));\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE, line));\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT, line));\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, line));\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indices are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","// This file is auto-generated by tools/updateVersion.js. Do not edit directly.\nexport const VERSION = \"1.0.13\";\nexport const REPO_URL = \"https://github.com/deftio/squibview\";\n\nexport default { version: VERSION, url: REPO_URL };\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/* @license\nPapa Parse\nv5.5.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n((e,t)=>{\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()})(this,function r(){var n=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==n?n:{};var d,s=!n.document&&!!n.postMessage,a=n.IS_PAPA_WORKER||!1,o={},h=0,v={};function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(t,e){var i=parseInt(this._config.skipFirstNLines)||0;if(this.isFirstChunk&&0<i){let e=this._config.newline;e||(r=this._config.quoteChar||'\"',e=this._handle.guessLineEndings(t,r)),t=[...t.split(e).slice(i)].join(e)}this.isFirstChunk&&U(this._config.beforeFirstChunk)&&void 0!==(r=this._config.beforeFirstChunk(t))&&(t=r),this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+t,r=(this._partialLine=\"\",this._handle.parse(i,this._baseIndex,!this._finished));if(!this._handle.paused()&&!this._handle.aborted()){t=r.meta.cursor,i=(this._finished||(this._partialLine=i.substring(t-this._baseIndex),this._baseIndex=t),r&&r.data&&(this._rowCount+=r.data.length),this._finished||this._config.preview&&this._rowCount>=this._config.preview);if(a)n.postMessage({results:r,workerId:v.WORKER_ID,finished:i});else if(U(this._config.chunk)&&!e){if(this._config.chunk(r,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);this._completeResults=r=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(r.data),this._completeResults.errors=this._completeResults.errors.concat(r.errors),this._completeResults.meta=r.meta),this._completed||!i||!U(this._config.complete)||r&&r.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),i||r&&r.meta.paused||this._nextChunk(),r}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):a&&this._config.error&&n.postMessage({workerId:v.WORKER_ID,error:e,finished:!1})}}function f(e){var r;(e=e||{}).chunkSize||(e.chunkSize=v.RemoteChunkSize),u.call(this,e),this._nextChunk=s?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),s||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!s),this._config.downloadRequestHeaders){var e,t=this._config.downloadRequestHeaders;for(e in t)r.setRequestHeader(e,t[e])}var i;this._config.chunkSize&&(i=this._start+this._config.chunkSize-1,r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i));try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}s&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize||r.responseText.length,this._finished=!this._config.chunkSize||this._start>=(e=>null!==(e=e.getResponseHeader(\"Content-Range\"))?parseInt(e.substring(e.lastIndexOf(\"/\")+1)):-1)(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){e=r.statusText||e;this._sendError(new Error(e))}}function l(e){(e=e||{}).chunkSize||(e.chunkSize=v.LocalChunkSize),u.call(this,e);var i,r,n=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,r=e.slice||e.webkitSlice||e.mozSlice,n?((i=new FileReader).onload=y(this._chunkLoaded,this),i.onerror=y(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input,t=(this._config.chunkSize&&(t=Math.min(this._start+this._config.chunkSize,this._input.size),e=r.call(e,this._start,t)),i.readAsText(e,this._config.encoding));n||this._chunkLoaded({target:{result:t}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function c(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){var e,t;if(!this._finished)return e=this._config.chunkSize,i=e?(t=i.substring(0,e),i.substring(e)):(t=i,\"\"),this._finished=!i,this.parseChunk(t)}}function p(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var n,s,a,t,o=Math.pow(2,53),h=-o,u=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,d=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,i=this,r=0,f=0,l=!1,e=!1,c=[],p={data:[],errors:[],meta:{}};function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(p&&a&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+v.DefaultDelimiter+\"'\"),a=!1),m.skipEmptyLines&&(p.data=p.data.filter(function(e){return!y(e)})),_()){if(p)if(Array.isArray(p.data[0])){for(var e=0;_()&&e<p.data.length;e++)p.data[e].forEach(t);p.data.splice(0,1)}else p.data.forEach(t);function t(e,t){U(m.transformHeader)&&(e=m.transformHeader(e,t)),c.push(e)}}function i(e,t){for(var i=m.header?{}:[],r=0;r<e.length;r++){var n=r,s=e[r],s=((e,t)=>(e=>(m.dynamicTypingFunction&&void 0===m.dynamicTyping[e]&&(m.dynamicTyping[e]=m.dynamicTypingFunction(e)),!0===(m.dynamicTyping[e]||m.dynamicTyping)))(e)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&((e=>{if(u.test(e)){e=parseFloat(e);if(h<e&&e<o)return 1}})(t)?parseFloat(t):d.test(t)?new Date(t):\"\"===t?null:t):t)(n=m.header?r>=c.length?\"__parsed_extra\":c[r]:n,s=m.transform?m.transform(s,n):s);\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>c.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+c.length+\" fields but parsed \"+r,f+t):r<c.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+c.length+\" fields but parsed \"+r,f+t)),i}var r;p&&(m.header||m.dynamicTyping||m.transform)&&(r=1,!p.data.length||Array.isArray(p.data[0])?(p.data=p.data.map(i),r=p.data.length):p.data=i(p.data,0),m.header&&p.meta&&(p.meta.fields=c),f+=r)}function _(){return m.header&&0===c.length}function k(e,t,i,r){e={type:e,code:t,message:i};void 0!==r&&(e.row=r),p.errors.push(e)}U(m.step)&&(t=m.step,m.step=function(e){p=e,_()?g():(g(),0!==p.data.length&&(r+=e.data.length,m.preview&&r>m.preview?s.abort():(p.data=p.data[0],t(p,i))))}),this.parse=function(e,t,i){var r=m.quoteChar||'\"',r=(m.newline||(m.newline=this.guessLineEndings(e,r)),a=!1,m.delimiter?U(m.delimiter)&&(m.delimiter=m.delimiter(e),p.meta.delimiter=m.delimiter):((r=((e,t,i,r,n)=>{var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",v.RECORD_SEP,v.UNIT_SEP];for(var u=0;u<n.length;u++){for(var d,f=n[u],l=0,c=0,p=0,g=(o=void 0,new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e)),_=0;_<g.data.length;_++)i&&y(g.data[_])?p++:(d=g.data[_].length,c+=d,void 0===o?o=d:0<d&&(l+=Math.abs(d-o),o=d));0<g.data.length&&(c/=g.data.length-p),(void 0===a||l<=a)&&(void 0===h||h<c)&&1.99<c&&(a=l,s=f,h=c)}return{successful:!!(m.delimiter=s),bestDelimiter:s}})(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess)).successful?m.delimiter=r.bestDelimiter:(a=!0,m.delimiter=v.DefaultDelimiter),p.meta.delimiter=m.delimiter),w(m));return m.preview&&m.header&&r.preview++,n=e,s=new E(r),p=s.parse(n,t,i),g(),l?{meta:{paused:!0}}:p||{meta:{paused:!1}}},this.paused=function(){return l},this.pause=function(){l=!0,s.abort(),n=U(m.chunk)?\"\":n.substring(s.getCharIndex())},this.resume=function(){i.streamer._halted?(l=!1,i.streamer.parseChunk(n,!0)):setTimeout(i.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,s.abort(),p.meta.aborted=!0,U(m.complete)&&m.complete(p),n=\"\"},this.guessLineEndings=function(e,t){e=e.substring(0,1048576);var t=new RegExp(P(t)+\"([^]*?)\"+P(t),\"gm\"),i=(e=e.replace(t,\"\")).split(\"\\r\"),t=e.split(\"\\n\"),e=1<t.length&&t[0].length<i[0].length;if(1===i.length||e)return\"\\n\";for(var r=0,n=0;n<i.length;n++)\"\\n\"===i[n][0]&&r++;return r>=i.length/2?\"\\r\\n\":\"\\r\"}}function P(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(C){var S=(C=C||{}).delimiter,O=C.newline,x=C.comments,I=C.step,A=C.preview,T=C.fastMode,D=null,L=!1,F=null==C.quoteChar?'\"':C.quoteChar,j=F;if(void 0!==C.escapeChar&&(j=C.escapeChar),(\"string\"!=typeof S||-1<v.BAD_DELIMITERS.indexOf(S))&&(S=\",\"),x===S)throw new Error(\"Comment character same as delimiter\");!0===x?x=\"#\":(\"string\"!=typeof x||-1<v.BAD_DELIMITERS.indexOf(x))&&(x=!1),\"\\n\"!==O&&\"\\r\"!==O&&\"\\r\\n\"!==O&&(O=\"\\n\");var z=0,M=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=S.length,s=O.length,a=x.length,o=U(I),h=[],u=[],d=[],f=z=0;if(!i)return b();if(T||!1!==T&&-1===i.indexOf(F)){for(var l=i.split(O),c=0;c<l.length;c++){if(d=l[c],z+=d.length,c!==l.length-1)z+=O.length;else if(r)return b();if(!x||d.substring(0,a)!==x){if(o){if(h=[],k(d.split(S)),R(),M)return b()}else k(d.split(S));if(A&&A<=c)return h=h.slice(0,A),b(!0)}}return b()}for(var p=i.indexOf(S,z),g=i.indexOf(O,z),_=new RegExp(P(j)+P(F),\"g\"),m=i.indexOf(F,z);;)if(i[z]===F)for(m=z,z++;;){if(-1===(m=i.indexOf(F,m+1)))return r||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:z}),E();if(m===n-1)return E(i.substring(z,m).replace(_,F));if(F===j&&i[m+1]===j)m++;else if(F===j||0===m||i[m-1]!==j){-1!==p&&p<m+1&&(p=i.indexOf(S,m+1));var y=v(-1===(g=-1!==g&&g<m+1?i.indexOf(O,m+1):g)?p:Math.min(p,g));if(i.substr(m+1+y,e)===S){d.push(i.substring(z,m).replace(_,F)),i[z=m+1+y+e]!==F&&(m=i.indexOf(F,z)),p=i.indexOf(S,z),g=i.indexOf(O,z);break}y=v(g);if(i.substring(m+1+y,m+1+y+s)===O){if(d.push(i.substring(z,m).replace(_,F)),w(m+1+y+s),p=i.indexOf(S,z),m=i.indexOf(F,z),o&&(R(),M))return b();if(A&&h.length>=A)return b(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:z}),m++}}else if(x&&0===d.length&&i.substring(z,z+a)===x){if(-1===g)return b();z=g+s,g=i.indexOf(O,z),p=i.indexOf(S,z)}else if(-1!==p&&(p<g||-1===g))d.push(i.substring(z,p)),z=p+e,p=i.indexOf(S,z);else{if(-1===g)break;if(d.push(i.substring(z,g)),w(g+s),o&&(R(),M))return b();if(A&&h.length>=A)return b(!0)}return E();function k(e){h.push(e),f=z}function v(e){var t=0;return t=-1!==e&&(e=i.substring(m+1,e))&&\"\"===e.trim()?e.length:t}function E(e){return r||(void 0===e&&(e=i.substring(z)),d.push(e),z=n,k(d),o&&R()),b()}function w(e){z=e,k(d),d=[],g=i.indexOf(O,z)}function b(e){if(C.header&&!t&&h.length&&!L){var s=h[0],a={},o=new Set(s);let n=!1;for(let r=0;r<s.length;r++){let i=s[r];if(a[i=U(C.transformHeader)?C.transformHeader(i,r):i]){let e,t=a[i];for(;e=i+\"_\"+t,t++,o.has(e););o.add(e),s[r]=e,a[i]++,n=!0,(D=null===D?{}:D)[e]=i}else a[i]=1,s[r]=i;o.add(i)}n&&console.warn(\"Duplicate headers found and renamed.\"),L=!0}return{data:h,errors:u,meta:{delimiter:S,linebreak:O,aborted:M,truncated:!!e,cursor:f+(t||0),renamedHeaders:D}}}function R(){I(b()),h=[],u=[]}},this.abort=function(){M=!0},this.getCharIndex=function(){return z}}function g(e){var t=e.data,i=o[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,_(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:m,resume:m};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&_(t.workerId,t.results)}function _(e,t){var i=o[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete o[e]}function m(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t,i=Array.isArray(e)?[]:{};for(t in e)i[t]=w(e[t]);return i}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return v.parse=function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,!t.worker||!v.WORKERS_SUPPORTED)return i=null,v.NODE_STREAM_INPUT,\"string\"==typeof e?(e=(e=>65279!==e.charCodeAt(0)?e:e.slice(1))(e),i=new(t.download?f:c)(t)):!0===e.readable&&U(e.read)&&U(e.on)?i=new p(t):(n.File&&e instanceof File||e instanceof Object)&&(i=new l(t)),i.stream(e);(i=(()=>{var e;return!!v.WORKERS_SUPPORTED&&(e=(()=>{var e=n.URL||n.webkitURL||null,t=r.toString();return v.BLOB_URL||(v.BLOB_URL=e.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",t,\")();\"],{type:\"text/javascript\"})))})(),(e=new n.Worker(e)).onmessage=g,e.id=h++,o[e.id]=e)})()).userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,i.postMessage({input:e,config:t,workerId:i.id})},v.unparse=function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1,h=((()=>{if(\"object\"==typeof t){if(\"string\"!=typeof t.delimiter||v.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter),\"boolean\"!=typeof t.quotes&&\"function\"!=typeof t.quotes&&!Array.isArray(t.quotes)||(n=t.quotes),\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines),\"string\"==typeof t.newline&&(y=t.newline),\"string\"==typeof t.quoteChar&&(s=t.quoteChar),\"boolean\"==typeof t.header&&(_=t.header),Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s),t.escapeFormulae instanceof RegExp?o=t.escapeFormulae:\"boolean\"==typeof t.escapeFormulae&&t.escapeFormulae&&(o=/^[=+\\-@\\t\\r].*$/)}})(),new RegExp(P(s),\"g\"));\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\",n=(\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t)),Array.isArray(e)&&0<e.length),s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=k(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=(n?e:t[o]).length,u=!1,d=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var f=[],l=0;l<h;l++){var c=s?e[l]:l;f.push(t[o][c])}u=\"\"===f.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!d&&(r+=m);var g=n&&s?e[p]:p;r+=k(t[o][g],p)}o<t.length-1&&(!i||0<h&&!d)&&(r+=y)}}return r}function k(e,t){var i,r;return null==e?\"\":e.constructor===Date?JSON.stringify(e).slice(1,25):(r=!1,o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0),i=e.toString().replace(h,a),(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||((e,t)=>{for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1})(i,v.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i)}},v.RECORD_SEP=String.fromCharCode(30),v.UNIT_SEP=String.fromCharCode(31),v.BYTE_ORDER_MARK=\"\\ufeff\",v.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',v.BYTE_ORDER_MARK],v.WORKERS_SUPPORTED=!s&&!!n.Worker,v.NODE_STREAM_INPUT=1,v.LocalChunkSize=10485760,v.RemoteChunkSize=5242880,v.DefaultDelimiter=\",\",v.Parser=E,v.ParserHandle=i,v.NetworkStreamer=f,v.FileStreamer=l,v.StringStreamer=c,v.ReadableStreamStreamer=p,n.jQuery&&((d=n.jQuery).fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&n.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0===h.length)U(o.complete)&&o.complete();else{var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},v.parse(n.file,n.instanceConfig)}}function u(){h.splice(0,1),e()}}),a&&(n.onmessage=function(e){e=e.data;void 0===v.WORKER_ID&&e&&(v.WORKER_ID=e.workerId);\"string\"==typeof e.input?n.postMessage({workerId:v.WORKER_ID,results:v.parse(e.input,e.config),finished:!0}):(n.File&&e.input instanceof File||e.input instanceof Object)&&(e=v.parse(e.input,e.config))&&n.postMessage({workerId:v.WORKER_ID,results:e,finished:!0})}),(f.prototype=Object.create(u.prototype)).constructor=f,(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(c.prototype)).constructor=c,(p.prototype=Object.create(u.prototype)).constructor=p,v});","function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    if (href) href = href.replace(/([()])/g, '\\\\$1');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title.replace(/\"/g, '\\\\\"') + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (root.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n","import TurndownService from 'turndown';\n\n/**\n * Converts HTML content to Markdown format using the Turndown library with \n * customizations specific to SquibView's needs.\n */\nexport default class HtmlToMarkdown {\n  constructor(options = {}) {\n    this.turndownService = new TurndownService({\n      headingStyle: 'atx',       // Use # style headings\n      codeBlockStyle: 'fenced',  // Use ``` style code blocks\n      emDelimiter: '*',          // Use * for emphasis\n      bulletListMarker: '-',     // Use - for bullet lists\n      ...options\n    });\n    \n    // Add a simple cache for converted content to improve performance\n    this.cache = new Map();\n    this.cacheSize = options.cacheSize || 10;\n    \n    // Store special blocks for preservation\n    this._specialBlocks = new Map();\n    \n    this.configureTurndownRules();\n  }\n  \n  /**\n   * Configure custom Turndown rules\n   */\n  configureTurndownRules() {\n    // Since we're using pre-processing for data-source-type containers,\n    // we can simplify this and keep it as a fallback for any missed cases\n    this.turndownService.addRule('squibviewFencedBlock', {\n      filter: (node) => {\n        return node.nodeName === 'DIV' && node.hasAttribute('data-source-type');\n      },\n      replacement: (content, node, options) => {\n        const lang = node.getAttribute('data-source-type') || 'code';\n        let innerContent = '';\n\n        switch (lang) {\n          case 'mermaid':\n          case 'math':\n            let contentFromHtml = node.innerHTML;\n            // Convert <br> tags to newlines first\n            contentFromHtml = contentFromHtml.replace(/<br\\s*\\/?>/gi, '\\n');\n            // For Mermaid and Math, the content is expected to be text-like after <br> replacement.\n            // Avoid stripping other tags if they are part of the intended content (e.g. MathML in MathJax)\n            // Instead, rely on a robust way to get text content, then trim.\n            const tempDiv = node.ownerDocument.createElement('div');\n            tempDiv.innerHTML = contentFromHtml; // Let browser parse it\n            innerContent = tempDiv.textContent || tempDiv.innerText || ''; // Get text content\n            break;\n          case 'geojson':\n          case 'topojson':\n          case 'stl':\n            // For GeoJSON, TopoJSON, and STL, the original data is stored in data-original-source attribute\n            if (node.hasAttribute('data-original-source')) {\n              // The attribute value is HTML-escaped, browser will decode it when getting the attribute\n              innerContent = node.getAttribute('data-original-source');\n            } else if (node.textContent && node.textContent.trim()) {\n              // Fallback to text content if not yet rendered\n              innerContent = node.textContent;\n            } else {\n              // If no original data available, we can't recover it\n              console.warn('[HtmlToMarkdown] Missing original data for', lang, 'block');\n              innerContent = 'Error: Original data lost during rendering';\n            }\n            break;\n          case 'svg':\n            // The 'node' is the div with data-source-type=\"svg\".\n            // For proper round-trip fidelity, use the original source from the data attribute if available\n            if (node.hasAttribute('data-original-source')) {\n              // The attribute value is HTML-escaped, browser will decode it when getting the attribute\n              innerContent = node.getAttribute('data-original-source');\n            } else {\n              // Fallback to innerHTML if no original source stored\n              innerContent = node.innerHTML;\n            }\n            // console.warn('[HtmlToMarkdown] squibviewFencedBlock SVG: Captured content:', innerContent.substring(0, 200));\n            break;\n          case 'csv':\n          case 'tsv':\n          case 'psv':\n            const tableElement = node.querySelector('table');\n            if (tableElement) {\n              innerContent = this._htmlTableToDelimitedText(tableElement, lang);\n            } else {\n              innerContent = 'Error: Table not found for ' + lang;\n              console.warn('Could not find table inside div[data-source-type=\"' + lang + '\"]');\n            }\n            break;\n          default: // Handles 'javascript', 'python', 'code', etc.\n            const preElement = node.querySelector('pre');\n            if (preElement) {\n              const codeElement = preElement.querySelector('code');\n              // textContent of <code> or <pre> contains the code.\n              innerContent = (codeElement || preElement).textContent; // trimEnd removed, will be handled by trim() later\n            } else {\n              // Fallback if <pre> not found (e.g. if it was just a div with code)\n              innerContent = node.textContent; // trimEnd removed\n               console.warn('Could not find <pre> inside div[data-source-type=\"' + lang + '\"]');\n            }\n            break;\n        }\n\n        const langTag = (lang === 'code') ? '' : lang;\n        let finalInnerContent = innerContent.trim(); // Trim whitespace consistently here\n\n        if (finalInnerContent) { // If there's content after trimming\n          finalInnerContent = '\\n' + finalInnerContent + '\\n';\n        } else { // If content was empty or just whitespace\n          finalInnerContent = '\\n'; // Ensure a blank line for empty fenced blocks\n        }\n\n        return '\\n```' + langTag + finalInnerContent + '```\\n';\n      }\n    });\n\n    // Preserve HTML image tags by returning their outerHTML\n    this.turndownService.addRule('keepImageTags', {\n      filter: 'img',\n      replacement: function (content, node) {\n        return node.outerHTML;\n      }\n    });\n\n    // TEMPORARILY DISABLED: Preserve standalone <svg> tags NOT inside a data-source-type div\n    /*\n    this.turndownService.addRule('keepStandaloneSvgTags', {\n      filter: function(node) {\n        if (node.nodeName !== 'SVG') return false;\n        \n        // Don't process SVG elements that are inside a data-source-type div\n        const parentDiv = node.closest('div[data-source-type]');\n        if (parentDiv) {\n          console.warn('[HtmlToMarkdown] Skipping SVG inside data-source-type div');\n          return false;\n        }\n        \n        console.warn('[HtmlToMarkdown] Processing standalone SVG');\n        return true;\n      },\n      replacement: function (content, node) {\n        // console.warn('[HtmlToMarkdown] standalone SVG rule processing:', node.outerHTML);\n        return node.outerHTML;\n      }\n    });\n    */\n    \n    // Preserve Mermaid diagram blocks with special identifiers\n    this.turndownService.addRule('mermaid', {\n      filter: node => {\n        return node.nodeName === 'DIV' && \n               node.classList.contains('mermaid');\n      },\n      replacement: (content, node) => {\n        // Generate a unique ID for this mermaid block to help with matching later\n        const blockId = 'mermaid_' + Math.random().toString(36).substring(2, 10);\n        \n        // Store the raw content for later use\n        if (this._specialBlocks) {\n          this._specialBlocks.set(blockId, {\n            type: 'mermaid',\n            content: node.textContent\n          });\n        }\n        \n        // Return with special marker that can be identified later\n        return `\\n<div data-special-block=\"${blockId}\" class=\"mermaid\">\\n` +\n               node.textContent + \n               `\\n</div>\\n`;\n      }\n    });\n    \n    /*\n    // Preserve SVG elements with special identifiers\n    this.turndownService.addRule('svg', {\n      filter: node => {\n        // Only apply this rule if the SVG is NOT inside one of our data-source-type divs\n        // and has one of our specific identifiers (e.g., an id starting with \"squib-svg-\")\n        // or if it does not have a data-source-type attribute itself.\n        const isInsideSquibDiv = node.closest('div[data-source-type]');\n        const hasSquibIdentifier = node.id && node.id.startsWith('squib-svg-'); // Example identifier\n        const isSpecialSquibSvg = node.hasAttribute('data-source-type') && node.getAttribute('data-source-type') === 'svg';\n\n        if (isInsideSquibDiv || isSpecialSquibSvg) {\n          // console.warn('[HtmlToMarkdown] SVG rule: Skipping SVG inside data-source-type div or special SVG.');\n          return false; // Don't process if it's already handled or should be handled by squibviewFencedBlock\n        }\n        // console.warn('[HtmlToMarkdown] SVG rule: Processing standalone SVG:', node.outerHTML.substring(0,100));\n        return node.nodeName === 'SVG' && hasSquibIdentifier; // Or other conditions for standalone SVGs\n      },\n      replacement: function (content, node) {\n        // console.warn('[HtmlToMarkdown] SVG rule: Replacing with outerHTML for node:', node.outerHTML.substring(0,100));\n        return node.outerHTML; // Preserve the whole SVG tag\n      }\n    });\n    */\n\n    // Preserve GeoJSON map blocks\n    this.turndownService.addRule('geojson', {\n      filter: node => {\n        return node.nodeName === 'DIV' && \n               node.classList.contains('geojson-map');\n      },\n      replacement: (content, node) => {\n        // Generate a unique ID for this GeoJSON block\n        const blockId = 'geojson_' + Math.random().toString(36).substring(2, 10);\n        \n        // Try to extract the GeoJSON data from the script element\n        let geojsonContent = '';\n        try {\n          // The actual GeoJSON would be in a script tag or in a data attribute\n          // Here we'll use a placeholder since the actual data is hard to extract\n          geojsonContent = node.dataset.geojson || '{\"type\":\"FeatureCollection\",\"features\":[]}';\n        } catch(e) {\n          console.error('Error extracting GeoJSON data:', e);\n        }\n        \n        if (this._specialBlocks) {\n          this._specialBlocks.set(blockId, {\n            type: 'geojson',\n            content: geojsonContent\n          });\n        }\n        \n        return `\\n<div data-special-block=\"${blockId}\" class=\"geojson-container\">\\n` +\n               geojsonContent + \n               `\\n</div>\\n`;\n      }\n    });\n    \n    // Preserve Math blocks\n    this.turndownService.addRule('math', {\n      filter: node => {\n        return node.nodeName === 'DIV' && \n               node.classList.contains('math-display');\n      },\n      replacement: (content, node) => {\n        // Generate a unique ID for this math block\n        const blockId = 'math_' + Math.random().toString(36).substring(2, 10);\n        \n        // Get the raw math content (might be wrapped in $$...$$ in the original)\n        let mathContent = node.textContent;\n        \n        // Remove $$ delimiters if present\n        mathContent = mathContent.replace(/^\\$\\$([\\s\\S]*)\\$\\$$/, '$1');\n        \n        if (this._specialBlocks) {\n          this._specialBlocks.set(blockId, {\n            type: 'math',\n            content: mathContent\n          });\n        }\n        \n        return `\\n<div data-special-block=\"${blockId}\" class=\"math-container\">\\n` +\n               mathContent + \n               `\\n</div>\\n`;\n      }\n    });\n    \n    // Special handling for code blocks\n    this.turndownService.addRule('codeBlock', {\n      filter: node => {\n        return node.nodeName === 'PRE' && \n               node.firstChild && \n               node.firstChild.nodeName === 'CODE';\n      },\n      replacement: (content, node) => {\n        const code = node.firstChild.textContent;\n        let language = '';\n        \n        // Try to detect language from class\n        if (node.firstChild.className) {\n          const match = node.firstChild.className.match(/language-(\\w+)/);\n          if (match) {\n            language = match[1];\n          }\n        }\n        \n        return '\\n```' + language + '\\n' + code.trim() + '\\n```\\n';\n      }\n    });\n    \n    // Improve table handling\n    this.turndownService.addRule('tableCell', {\n      filter: ['th', 'td'],\n      replacement: (content, node) => {\n        return ' ' + content.trim() + ' |';\n      }\n    });\n    \n    this.turndownService.addRule('tableRow', {\n      filter: 'tr',\n      replacement: (content, node) => {\n        let prefix = '|';\n        \n        // Handle header rows\n        if (node.parentNode.nodeName === 'THEAD') {\n          const cells = node.querySelectorAll('th, td').length;\n          const separatorRow = '\\n|' + ' --- |'.repeat(cells);\n          return prefix + content + separatorRow;\n        }\n        \n        return prefix + content + '\\n';\n      }\n    });\n    \n    this.turndownService.addRule('table', {\n      filter: 'table',\n      replacement: (content, node) => {\n        // If this table is inside our data-source-type div, it's already handled.\n        if (node.parentElement && node.parentElement.hasAttribute('data-source-type')) {\n          const type = node.parentElement.getAttribute('data-source-type');\n          if (type === 'csv' || type === 'tsv' || type === 'psv') {\n            return content; // Turndown will process children, but our main rule handles the fence.\n          }\n        }\n        // Default table processing otherwise\n        // (Existing complex table rule logic from Turndown or custom might be here)\n        // For simplicity, using a basic version of Turndown's own table handling as a placeholder\n        // if not already handled by a more specific rule like the one above for data-source-type.\n        let markdown = '';\n        const headerRow = node.querySelector('thead tr');\n        if (headerRow) {\n          markdown += '|';\n          headerRow.querySelectorAll('th').forEach(th => {\n            markdown += ` ${this.turndownService.turndown(th.innerHTML).trim()} |`;\n          });\n          markdown += '\\n|';\n          headerRow.querySelectorAll('th').forEach(() => {\n            markdown += ' --- |';\n          });\n          markdown += '\\n';\n        }\n\n        const bodyRows = node.querySelectorAll('tbody tr');\n        bodyRows.forEach(row => {\n          markdown += '|';\n          row.querySelectorAll('td').forEach(td => {\n            markdown += ` ${this.turndownService.turndown(td.innerHTML).trim()} |`;\n          });\n          markdown += '\\n';\n        });\n        return '\\n' + markdown + '\\n';\n      }\n    });\n\n    // Ensure this class is aware of custom GFM task list items if not default in Turndown version\n    this.turndownService.keep(['li']); // Keep <li> to allow custom rule for task list items\n    this.turndownService.addRule('taskListItems', {\n      filter: function (node) {\n        return node.nodeName === 'LI' && node.firstChild && node.firstChild.nodeName === 'INPUT' && node.firstChild.type === 'checkbox';\n      },\n      replacement: function (content, node) {\n        const checkbox = node.firstChild;\n        const checked = checkbox.checked;\n        // Need to remove the input from the content that turndown processes for the <li>\n        // The first child (input) is already handled, process the rest of the <li> content.\n        // Create a temporary div to hold the rest of the li children\n        let restOfLiContent = '';\n        let current = checkbox.nextSibling;\n        while(current) {\n            restOfLiContent += current.outerHTML || current.textContent;\n            current = current.nextSibling;\n        }\n        // Turndown the rest of the LI content\n        const markdownContent = this.turndownService.turndown(restOfLiContent).trim(); \n        return (checked ? '[x] ' : '[ ] ') + markdownContent;\n      }\n    });\n  }\n  \n  /**\n   * Get a simplified hash code of a string for caching\n   * \n   * @private\n   * @param {string} str - The string to hash\n   * @returns {string} A hash representation of the string\n   */\n  _getStringHash(str) {\n    // Simple and fast hash function for strings\n    // This is not a cryptographic hash, just for caching purposes\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash.toString(36); // Convert to base36 for shorter string\n  }\n  \n  /**\n   * Convert HTML to Markdown with caching for performance\n   * \n   * @param {string} html - The HTML content to convert\n   * @param {Object} options - Additional options\n   * @param {string} options.originalSource - The original source if available\n   * @returns {string} The converted Markdown content\n   */\n  convert(html, options = {}) {\n    // Clear special blocks map for this conversion\n    this._specialBlocks.clear();\n    this._placeholders = [];\n    \n    // Use a hash of the HTML as the cache key\n    const cacheKey = this._getStringHash(html);\n    \n    // Check if we have a cached version\n    if (this.cache.has(cacheKey)) {\n      return this.cache.get(cacheKey);\n    }\n    \n    // Pre-process HTML to extract and preserve data-source-type containers\n    let processedHtml = this._preProcessSpecialContainers(html);\n    \n    // Convert the HTML to Markdown\n    let markdown = this.turndownService.turndown(processedHtml);\n    \n    // Post-process the markdown to restore special blocks\n    markdown = this._postProcessMarkdown(markdown, options.originalSource);\n    \n    // Cache the result\n    this.cache.set(cacheKey, markdown);\n    \n    // Keep the cache size under control\n    if (this.cache.size > this.cacheSize) {\n      // Remove the oldest entry\n      const firstKey = this.cache.keys().next().value;\n      this.cache.delete(firstKey);\n    }\n    \n    return markdown;\n  }\n  \n  /**\n   * Pre-process HTML to extract data-source-type containers and replace them with placeholders\n   * \n   * @private\n   * @param {string} html - The HTML to process\n   * @returns {string} - The processed HTML with placeholders\n   */\n  _preProcessSpecialContainers(html) {\n    // Handle both browser and test environments safely\n    if (typeof document === 'undefined' || !document.createElement) {\n      // If no document is available, skip pre-processing and use the original HTML\n      console.warn('Document not available, skipping pre-processing');\n      this._placeholders = [];\n      return html;\n    }\n    \n    let tempDiv;\n    try {\n      tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      // Test if querySelector is available - if not, we'll use a fallback approach\n      if (typeof tempDiv.querySelector !== 'function') {\n        throw new Error('querySelector not available');\n      }\n    } catch (e) {\n      // Fallback: if DOM methods aren't available, use simple regex-based processing\n      console.warn('DOM methods not available, using regex fallback for pre-processing');\n      return this._regexFallbackPreProcess(html);\n    }\n    \n    // Find all divs with data-source-type attribute\n    const specialDivs = tempDiv.querySelectorAll('div[data-source-type]');\n    const placeholders = [];\n    \n    specialDivs.forEach((div, index) => {\n      const sourceType = div.getAttribute('data-source-type');\n      const placeholder = `__SPECIAL_CONTAINER_${index}__`;\n      let content;\n      if (sourceType === 'svg' && div.hasAttribute('data-original-source')) {\n        content = div.getAttribute('data-original-source');\n      } else if (['mermaid', 'math', 'geojson', 'topojson', 'stl'].includes(sourceType) && div.hasAttribute('data-original-source')) {\n        content = div.getAttribute('data-original-source');\n      } else if (sourceType === 'csv' || sourceType === 'tsv' || sourceType === 'psv') {\n        const tableElement = div.querySelector('table');\n        if (tableElement) {\n          content = this._htmlTableToDelimitedText(tableElement, sourceType);\n        } else {\n          content = 'Error: Table not found for ' + sourceType;\n        }\n      } else {\n        const preElement = div.querySelector('pre');\n        if (preElement) {\n          const codeElement = preElement.querySelector('code');\n          content = (codeElement || preElement).textContent.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '');\n        } else {\n          content = div.textContent.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '');\n        }\n      }\n      placeholders.push({\n        placeholder,\n        type: sourceType,\n        content: content\n      });\n      const placeholderText = document.createTextNode(placeholder);\n      if (div.parentNode) {\n        div.parentNode.replaceChild(placeholderText, div);\n      }\n    });\n    \n    // Store placeholders for post-processing\n    this._placeholders = placeholders;\n    \n    return tempDiv.innerHTML;\n  }\n\n  /**\n   * Post-process markdown to restore special blocks and apply additional formatting\n   * \n   * @private\n   * @param {string} markdown - The converted markdown \n   * @param {string} originalSource - The original markdown source if available\n   * @returns {string} - The processed markdown\n   */\n  _postProcessMarkdown(markdown, originalSource) {\n    // First pass: Replace placeholders with proper fenced code blocks\n    if (this._placeholders && this._placeholders.length > 0) {\n      this._placeholders.forEach(({ placeholder, type, content }) => {\n        const langTag = (type === 'code') ? '' : type;\n        const blockContent = content.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '');\n        const fencedBlock = `\\`\\`\\`${langTag}\\n${blockContent}\\n\\`\\`\\``;\n        \n        // Handle both DOM-based placeholders (text nodes) and regex-based placeholders\n        const textPlaceholder = placeholder; // This is __SPECIAL_CONTAINER_${idx}__\n        const escapedPlaceholder = textPlaceholder.replace(/_/g, '\\\\_'); // Turndown escapes underscores\n        \n        // Replace the placeholder with the fenced block (try both forms)\n        if (markdown.includes(textPlaceholder)) {\n          markdown = markdown.replace(textPlaceholder, fencedBlock);\n        } else if (markdown.includes(escapedPlaceholder)) {\n          markdown = markdown.replace(escapedPlaceholder, fencedBlock);\n        }\n      });\n    }\n    \n    // Second pass: Convert any remaining special blocks markers back to proper markdown\n    \n    // Convert mermaid blocks\n    const mermaidBlockRegex = /<div data-special-block=\"mermaid_[^\"]*\" class=\"mermaid\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(mermaidBlockRegex, (match, content) => {\n      return `\\n\\`\\`\\`mermaid\\n${content.trim()}\\n\\`\\`\\`\\n`;\n    });\n    \n    // Convert SVG blocks\n    const svgBlockRegex = /<div data-special-block=\"svg_[^\"]*\" class=\"svg-container\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(svgBlockRegex, (match, content) => {\n      // Try to find a closing SVG tag\n      const svgMatch = content.match(/<svg[\\s\\S]*?<\\/svg>/);\n      if (svgMatch) {\n        return `\\n\\`\\`\\`svg\\n${svgMatch[0]}\\n\\`\\`\\`\\n`;\n      }\n      return match;\n    });\n    \n    // Convert GeoJSON blocks\n    const geojsonBlockRegex = /<div data-special-block=\"geojson_[^\"]*\" class=\"geojson-container\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(geojsonBlockRegex, (match, content) => {\n      try {\n        // Ensure content is valid JSON before creating the code block\n        JSON.parse(content);\n        return `\\n\\`\\`\\`geojson\\n${content.trim()}\\n\\`\\`\\`\\n`;\n      } catch (e) {\n        console.error('Invalid GeoJSON data:', e);\n        return `\\n\\`\\`\\`geojson\\n{\"type\":\"FeatureCollection\",\"features\":[]}\\n\\`\\`\\`\\n`;\n      }\n    });\n    \n    // Convert Math blocks\n    const mathBlockRegex = /<div data-special-block=\"math_[^\"]*\" class=\"math-container\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(mathBlockRegex, (match, content) => {\n      return `\\n\\`\\`\\`math\\n${content.trim()}\\n\\`\\`\\`\\n`;\n    });\n    \n    // Second pass: Restore blocks from original source if possible\n    if (originalSource) {\n      // Extract code blocks from original source\n      const codeBlockRegex = /```(\\w+)\\s*([\\s\\S]*?)```/g;\n      let match;\n      let blockIndex = 0;\n      const originalBlocks = [];\n      \n      while ((match = codeBlockRegex.exec(originalSource)) !== null) {\n        const type = match[1];\n        const content = match[2];\n        \n        if (type === 'mermaid' || type === 'svg' || type === 'geojson' || type === 'topojson' || type === 'stl' || type === 'math') {\n          originalBlocks.push({\n            type,\n            content: match[0],\n            index: blockIndex++\n          });\n        }\n      }\n      \n      // Try to match original blocks with current blocks\n      // This is a simplistic approach that assumes blocks are in the same order\n      \n      let mermaidIndex = 0;\n      let svgIndex = 0;\n      let geojsonIndex = 0;\n      let mathIndex = 0;\n      \n      // Replace mermaid blocks\n      markdown = markdown.replace(/```mermaid\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const mermaidBlocks = originalBlocks.filter(b => b.type === 'mermaid');\n        if (mermaidIndex < mermaidBlocks.length) {\n          return mermaidBlocks[mermaidIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace SVG blocks\n      markdown = markdown.replace(/```svg\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const svgBlocks = originalBlocks.filter(b => b.type === 'svg');\n        if (svgIndex < svgBlocks.length) {\n          return svgBlocks[svgIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace GeoJSON blocks\n      markdown = markdown.replace(/```geojson\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const geojsonBlocks = originalBlocks.filter(b => b.type === 'geojson');\n        if (geojsonIndex < geojsonBlocks.length) {\n          return geojsonBlocks[geojsonIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace TopoJSON blocks\n      let topojsonIndex = 0;\n      markdown = markdown.replace(/```topojson\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const topojsonBlocks = originalBlocks.filter(b => b.type === 'topojson');\n        if (topojsonIndex < topojsonBlocks.length) {\n          return topojsonBlocks[topojsonIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace STL blocks\n      let stlIndex = 0;\n      markdown = markdown.replace(/```stl\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const stlBlocks = originalBlocks.filter(b => b.type === 'stl');\n        if (stlIndex < stlBlocks.length) {\n          return stlBlocks[stlIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace Math blocks\n      markdown = markdown.replace(/```math\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const mathBlocks = originalBlocks.filter(b => b.type === 'math');\n        if (mathIndex < mathBlocks.length) {\n          return mathBlocks[mathIndex++].content;\n        }\n        return match;\n      });\n    }\n    \n    return markdown;\n  }\n\n  /**\n   * Converts an HTML table element to a delimited string (CSV, TSV, etc.).\n   * @param {HTMLTableElement} tableElement The HTML table element.\n   * @param {string} type The type of delimited format ('csv', 'tsv', 'psv').\n   * @returns {string} The delimited text representation of the table.\n   * @private\n   */\n  _htmlTableToDelimitedText(tableElement, type) {\n    let delimiter;\n    switch (type) {\n      case 'csv': delimiter = ','; break;\n      case 'tsv': delimiter = '\\t'; break;\n      case 'psv': delimiter = '|'; break;\n      default:    delimiter = ','; // Default to CSV\n    }\n\n    const data = [];\n    \n    // Check if we have proper DOM methods available\n    if (!tableElement || typeof tableElement.querySelectorAll !== 'function') {\n      console.warn('DOM methods not available for table extraction, using regex fallback');\n      return this._extractTableDataFromHtml(tableElement ? tableElement.outerHTML || tableElement.innerHTML || String(tableElement) : '', type);\n    }\n    \n    const rows = tableElement.querySelectorAll('tr');\n    \n    // Additional safety check for the rows result\n    if (!rows || typeof rows.forEach !== 'function') {\n      console.warn('querySelectorAll did not return proper NodeList, falling back to regex');\n      return this._extractTableDataFromHtml(tableElement.outerHTML || tableElement.innerHTML || String(tableElement), type);\n    }\n\n    rows.forEach(row => {\n      const rowData = [];\n      const cells = row.querySelectorAll('th, td');\n      cells.forEach(cell => {\n        // Basic text content extraction. For complex cell content, might need refinement.\n        // Replace newlines within a cell with a space, trim content.\n        let cellText = cell.textContent || '';\n        cellText = cellText.replace(/\\r?\\n|\\r/g, ' ').trim();\n        // If delimiter is comma, and cellText contains comma, quote it.\n        if (delimiter === ',' && cellText.includes(',')) {\n          cellText = `\"${cellText.replace(/\"/g, '\"\"')}\"`;\n        }\n        // If delimiter is tab, and cellText contains tab, it might be an issue depending on consumer.\n        // For PSV, if cellText contains pipe, it's an issue unless handled by quoting (not standard for PSV).\n        rowData.push(cellText);\n      });\n      data.push(rowData.join(delimiter));\n    });\n\n    return data.join('\\n');\n  }\n\n  /**\n   * Extract table data from HTML content using regex when DOM methods aren't available\n   * \n   * @private\n   * @param {string} htmlContent - The HTML content containing the table\n   * @param {string} type - The type of delimited format ('csv', 'tsv', 'psv')\n   * @returns {string} - The extracted delimited text\n   */\n  _extractTableDataFromHtml(htmlContent, type) {\n    let delimiter;\n    switch (type) {\n      case 'csv': delimiter = ','; break;\n      case 'tsv': delimiter = '\\t'; break;\n      case 'psv': delimiter = '|'; break;\n      default:    delimiter = ','; // Default to CSV\n    }\n\n    try {\n      // Extract all table rows using regex\n      const rowRegex = /<tr[^>]*>([\\s\\S]*?)<\\/tr>/gi;\n      const rows = [];\n      let match;\n\n      while ((match = rowRegex.exec(htmlContent)) !== null) {\n        const rowContent = match[1];\n        \n        // Extract all cells (th or td) from this row\n        const cellRegex = /<(?:th|td)[^>]*>([\\s\\S]*?)<\\/(?:th|td)>/gi;\n        const cells = [];\n        let cellMatch;\n\n        while ((cellMatch = cellRegex.exec(rowContent)) !== null) {\n          let cellText = cellMatch[1];\n          \n          // Remove HTML tags and decode entities\n          cellText = cellText\n            .replace(/<[^>]*>/g, '') // Remove all HTML tags\n            .replace(/&quot;/g, '\"')\n            .replace(/&#x27;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&')\n            .replace(/\\r?\\n|\\r/g, ' ') // Replace newlines with spaces\n            .trim();\n\n          // Handle CSV quoting if cell contains delimiter\n          if (delimiter === ',' && cellText.includes(',')) {\n            cellText = `\"${cellText.replace(/\"/g, '\"\"')}\"`;\n          }\n\n          cells.push(cellText);\n        }\n\n        if (cells.length > 0) {\n          rows.push(cells.join(delimiter));\n        }\n      }\n\n      return rows.join('\\n');\n    } catch (e) {\n      console.error('Error extracting table data from HTML:', e);\n      return 'Error: Could not extract table data';\n    }\n  }\n\n  /**\n   * Regex-based fallback for pre-processing when DOM methods aren't available\n   * \n   * @private\n   * @param {string} html - The HTML to process\n   * @returns {string} - The processed HTML with placeholders\n   */\n  _regexFallbackPreProcess(html) {\n    // Simple regex-based approach when DOM isn't available\n    // This matches div elements with data-source-type attributes\n    const divRegex = /<div[^>]*data-source-type=\"([^\"]*)\"[^>]*>([\\s\\S]*?)<\\/div>/g;\n    const placeholders = [];\n    let index = 0;\n    \n    const processedHtml = html.replace(divRegex, (match, sourceType, content) => {\n      const placeholder = `__SPECIAL_CONTAINER_${index}__`;\n      \n      // Extract content based on type\n      let extractedContent;\n      if (sourceType === 'svg') {\n        // For SVG, look for data-original-source attribute first\n        const originalSourceMatch = match.match(/data-original-source=\"([^\"]*)\"/);\n        if (originalSourceMatch) {\n          // Decode HTML entities in the attribute value\n          extractedContent = originalSourceMatch[1]\n            .replace(/&quot;/g, '\"')\n            .replace(/&#x27;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&');\n        } else {\n          // Fallback to inner SVG content\n          const svgMatch = content.match(/<svg[\\s\\S]*?<\\/svg>/);\n          extractedContent = svgMatch ? svgMatch[0] : content;\n        }\n      } else if (sourceType === 'csv' || sourceType === 'tsv' || sourceType === 'psv') {\n        // For delimited data, we need to extract from table using regex\n        extractedContent = this._extractTableDataFromHtml(content, sourceType);\n      } else {\n        // For code blocks, extract from pre/code elements\n        const preMatch = content.match(/<pre[^>]*><code[^>]*>([\\s\\S]*?)<\\/code><\\/pre>/);\n        if (preMatch) {\n          extractedContent = preMatch[1]\n            .replace(/<span[^>]*>/g, '')\n            .replace(/<\\/span>/g, '')\n            .replace(/&quot;/g, '\"')\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&');\n        } else {\n          // For other content types (mermaid, math, etc.), use raw content but decode HTML entities\n          extractedContent = content\n            .replace(/<[^>]*>/g, '') // Remove any HTML tags\n            .replace(/&quot;/g, '\"')\n            .replace(/&#x27;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&'); // &amp; should be last to avoid double-decoding\n        }\n      }\n      \n      placeholders.push({\n        placeholder,\n        type: sourceType,\n        content: extractedContent\n      });\n      \n      index++;\n      return `<p>${placeholder}</p>`;\n    });\n    \n    // Store placeholders for post-processing\n    this._placeholders = placeholders;\n    \n    return processedHtml;\n  }\n}","import DiffMatchPatch from 'diff-match-patch';\n\n/**\n * RevisionHistory class handles content revisions with memory-efficient diff storage\n */\nclass RevisionManager {\n  /**\n   * Creates a new RevisionManager instance\n   */\n  constructor() {\n    this.initialContent = '';\n    this.initialContentType = ''; // Store the initial content type separately\n    this.contentType = ''; // Current content type\n    this.diffs = [];\n    this.currentIndex = -1;\n    this.diffEngine = new DiffMatchPatch();\n  }\n\n  /**\n   * Initializes the revision manager with initial content\n   *\n   * @param {string} content - The initial content\n   * @param {string} contentType - The content type\n   */\n  initialize(content, contentType) {\n    this.initialContent = content;\n    this.initialContentType = contentType; // Store initial content type\n    this.contentType = contentType; // Current content type\n    this.diffs = [];\n    this.currentIndex = -1;\n  }\n\n  /**\n   * Adds a new revision\n   *\n   * @param {string} newContent - The new content to add as a revision\n   * @param {string} contentType - The content type of the revision\n   */\n  addRevision(newContent, contentType) {\n    // Calculate diff between current state and new state\n    const currentContent = this.getCurrentContent();\n    const diff = this.diffEngine.diff_main(currentContent, newContent);\n    this.diffEngine.diff_cleanupSemantic(diff);\n    const patchText = this.diffEngine.patch_toText(\n      this.diffEngine.patch_make(currentContent, diff)\n    );\n\n    // Remove any forward history if we're branching\n    if (this.currentIndex < this.diffs.length - 1) {\n      this.diffs = this.diffs.slice(0, this.currentIndex + 1);\n    }\n\n    // Add new diff and update content type if it changed\n    this.diffs.push({\n      diff: patchText,\n      contentType: contentType !== this.contentType ? contentType : undefined\n    });\n\n    // Update the content type if it changed\n    if (contentType !== this.contentType) {\n      this.contentType = contentType;\n    }\n\n    this.currentIndex = this.diffs.length - 1;\n  }\n\n  /**\n   * Moves backward in the revision history\n   *\n   * @returns {Object|null} The previous revision state or null if at the beginning\n   */\n  undo() {\n    if (this.currentIndex >= 0) {\n      this.currentIndex--;\n      return {\n        content: this.getCurrentContent(),\n        contentType: this.getCurrentContentType()\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Moves forward in the revision history\n   *\n   * @returns {Object|null} The next revision state or null if at the end\n   */\n  redo() {\n    if (this.currentIndex < this.diffs.length - 1) {\n      this.currentIndex++;\n      return {\n        content: this.getCurrentContent(),\n        contentType: this.getCurrentContentType()\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Gets the content at the current revision point\n   *\n   * @returns {string} The current content\n   */\n  getCurrentContent() {\n    if (this.currentIndex < 0) return this.initialContent;\n\n    // Apply all diffs up to currentIndex\n    let content = this.initialContent;\n    for (let i = 0; i <= this.currentIndex; i++) {\n      const patches = this.diffEngine.patch_fromText(this.diffs[i].diff);\n      const [patchedText] = this.diffEngine.patch_apply(patches, content);\n      content = patchedText;\n    }\n    return content;\n  }\n\n  /**\n   * Gets the content type at the current revision point\n   *\n   * @returns {string} The current content type\n   */\n  getCurrentContentType() {\n    if (this.currentIndex < 0) return this.initialContentType;\n\n    // Find the last content type change up to the current index\n    let currentType = this.initialContentType;\n    for (let i = 0; i <= this.currentIndex; i++) {\n      if (this.diffs[i].contentType !== undefined) {\n        currentType = this.diffs[i].contentType;\n      }\n    }\n    return currentType;\n  }\n\n  /**\n   * Sets the revision to a specific index\n   *\n   * @param {number} index - The revision index to set\n   * @returns {Object|null} The revision state at the index or null if invalid\n   */\n  setRevision(index) {\n    if (index >= -1 && index < this.diffs.length) {\n      this.currentIndex = index;\n      return {\n        content: this.getCurrentContent(),\n        contentType: this.getCurrentContentType()\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Returns the total number of revisions\n   *\n   * @returns {number} The number of revisions\n   */\n  getRevisionCount() {\n    return this.diffs.length;\n  }\n\n  /**\n   * Returns the current index in the revision history\n   *\n   * @returns {number} The current revision index\n   */\n  getCurrentIndex() {\n    return this.currentIndex;\n  }\n\n  /**\n   * Gets the content at a specific revision index\n   *\n   * @param {number} index - Revision index (-1 for initial, 0 to n-1 for revisions)\n   * @returns {Object} Object with { content: string, contentType: string }\n   */\n  getContentAtRevision(index) {\n    // Validate index\n    if (index < -1 || index >= this.diffs.length) {\n      throw new Error(`Invalid revision index: ${index}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n\n    // Return initial content if index is -1\n    if (index === -1) {\n      return {\n        content: this.initialContent,\n        contentType: this.initialContentType\n      };\n    }\n\n    // Apply diffs up to the specified index to get content\n    let content = this.initialContent;\n    for (let i = 0; i <= index; i++) {\n      const patches = this.diffEngine.patch_fromText(this.diffs[i].diff);\n      const [patchedText] = this.diffEngine.patch_apply(patches, content);\n      content = patchedText;\n    }\n\n    // Find the content type at this revision\n    let currentType = this.initialContentType;\n    for (let i = 0; i <= index; i++) {\n      if (this.diffs[i].contentType !== undefined) {\n        currentType = this.diffs[i].contentType;\n      }\n    }\n\n    return {\n      content: content,\n      contentType: currentType\n    };\n  }\n\n  /**\n   * Computes diff between two revisions\n   *\n   * @param {number} fromIndex - Starting revision index (null for current)\n   * @param {number} toIndex - Ending revision index (null for current)\n   * @returns {Array} DiffMatchPatch diff array\n   */\n  computeDiff(fromIndex = null, toIndex = null) {\n    // Default to comparing previous revision to current if not specified\n    if (fromIndex === null) {\n      fromIndex = this.currentIndex - 1;\n    }\n    if (toIndex === null) {\n      toIndex = this.currentIndex;\n    }\n\n    // Validate indices\n    if (fromIndex < -1 || fromIndex >= this.diffs.length) {\n      throw new Error(`Invalid fromIndex: ${fromIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (toIndex < -1 || toIndex >= this.diffs.length) {\n      throw new Error(`Invalid toIndex: ${toIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (fromIndex > toIndex) {\n      throw new Error(`fromIndex (${fromIndex}) cannot be greater than toIndex (${toIndex})`);\n    }\n\n    // Get content at both revisions\n    const fromContent = this.getContentAtRevision(fromIndex).content;\n    const toContent = this.getContentAtRevision(toIndex).content;\n\n    // Compute and return the diff\n    const diff = this.diffEngine.diff_main(fromContent, toContent);\n    this.diffEngine.diff_cleanupSemantic(diff);\n    \n    return diff;\n  }\n\n  /**\n   * Computes line-based diff between revisions\n   *\n   * @param {number} fromIndex - Starting revision index (null for current - 1)\n   * @param {number} toIndex - Ending revision index (null for current)\n   * @returns {Array} Array of line diff objects with { type, content, oldLineNum, newLineNum }\n   */\n  computeLineDiff(fromIndex = null, toIndex = null) {\n    // Get the raw diff\n    const rawDiff = this.computeDiff(fromIndex, toIndex);\n    \n    // Get the full content to properly handle line numbers\n    const fromContent = this.getContentAtRevision(fromIndex === null ? this.currentIndex - 1 : fromIndex).content;\n    const toContent = this.getContentAtRevision(toIndex === null ? this.currentIndex : toIndex).content;\n    \n    // Split content into lines for reference\n    const fromLines = fromContent.split('\\n');\n    const toLines = toContent.split('\\n');\n    \n    // Convert raw diff to line-based format using a different approach\n    const lineDiffs = [];\n    let currentFromLine = 0;\n    let currentToLine = 0;\n    let fromPos = 0;\n    let toPos = 0;\n    \n    for (const [operation, text] of rawDiff) {\n      if (operation === DiffMatchPatch.DIFF_EQUAL) {\n        // Count how many lines are in this equal section\n        const equalLines = text.split('\\n');\n        for (let i = 0; i < equalLines.length; i++) {\n          if (i === equalLines.length - 1 && equalLines[i] === '') {\n            // This is just the newline at the end of the previous line\n            continue;\n          }\n          if (currentFromLine < fromLines.length && currentToLine < toLines.length) {\n            lineDiffs.push({\n              type: 'unchanged',\n              content: fromLines[currentFromLine],\n              oldLineNum: currentFromLine + 1,\n              newLineNum: currentToLine + 1\n            });\n            currentFromLine++;\n            currentToLine++;\n          }\n        }\n      } else if (operation === DiffMatchPatch.DIFF_DELETE) {\n        // Count deleted lines\n        const deletedLines = text.split('\\n');\n        for (let i = 0; i < deletedLines.length; i++) {\n          if (i === deletedLines.length - 1 && deletedLines[i] === '') {\n            continue;\n          }\n          if (currentFromLine < fromLines.length) {\n            lineDiffs.push({\n              type: 'removed',\n              content: fromLines[currentFromLine],\n              oldLineNum: currentFromLine + 1,\n              newLineNum: null\n            });\n            currentFromLine++;\n          }\n        }\n      } else if (operation === DiffMatchPatch.DIFF_INSERT) {\n        // Count added lines\n        const addedLines = text.split('\\n');\n        for (let i = 0; i < addedLines.length; i++) {\n          if (i === addedLines.length - 1 && addedLines[i] === '') {\n            continue;\n          }\n          if (currentToLine < toLines.length) {\n            lineDiffs.push({\n              type: 'added',\n              content: toLines[currentToLine],\n              oldLineNum: null,\n              newLineNum: currentToLine + 1\n            });\n            currentToLine++;\n          }\n        }\n      }\n    }\n    \n    return lineDiffs;\n  }\n\n  /**\n   * Gets statistics about changes between revisions\n   *\n   * @param {number} fromIndex - Starting revision index (null for current - 1)\n   * @param {number} toIndex - Ending revision index (null for current)\n   * @returns {Object} Stats object with { additions, deletions, modifications, totalChanges }\n   */\n  getDiffStats(fromIndex = null, toIndex = null) {\n    // Get the line diff\n    const lineDiff = this.computeLineDiff(fromIndex, toIndex);\n    \n    // Calculate statistics\n    const stats = {\n      additions: 0,\n      deletions: 0,\n      modifications: 0,\n      totalChanges: 0\n    };\n    \n    // Count different types of changes\n    for (let i = 0; i < lineDiff.length; i++) {\n      const line = lineDiff[i];\n      \n      if (line.type === 'added') {\n        stats.additions++;\n        stats.totalChanges++;\n      } else if (line.type === 'removed') {\n        stats.deletions++;\n        stats.totalChanges++;\n        \n        // Check if this is part of a modification (removed line followed by added line)\n        // This is a simplified heuristic - a more sophisticated approach would use\n        // line similarity analysis\n        if (i + 1 < lineDiff.length && lineDiff[i + 1].type === 'added') {\n          stats.modifications++;\n          // Don't double count the deletion and addition as separate changes\n          stats.totalChanges--;\n        }\n      }\n    }\n    \n    return stats;\n  }\n\n  /**\n   * Gets metadata about a revision\n   *\n   * @param {number} index - Revision index (-1 for initial, 0+ for revisions)\n   * @returns {Object} Revision metadata including index, contentType, size, and other info\n   */\n  getRevisionInfo(index) {\n    // Validate index\n    if (index < -1 || index >= this.diffs.length) {\n      throw new Error(`Invalid revision index: ${index}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n\n    // Get the content at this revision\n    const { content, contentType } = this.getContentAtRevision(index);\n    \n    // Build revision info object\n    const info = {\n      index: index,\n      contentType: contentType,\n      contentSize: content.length,\n      lineCount: content.split('\\n').length,\n      isCurrent: index === this.currentIndex\n    };\n\n    // Add diff-specific info for non-initial revisions\n    if (index >= 0) {\n      info.diffSize = this.diffs[index].diff.length;\n      info.hasContentTypeChange = this.diffs[index].contentType !== undefined;\n      \n      // Add stats comparing to previous revision\n      const stats = this.getDiffStats(index - 1, index);\n      info.changeStats = stats;\n    } else {\n      // Initial revision has no diff\n      info.diffSize = 0;\n      info.hasContentTypeChange = false;\n      info.changeStats = {\n        additions: 0,\n        deletions: 0,\n        modifications: 0,\n        totalChanges: 0\n      };\n    }\n\n    return info;\n  }\n}\n\nexport { RevisionManager as RevisionHistory }; ","/* SquibView a live md/html/etc Editor/renderer with copy support\n supports markdown, html, and split view\n supports copying of formatted html and markdown\n supports copying of images as data urls\n supports copying of svg as png\n supports copying of tables as formatted tables\n supports copying of code blocks as formatted tables\n supports copying of math blocks as formatted math\n by deftio (c) 2024\n*/\n\n// Import required libraries\nimport TinyEmitter from 'tiny-emitter';\nimport DiffMatchPatch from 'diff-match-patch';\nimport './squibview.css'; // Import the main CSS file\nimport { VERSION, REPO_URL } from './version.js'; // Import version info\nimport EventEmitter3 from 'eventemitter3';\nimport MarkdownIt from 'markdown-it'; // Import markdown-it\nimport Papa from 'papaparse';\nimport HtmlToMarkdown from './HtmlToMarkdown.js';\nimport { RevisionHistory } from './RevisionHistory.js';\n\n// Import highlight.js for syntax highlighting\n// Use dynamic lookup to maintain compatibility with different build targets\nfunction getHljs() {\n  try {\n    if (typeof window !== 'undefined' && window.hljs) {\n      return window.hljs;\n    }\n    if (typeof global !== 'undefined' && global.hljs) {\n      return global.hljs;\n    }\n  } catch (e) {\n    // Ignore errors\n  }\n  return null;\n}\n\n// Fix for development mode\n/*\ntry {\n  if (!TinyEmitter || !DiffMatchPatch) {\n    // If direct imports failed, try the shim\n    const shim = await import('./import-shim.js');\n    if (!TinyEmitter && shim.TinyEmitter) TinyEmitter = shim.TinyEmitter;\n    if (!DiffMatchPatch && shim.DiffMatchPatch) DiffMatchPatch = shim.DiffMatchPatch;\n  }\n} catch (e) {\n  console.warn('Import shim not available, continuing with direct imports', e);\n}\n*/\n\n/**\n * SquibView is a lightweight editor that live-renders different content types\n */\nclass SquibView {\n  static defaultOptions = {\n    initialContent: '',\n    inputContentType: 'md', // 'md', 'html', 'reveal', 'csv' or 'tsv'\n    showControls: true,\n    titleShow: false,\n    titleContent: '',\n    initialView: 'split',\n    baseClass: 'squibview',\n    onReplaceSelectedText: null,\n    preserveImageTags: true // Changed default to true\n  };\n\n  static version = {\n    version: VERSION,\n    url: REPO_URL\n  };\n\n  /**\n   * Creates a new SquibView instance.\n   * \n   * @param {HTMLElement|string} element - The DOM element or selector where the editor will be mounted\n   * @param {Object} options - Configuration options for the editor\n   * @param {string} [options.initialContent=''] - Initial content to load\n   * @param {string} [options.inputContentType='md'] - Type of the initial content ('md', 'html', 'reveal', 'csv', 'tsv')\n   * @param {boolean} [options.showControls=true] - Whether to show the control buttons\n   * @param {boolean} [options.titleShow=false] - Whether to show the title section\n   * @param {string} [options.titleContent=''] - Content for the title section\n   * @param {string} [options.initialView='split'] - Initial view mode ('src', 'html', 'split')\n   * @param {string} [options.baseClass='squibview'] - Base CSS class for styling\n   * @throws {Error} Throws if the container element is not found\n   */\n  constructor(element, options = {}) {\n    this.options = { ...SquibView.defaultOptions, ...options };\n    \n    this.container = typeof element === 'string' ? document.querySelector(element) : element;\n\n    if (!this.container) {\n      throw new Error('Container element not found');\n    }\n\n    // Initialize event emitter for plugin communication and selection events\n    this.events = new TinyEmitter();\n    \n    // Initialize revision manager\n    this.revisionManager = new RevisionHistory();\n    \n    // Track last selection data\n    this.lastSelectionData = null;\n    \n    // Store text selection handlers\n    this._onTextReplacementHandler = null;\n    \n    // Initialize renderer registry\n    this.renderers = {};\n    \n    // Initialize HTML to Markdown converter\n    this._initializeHtmlToMarkdown();\n    \n    // Initialize libraries and register default renderers\n    this.initializeLibraries();\n    this.registerDefaultRenderers();\n    \n    // Create DOM structure\n    this.createStructure();\n    this.initializeEventHandlers();\n    this.initializeResizeObserver();\n    \n    // Set initial content\n    if (this.options.initialContent) {\n      this.revisionManager.initialize(this.options.initialContent, this.options.inputContentType);\n      this.setContent(this.options.initialContent, this.options.inputContentType, false);\n    } else {\n      this.revisionManager.initialize('', this.options.inputContentType);\n    }\n    \n    // Set initial view\n    this.setView(this.options.initialView);\n    \n    // Update UI elements based on current content type\n    this.updateTypeButtons();\n    \n    // Set up text replacement handler if provided in options\n    if (this.options.onReplaceSelectedText) {\n      this.onReplaceSelectedText = this.options.onReplaceSelectedText;\n    }\n  }\n  \n  /**\n   * Initialize the HTML to Markdown converter\n   * \n   * @private\n   */\n  async _initializeHtmlToMarkdown() {\n    try {\n      // Try to load synchronously first for better performance\n      if (typeof HtmlToMarkdown !== 'undefined') {\n        // If HtmlToMarkdown is already available globally (e.g., in UMD build)\n        this._htmlToMarkdownConverter = new HtmlToMarkdown({\n          cacheSize: 20 // Cache up to 20 recent conversions for better performance\n        });\n      } else {\n        // Fall back to dynamic import if needed\n        const module = await import('./HtmlToMarkdown.js');\n        const HtmlToMarkdownClass = module.default;\n        this._htmlToMarkdownConverter = new HtmlToMarkdownClass({\n          cacheSize: 20\n        });\n      }\n    } catch (err) {\n      console.error('Failed to load HtmlToMarkdown module:', err);\n      // Provide a minimal fallback implementation\n      this._htmlToMarkdownConverter = {\n        convert: (html) => {\n          const div = document.createElement('div');\n          div.innerHTML = html;\n          return div.textContent;\n        }\n      };\n    }\n  }\n\n  /**\n   * Initializes the required libraries for rendering content.\n   * Sets up Mermaid for diagrams and markdown-it for Markdown processing.\n   * \n   * @private\n   */\n  initializeLibraries() {\n    // Initialize Mermaid for diagram rendering\n    mermaid.initialize({\n      startOnLoad: false,\n      securityLevel: 'loose',\n      theme: 'default',\n      errorCallback: function (error) {\n        console.warn(\"Mermaid error:\", error);\n        return \"<div class='mermaid-error'></div>\";\n      }\n    });\n    mermaid.init(undefined, \".mermaid\");\n    \n    // Initialize markdown-it with options and syntax highlighting\n    this.md = new MarkdownIt({\n      html: true,\n      linkify: true,\n      typographer: true,\n      highlight: (str, lang) => {\n        const hljs = getHljs();\n        if (lang && hljs && hljs.getLanguage && hljs.getLanguage(lang)) {\n          try {\n            return hljs.highlight(str, { language: lang }).value;\n          } catch (e) {\n            // Fallback to no highlighting on error\n          }\n        }\n        return '';\n      }\n    });\n\n    // Configure custom fence rendering for markdown-it\n    const defaultFence = this.md.renderer.rules.fence ||\n      ((tokens, idx, options, env, self) => self.renderToken(tokens, idx, options));\n\n    this.md.renderer.rules.fence = (tokens, idx, options, env, self) => {\n      const token = tokens[idx];\n      const info = token.info.trim().toLowerCase(); // Normalize to lowercase\n      const content = token.content; // Raw content from the fenced block\n\n      // Handle Mermaid diagrams\n      if (info === 'mermaid') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        return `<div class=\"mermaid\" data-source-type=\"mermaid\">${escapedContent}</div>`;\n      }\n\n      // Handle SVG directly\n      if (info === 'svg') {\n        const escapeForAttribute = (str) => {\n          return str.replace(/&/g, '&amp;')\n                    .replace(/\"/g, '&quot;')\n                    .replace(/'/g, '&#x27;')\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;');\n        };\n        const escapedSource = escapeForAttribute(content);\n        return `<div class=\"svg-container\" data-source-type=\"svg\" data-original-source=\"${escapedSource}\">${content}</div>`;\n      }\n\n      // Handle GeoJSON maps\n      if (info === 'geojson') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        const escapedSource = this.md.utils.escapeHtml(content);\n        return `<div class=\"geojson-container\" data-source-type=\"geojson\" data-original-source=\"${escapedSource}\">${escapedContent}</div>`;\n      }\n\n      // Handle TopoJSON maps  \n      if (info === 'topojson') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        const escapedSource = this.md.utils.escapeHtml(content);\n        return `<div class=\"topojson-container\" data-source-type=\"topojson\" data-original-source=\"${escapedSource}\">${escapedContent}</div>`;\n      }\n\n      // Handle STL 3D models\n      if (info === 'stl') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        const escapedSource = this.md.utils.escapeHtml(content);\n        return `<div class=\"stl-container\" data-source-type=\"stl\" data-original-source=\"${escapedSource}\">${escapedContent}</div>`;\n      }\n\n      // Handle mathematical expressions\n      if (info === 'math') {\n        const mathId = 'math-' + Math.random().toString(36).substring(2, 15);\n        // Pass raw 'content' to MathJax, wrapped in $$ ... $$ on a single line\n        const singleLineContent = content.replace(/\\r?\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n        return `<div id=\"${mathId}\" class=\"math-display\" data-source-type=\"math\">$${'$'}${singleLineContent}$${'$'}</div>`;\n      }\n\n      // Default fence renderer (for code blocks)\n      const langName = token.info.trim().split(/\\s+/)[0] || '';\n      const escapedLangName = this.md.utils.escapeHtml(langName);\n      const tableLangs = ['csv', 'tsv', 'psv'];\n      if (tableLangs.includes(langName)) {\n        try {\n          if (typeof Papa === 'undefined' || typeof Papa.parse !== 'function') {\n            return `<pre class=\"squibview-error\" data-source-type=\"${escapedLangName}\">Error: PapaParse library not loaded.</pre>`;\n          }\n          let parseConfig = { skipEmptyLines: true };\n          if (langName !== 'tsv') parseConfig.delimiter = langName === 'csv' ? ',' : '|';\n          const parsedData = Papa.parse(content, parseConfig);\n          if (parsedData.errors && parsedData.errors.length > 0) {\n            let errorMessages = parsedData.errors.map(err => `${err.type}: ${err.message} (Row: ${err.row})`).join('\\n');\n            return `<pre class=\"squibview-error\" data-source-type=\"${escapedLangName}\">Error parsing ${langName} data:\\n${this.md.utils.escapeHtml(errorMessages)}</pre>`;\n          }\n          return `<div data-source-type=\"${escapedLangName}\">${this._dataToHtmlTable(parsedData.data)}</div>`;\n        } catch (e) {\n          return `<pre class=\"squibview-error\" data-source-type=\"${escapedLangName}\">Could not render ${this.md.utils.escapeHtml(langName)} table.</pre>`;\n        }\n      }\n      let codeHtml;\n      const hljs = getHljs();\n      if (hljs && hljs.getLanguage && hljs.getLanguage(langName)) {\n        try {\n          const highlightedContent = hljs.highlight(content, { language: langName, ignoreIllegals: true }).value;\n          codeHtml = `<pre><code class=\"hljs language-${escapedLangName}\" data-source-type=\"code\" data-lang=\"${escapedLangName}\">${highlightedContent}</code></pre>`;\n        } catch (e) {\n          // Fallback to non-highlighted if error occurs\n        }\n      }\n      if (!codeHtml) {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        codeHtml = `<pre><code class=\"hljs language-${escapedLangName}\" data-source-type=\"code\" data-lang=\"${escapedLangName}\">${escapedContent}</code></pre>`;\n      }\n      return `<div data-source-type=\"${escapedLangName || 'code'}\">${codeHtml}</div>`;\n    };\n  }\n\n  /**\n   * Converts parsed data (array of arrays) to an HTML table string.\n   *\n   * @param {Array<Array<string>>} rows - The data rows, where the first row is the header.\n   * @returns {string} An HTML table string.\n   * @private\n   */\n  _dataToHtmlTable(rows) {\n    if (!rows || rows.length === 0) {\n      return '<p class=\"squibview-info\">No data to display.</p>';\n    }\n\n    let html = '<table class=\"squibview-data-table\">';\n\n    // Header\n    const headerCells = rows[0];\n    html += '<thead><tr>';\n    headerCells.forEach(cell => {\n      html += `<th>${this.md.utils.escapeHtml(String(cell))}</th>`;\n    });\n    html += '</tr></thead>';\n\n    // Body\n    html += '<tbody>';\n    for (let i = 1; i < rows.length; i++) {\n      html += '<tr>';\n      const bodyCells = rows[i];\n      // Ensure all rows have the same number of cells as the header\n      // by either truncating or padding with empty cells\n      for (let j = 0; j < headerCells.length; j++) {\n          const cellContent = bodyCells[j] !== undefined ? String(bodyCells[j]) : '';\n          html += `<td>${this.md.utils.escapeHtml(cellContent)}</td>`;\n      }\n      html += '</tr>';\n    }\n    html += '</tbody></table>';\n\n    return html;\n  }\n\n  /**\n   * Registers a content type renderer with specified configuration\n   * \n   * @param {string} type - The content type identifier ('md', 'html', etc.)\n   * @param {Object} config - Renderer configuration\n   * @param {Function} config.render - Function to render the content type\n   * @param {Function} [config.sourceToOutput] - Function to transform source to output\n   * @param {Function} [config.outputToSource] - Function to transform output back to source\n   * @param {Object} [config.operations] - Map of operations that can be performed on this content type\n   * @param {Array} [config.buttons] - Buttons to display when this content type is active\n   */\n  registerRenderer(type, config) {\n    this.renderers[type] = config;\n    \n    // Trigger event for plugins to react\n    this.events.emit('renderer:registered', type, config);\n    \n    // Update buttons if this is the current content type\n    if (this.inputContentType === type) {\n      this.updateTypeButtons();\n    }\n  }\n  \n  /**\n   * Registers the default renderers for standard content types\n   * \n   * @private\n   */\n  registerDefaultRenderers() {\n    // Markdown renderer\n    this.registerRenderer('md', {\n      render: (source) => this.renderMarkdown(source),\n      sourceToOutput: (source) => this.md.render(source),\n      outputToSource: (output, options = {}) => this.htmlToMarkdown(output, options),\n      operations: {\n        increaseHeadings: (src) => this.markdownAdjustHeadings(src, 1),\n        decreaseHeadings: (src) => this.markdownAdjustHeadings(src, -1),\n        removeHR: (src) => src.replace(/---/g, ''),\n        fixLinefeeds: (src) => this.fixLinefeedsInMarkdown(src),\n        toggleLinefeedView: () => { this.toggleLinefeedView(); return this.getContent(); }\n      },\n      buttons: [\n        { label: 'H-', action: 'decreaseHeadings', title: 'Decrease heading levels' },\n        { label: 'H+', action: 'increaseHeadings', title: 'Increase heading levels' },\n        { label: 'Remove HR', action: 'removeHR', title: 'Remove horizontal rules' },\n        { label: 'Smart Linefeeds', action: 'fixLinefeeds', title: 'Convert all single line breaks to hard line breaks (two spaces + newline) in the source.' }\n      ]\n    });\n    \n    // HTML renderer\n    this.registerRenderer('html', {\n      render: (source) => this.renderHTML(source),\n      sourceToOutput: (source) => source,\n      outputToSource: (output) => output,\n      operations: {},\n      buttons: []\n    });\n    \n    // RevealJS renderer\n    this.registerRenderer('reveal', {\n      render: (source) => this.renderHTML(this.makeRevealJSFullPage(source)),\n      sourceToOutput: (source) => this.makeRevealJSFullPage(source),\n      outputToSource: (output) => output,\n      operations: {},\n      buttons: []\n    });\n    \n    // CSV renderer\n    this.registerRenderer('csv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, ',');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, ','),\n      outputToSource: (output) => this.tableToCSV(output),\n      operations: {},\n      buttons: []\n    });\n    \n    // TSV renderer\n    this.registerRenderer('tsv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, '\\t');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, '\\t'),\n      outputToSource: (output) => this.tableToCSV(output, '\\t'),\n      operations: {},\n      buttons: []\n    });\n    \n    // Semicolon separated values renderer\n    this.registerRenderer('semisv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, ';');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, ';'),\n      outputToSource: (output) => this.tableToCSV(output, ';'),\n      operations: {},\n      buttons: []\n    });\n    \n    // Space separated values renderer\n    this.registerRenderer('ssv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, ' ');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, ' '),\n      outputToSource: (output) => this.tableToCSV(output, ' '),\n      operations: {},\n      buttons: []\n    });\n  }\n\n  /**\n   * Creates the DOM structure for the editor.\n   * Sets up the title bar, controls, and editor areas.\n   * \n   * @private\n   */\n  createStructure() {\n    this.container.classList.add(this.options.baseClass);\n\n    this.container.innerHTML = `\n      <div class=\"${this.options.baseClass}-title\" ${!this.options.titleShow ? 'style=\"display:none\"' : ''}>\n        ${this.options.titleContent}\n      </div>\n      <div class=\"${this.options.baseClass}-controls\" ${!this.options.showControls ? 'style=\"display:none\"' : ''}>\n        <button data-view='src'>Source</button>\n        <button data-view=\"html\">Rendered</button>\n        <button data-view=\"split\">Split</button>\n        <button class=\"copy-src-button\">Copy Source</button>\n        <button class=\"copy-html-button\">Copy Rendered</button>\n        <button class=\"revision-undo\" title=\"Undo\">&#x21A9;</button>\n        <button class=\"revision-redo\" title=\"Redo\">&#x21AA;</button>\n        <span class=\"${this.options.baseClass}-type-buttons\"></span>\n      </div>\n      <div class=\"${this.options.baseClass}-editor\">\n        <textarea class=\"${this.options.baseClass}-input\"></textarea>\n        <div class=\"${this.options.baseClass}-output\"></div>\n      </div>\n    `;\n\n    this.title = this.container.querySelector(`.${this.options.baseClass}-title`);\n    this.controls = this.container.querySelector(`.${this.options.baseClass}-controls`);\n    this.editor = this.container.querySelector(`.${this.options.baseClass}-editor`);\n    this.input = this.container.querySelector(`.${this.options.baseClass}-input`);\n    this.output = this.container.querySelector(`.${this.options.baseClass}-output`);\n    this.typeButtonsContainer = this.container.querySelector(`.${this.options.baseClass}-type-buttons`);\n    this.universalButtonsContainer = this.container.querySelector(`.${this.options.baseClass}-universal-buttons`);\n  }\n\n  /**\n   * Updates the type-specific buttons based on the current content type\n   * \n   * @private\n   */\n  updateTypeButtons() {\n    // Clear current buttons\n    this.typeButtonsContainer.innerHTML = '';\n    \n    // Get buttons for current content type\n    const renderer = this.renderers[this.inputContentType];\n    if (renderer && renderer.buttons && renderer.buttons.length > 0) {\n      renderer.buttons.forEach(button => {\n        const btn = document.createElement('button');\n        btn.textContent = button.label;\n        if (button.title) {\n          btn.title = button.title;\n        }\n        btn.addEventListener('click', () => {\n          if (renderer.operations && renderer.operations[button.action]) {\n            const newContent = renderer.operations[button.action](this.getContent());\n            this.setContent(newContent, this.inputContentType);\n          }\n        });\n        this.typeButtonsContainer.appendChild(btn);\n      });\n    }\n  }\n\n  /**\n   * Sets up event listeners for user interactions.\n   * Handles view changes, copy functionality, and input changes.\n   * \n   * @private\n   */\n  initializeEventHandlers() {\n    // View buttons\n    this.controls.querySelectorAll('button[data-view]').forEach(button => {\n      button.addEventListener('click', () => this.setView(button.dataset.view));\n    });\n\n    // Copy buttons\n    this.controls.querySelector('.copy-src-button').addEventListener('click', () => this.copySource());\n    this.controls.querySelector('.copy-html-button').addEventListener('click', () => this.copyHTML());\n    \n    // Undo/redo buttons\n    this.controls.querySelector('.revision-undo').addEventListener('click', () => this.revisionUndo());\n    this.controls.querySelector('.revision-redo').addEventListener('click', () => this.revisionRedo());\n\n    // Input source change event\n    this.input.addEventListener('input', () => { \n      this.setContent(); \n    });\n    \n    // Text selection event in source panel\n    this.input.addEventListener('mouseup', () => {\n      const selection = document.getSelection();\n      if (selection && selection.toString().trim() !== '') {\n        const selectionData = {\n          panel: 'source',\n          text: selection.toString(),\n          range: {\n            start: this.input.selectionStart,\n            end: this.input.selectionEnd\n          }\n        };\n        this.lastSelectionData = selectionData;\n        this.events.emit('text:selected', selectionData);\n      }\n    });\n    \n    // Listen for changes in rendered content to support bidirectional editing\n    // Use a debounce pattern to prevent processing every keystroke\n    let editDebounceTimer = null;\n    \n    // Create a map to store special content blocks\n    this.specialContentBlocks = new Map();\n    \n    this.output.addEventListener('input', () => {\n      if (this.currentView === 'html' || this.currentView === 'split') {\n        const editableContent = this.output.querySelector('[contenteditable=\"true\"]');\n        if (editableContent) {\n          // Clear any existing timer\n          if (editDebounceTimer) {\n            clearTimeout(editDebounceTimer);\n          }\n          \n          // Set a new timer to process the edit after a short delay (300ms)\n          editDebounceTimer = setTimeout(() => {\n            const renderedContent = editableContent.innerHTML;\n            const renderer = this.renderers[this.inputContentType];\n            \n            if (renderer && renderer.outputToSource) {\n              // Get the original source markdown\n              const originalSource = this.input.value;\n              \n              // Process the HTML back to markdown, passing original source for context\n              let newSource = renderer.outputToSource(renderedContent, {\n                originalSource: originalSource\n              });\n              \n              // Update source without triggering render cycle\n              this.input.value = newSource;\n              \n              // Only save revision after editing stops for a moment\n              this.revisionManager.addRevision(newSource, this.inputContentType);\n              \n              // Emit content change event\n              this.events.emit('content:change', newSource, this.inputContentType);\n            }\n            \n            // Clear the timer reference\n            editDebounceTimer = null;\n          }, 300);\n        }\n      }\n    });\n    \n    // Text selection event in rendered panel\n    this.output.addEventListener('mouseup', () => {\n      const selection = document.getSelection();\n      if (selection && selection.toString().trim() !== '') {\n        const range = selection.getRangeAt(0);\n        const selectionData = {\n          panel: 'rendered',\n          text: selection.toString(),\n          range: range,\n          element: this.output.querySelector('[contenteditable=\"true\"]')\n        };\n        this.lastSelectionData = selectionData;\n        this.events.emit('text:selected', selectionData);\n      }\n    });\n  }\n  \n  /**\n   * Preserves special content blocks like Mermaid diagrams, SVG, GeoJSON and math from original source\n   * @param {string} originalSource - The original markdown source\n   * @param {string} newSource - The new source after HTML-to-Markdown conversion\n   * @returns {string} - Source with special blocks preserved\n   * @private\n   */\n  preserveSpecialBlocks(originalSource, newSource) {\n    // If no original source, just return the new source\n    if (!originalSource) return newSource;\n    \n    // Extract special blocks from original source\n    const specialBlocks = [];\n    \n    // Extract Mermaid blocks: ```mermaid ... ```\n    const mermaidRegex = /```mermaid\\s*([\\s\\S]*?)```/g;\n    let mermaidMatch;\n    while ((mermaidMatch = mermaidRegex.exec(originalSource)) !== null) {\n      specialBlocks.push({\n        type: 'mermaid',\n        content: mermaidMatch[0],\n        startIndex: mermaidMatch.index,\n        endIndex: mermaidMatch.index + mermaidMatch[0].length\n      });\n    }\n    \n    // Extract GeoJSON blocks: ```geojson ... ```\n    const geojsonRegex = /```geojson\\s*([\\s\\S]*?)```/g;\n    let geojsonMatch;\n    while ((geojsonMatch = geojsonRegex.exec(originalSource)) !== null) {\n      specialBlocks.push({\n        type: 'geojson',\n        content: geojsonMatch[0],\n        startIndex: geojsonMatch.index,\n        endIndex: geojsonMatch.index + geojsonMatch[0].length\n      });\n    }\n    \n    // Extract Math blocks: ```math ... ```\n    const mathRegex = /```math\\s*([\\s\\S]*?)```/g;\n    let mathMatch;\n    while ((mathMatch = mathRegex.exec(originalSource)) !== null) {\n      specialBlocks.push({\n        type: 'math',\n        content: mathMatch[0],\n        startIndex: mathMatch.index,\n        endIndex: mathMatch.index + mathMatch[0].length\n      });\n    }\n    \n    // Find corresponding locations in new source and preserve the special blocks\n    // This is a heuristic approach - we look for markers that might indicate where\n    // the special content was converted to something else\n    \n    let modifiedSource = newSource;\n    \n    // Look for elements in the newSource which likely represent our special blocks\n    const mermaidDivRegex = /<div[^>]*class=['\"]?mermaid['\"]?[^>]*>([\\s\\S]*?)<\\/div>/g;\n    const geojsonDivRegex = /<div[^>]*class=['\"]?geojson-map['\"]?[^>]*>[\\s\\S]*?<\\/div>/g;\n    const mathDivRegex = /<div[^>]*class=['\"]?math-display['\"]?[^>]*>[\\s\\S]*?<\\/div>/g;\n    \n    // Replace mermaid divs with original mermaid code blocks\n    let mermaidDivMatch;\n    let mermaidIndex = 0;\n    while ((mermaidDivMatch = mermaidDivRegex.exec(modifiedSource)) !== null) {\n      // Find the next available mermaid block\n      const mermaidBlocks = specialBlocks.filter(block => block.type === 'mermaid');\n      if (mermaidIndex < mermaidBlocks.length) {\n        // Replace the div with the original mermaid code block\n        modifiedSource = \n          modifiedSource.substring(0, mermaidDivMatch.index) + \n          mermaidBlocks[mermaidIndex].content + \n          modifiedSource.substring(mermaidDivMatch.index + mermaidDivMatch[0].length);\n        \n        mermaidIndex++;\n      }\n    }\n    \n    // Replace GeoJSON divs with original GeoJSON code blocks\n    let geojsonDivMatch;\n    let geojsonIndex = 0;\n    while ((geojsonDivMatch = geojsonDivRegex.exec(modifiedSource)) !== null) {\n      // Find the next available GeoJSON block\n      const geojsonBlocks = specialBlocks.filter(block => block.type === 'geojson');\n      if (geojsonIndex < geojsonBlocks.length) {\n        // Replace the div with the original GeoJSON code block\n        modifiedSource = \n          modifiedSource.substring(0, geojsonDivMatch.index) + \n          geojsonBlocks[geojsonIndex].content + \n          modifiedSource.substring(geojsonDivMatch.index + geojsonDivMatch[0].length);\n        \n        geojsonIndex++;\n      }\n    }\n    \n    // Replace Math divs with original Math code blocks\n    let mathDivMatch;\n    let mathIndex = 0;\n    while ((mathDivMatch = mathDivRegex.exec(modifiedSource)) !== null) {\n      // Find the next available math block\n      const mathBlocks = specialBlocks.filter(block => block.type === 'math');\n      if (mathIndex < mathBlocks.length) {\n        // Replace the div with the original math code block\n        modifiedSource = \n          modifiedSource.substring(0, mathDivMatch.index) + \n          mathBlocks[mathIndex].content + \n          modifiedSource.substring(mathDivMatch.index + mathDivMatch[0].length);\n        \n        mathIndex++;\n      }\n    }\n    \n    return modifiedSource;\n  }\n  \n  /**\n   * Sets up a resize observer to adjust the layout when the container size changes.\n   * \n   * @private\n   */\n  initializeResizeObserver() {\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        if (entry.target === this.container) {\n          this.adjustLayout();\n        }\n      }\n    });\n    resizeObserver.observe(this.container);\n  }\n\n  /**\n   * Adjusts the layout of the editor components based on the current view and container size.\n   * \n   * @private\n   */\n  adjustLayout() {\n    const containerRect = this.container.getBoundingClientRect();\n    const titleHeight = this.title.offsetHeight;\n    const controlsHeight = this.controls.offsetHeight;\n\n    const availableHeight = containerRect.height - titleHeight - controlsHeight;\n    const availableWidth = containerRect.width;\n    this.editor.style.height = `${availableHeight}px`;\n    this.editor.style.width = `${availableWidth}px`;\n\n    if (this.currentView === 'split') {\n      this.input.style.width = '50%';\n      this.output.style.width = '50%';\n    } else if (this.currentView === 'src') {\n      this.input.style.width = '100%';\n    } else if (this.currentView === 'html') {\n      this.output.style.width = '100%';\n    }\n    \n    // Emit layout change event for plugins\n    this.events.emit('layout:change', this.currentView, {\n      containerWidth: availableWidth,\n      containerHeight: availableHeight\n    });\n  }\n\n  /**\n   * Sets the content of the editor and renders it.\n   * \n   * @param {string} [content=this.input.value] - The content to set\n   * @param {string} [contentType=this.inputContentType] - The type of content ('md', 'html', 'reveal', 'csv', 'tsv')\n   * @param {boolean} [saveRevision=true] - Whether to save this change to the revision history\n   */\n  setContent(content = this.input.value, contentType = this.inputContentType, saveRevision = true) {\n    // Check if content type has changed\n    const typeChanged = contentType !== this.inputContentType;\n    if (typeChanged) {\n      this.inputContentType = contentType;\n      this.updateTypeButtons();\n    }\n    \n    this.input.value = content;\n    \n    // Add to revision history if required\n    if (saveRevision) {\n      this.revisionManager.addRevision(content, contentType);\n    }\n    \n    // Render the content\n    this.renderOutput();\n    \n    // Emit content change event\n    this.events.emit('content:change', content, contentType);\n  }\n\n  /**\n   * Undoes the last change if possible.\n   * Decrements the revision index and restores the content from that revision.\n   */\n  revisionUndo() {\n    const prevState = this.revisionManager.undo();\n    if (prevState) {\n      this.input.value = prevState.content;\n      this.inputContentType = prevState.contentType;\n      \n      // Update buttons if content type changed\n      this.updateTypeButtons();\n      \n      // Render the content\n      this.renderOutput();\n      \n      // Emit undo event\n      this.events.emit('revision:undo', prevState.content, prevState.contentType);\n    }\n  }\n  \n  /**\n   * Redoes a previously undone change if possible.\n   * Increments the revision index and restores the content from that revision.\n   */\n  revisionRedo() {\n    const nextState = this.revisionManager.redo();\n    if (nextState) {\n      this.input.value = nextState.content;\n      this.inputContentType = nextState.contentType;\n      \n      // Update buttons if content type changed\n      this.updateTypeButtons();\n      \n      // Render the content\n      this.renderOutput();\n      \n      // Emit redo event\n      this.events.emit('revision:redo', nextState.content, nextState.contentType);\n    }\n  }\n  \n  /**\n   * Sets the revision to a specific index in the history.\n   * \n   * @param {number} index - The revision index to set\n   */\n  revisionSet(index) {\n    const state = this.revisionManager.setRevision(index);\n    if (state) {\n      this.input.value = state.content;\n      this.inputContentType = state.contentType;\n      \n      // Update buttons if content type changed\n      this.updateTypeButtons();\n      \n      // Render the content\n      this.renderOutput();\n      \n      // Emit revision:set event\n      this.events.emit('revision:set', index, state.content, state.contentType);\n    }\n  }\n  \n  /**\n   * Returns the total number of revisions in the history.\n   * \n   * @returns {number} The number of revisions\n   */\n  revisionNumRevsions() {\n    return this.revisionManager.getRevisionCount();\n  }\n  \n  /**\n   * Returns the current index in the revision history.\n   * \n   * @returns {number} The current revision index\n   */\n  revisionGetCurrentIndex() {\n    return this.revisionManager.getCurrentIndex();\n  }\n\n  /**\n   * Gets the current content from the input textarea.\n   * \n   * @returns {string} The current content\n   */\n  getContent() {\n    return this.input.value;\n  }\n\n  /**\n   * Cleans markdown content by removing markdown code fence markers.\n   * \n   * @param {string} md - The markdown content to clean\n   * @returns {string} The cleaned markdown content\n   */\n  cleanMarkdown(md) {\n    return md.replace(/^```markdown\\s+/, '').replace(/```$/, '');\n  }\n\n  /**\n   * Renders Markdown content to HTML and processes the result.\n   * Converts images to data URLs and initializes Mermaid diagrams.\n   * \n   * @param {string} [md] - The Markdown content to render, defaults to current input value\n   * @returns {Promise<void>} A promise that resolves when rendering is complete\n   */\n  async renderMarkdown(md) {\n    const markdown = md || this.input.value;\n    const html = this.md.render(markdown);\n    let processedHtml = html;\n    if (this.linefeedViewEnabled) {\n      // Only process paragraphs, not code blocks or pre\n      processedHtml = processedHtml.replace(/(<p>)([\\s\\S]*?)(<\\/p>)/g, (match, open, content, close) => {\n        // Split by <br> or by line\n        const lines = content.split(/<br\\s*\\/?>(?![^<]*<\\/code>)/g);\n        const processedLines = lines.map(line => {\n          // If line is empty or already ends with <br>, skip\n          if (/\\s*<\\/?.*?>\\s*/.test(line) || line.trim() === '') return line;\n          // If line already ends with <br>, skip\n          if (/<br\\s*\\/?>(\\s*)$/.test(line)) return line;\n          return line + '<br>';\n        });\n        return open + processedLines.join('') + close;\n      });\n    }\n    this.output.innerHTML = \"<div contenteditable='true'>\" + processedHtml + \"</div>\";\n\n    // Convert all images to data URLs immediately after rendering\n    const contentDiv = this.output.querySelector('div[contenteditable=\"true\"]');\n    const images = contentDiv.querySelectorAll('img');\n\n    // render images to data urls\n    for (const img of images) {\n      try {\n        // Store original src if we need to preserve it\n        const originalSrc = img.src;\n        \n        // Only convert to data URL if not preserving tags\n        if (!this.options.preserveImageTags) {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          // Create new image and wait for it to load\n          const tempImg = new Image();\n          tempImg.crossOrigin = 'anonymous';\n\n          await new Promise((resolve, reject) => {\n            tempImg.onload = () => {\n              // Set canvas size to match image\n              canvas.width = tempImg.naturalWidth;\n              canvas.height = tempImg.naturalHeight;\n\n              // Draw image to canvas\n              ctx.drawImage(tempImg, 0, 0);\n\n              // Convert to data URL\n              const dataUrl = canvas.toDataURL('image/png', 1.0);\n\n              // Update original image\n              img.src = dataUrl;\n              resolve();\n            };\n            tempImg.onerror = reject;\n            tempImg.src = originalSrc;\n          });\n        }\n      } catch (error) {\n        console.error('Failed to convert image:', error);\n      }\n    }\n\n    // Initialize mermaid diagrams after all images are processed\n    mermaid.init(undefined, this.output.querySelectorAll('.mermaid'));\n\n    // Initialize GeoJSON/TopoJSON maps after content is rendered\n    this.initializeGeoRenderers();\n\n    // Initialize STL 3D models after content is rendered\n    this.initializeSTLRenderers();\n    \n    // Ensure MathJax is loaded and typeset all math blocks\n    await this.ensureMathJaxAndTypeset();\n\n    // Emit markdown:rendered event\n    this.events.emit('markdown:rendered', markdown, html);\n  }\n\n  /**\n   * Ensures MathJax is loaded and typesets all math blocks in the output.\n   * @private\n   */\n  async ensureMathJaxAndTypeset() {\n    const mathBlocks = this.output.querySelectorAll('div.math-display');\n    if (!mathBlocks.length) return;\n    function typesetAll() {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        return MathJax.typesetPromise(Array.from(mathBlocks));\n      }\n    }\n    if (typeof MathJax === 'undefined') {\n      if (window.mathJaxLoading) return;\n      window.mathJaxLoading = true;\n      return new Promise((resolve, reject) => {\n        // Configure MathJax before loading script to ensure SVG output\n        if (!window.MathJax) {\n          window.MathJax = {\n            loader: { load: ['input/tex', 'output/svg'] },\n            tex: { \n              packages: { '[+]': ['ams'] },\n              inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n              displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n              processEscapes: true,\n              processEnvironments: true\n            },\n            options: { \n              renderActions: { addMenu: [] },\n              ignoreHtmlClass: 'tex2jax_ignore',\n              processHtmlClass: 'tex2jax_process'\n            },\n            svg: { fontCache: 'none' },\n            startup: { typeset: false }\n          };\n        }\n        \n        const script = document.createElement('script');\n        script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n        script.async = true;\n        script.onload = () => {\n          window.mathJaxLoading = false;\n          typesetAll()?.then(resolve).catch(reject);\n        };\n        script.onerror = () => {\n          window.mathJaxLoading = false;\n          reject(new Error('Failed to load MathJax'));\n        };\n        document.head.appendChild(script);\n      });\n    } else {\n      return typesetAll();\n    }\n  }\n\n  /**\n   * Initializes GeoJSON and TopoJSON map renderers.\n   * @private\n   */\n  initializeGeoRenderers() {\n    // Skip if output element not yet available (during initial setup)\n    if (!this.output) return;\n    \n    // Initialize GeoJSON containers\n    const geojsonContainers = this.output.querySelectorAll('.geojson-container');\n    geojsonContainers.forEach(container => {\n      if (!container.dataset.initialized) {\n        this.renderGeoJSON(container);\n      }\n    });\n\n    // Initialize TopoJSON containers\n    const topojsonContainers = this.output.querySelectorAll('.topojson-container');\n    topojsonContainers.forEach(container => {\n      if (!container.dataset.initialized) {\n        this.renderTopoJSON(container);\n      }\n    });\n  }\n\n  /**\n   * Initializes STL 3D model renderers.\n   * @private\n   */\n  initializeSTLRenderers() {\n    // Skip if output element not yet available (during initial setup)\n    if (!this.output) return;\n    \n    const stlContainers = this.output.querySelectorAll('.stl-container');\n    stlContainers.forEach(container => {\n      if (!container.dataset.initialized) {\n        this.renderSTL(container);\n      }\n    });\n  }\n\n  /**\n   * Renders a GeoJSON map in the given container.\n   * @param {HTMLElement} container - The container element\n   * @private\n   */\n  renderGeoJSON(container) {\n    try {\n      const originalData = container.textContent;\n      \n      // Store original data for HtmlToMarkdown conversion FIRST\n      container.setAttribute('data-original-source', originalData);\n      \n      if (typeof L === 'undefined') {\n        console.warn('Leaflet not loaded, cannot render GeoJSON');\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">Leaflet library not loaded</p>';\n        return;\n      }\n\n      const jsonData = JSON.parse(originalData);\n      \n      // Clear container and set up for map\n      container.innerHTML = '';\n      container.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px;';\n      \n      // Create unique ID for this map\n      const mapId = 'map-' + Math.random().toString(36).substring(2, 15);\n      container.id = mapId;\n      \n      // Initialize Leaflet map\n      const map = L.map(mapId).setView([0, 0], 2);\n      \n      // Store map reference for copy functionality\n      window[mapId + '_map'] = map;\n      \n      // Add tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      \n      // Add GeoJSON layer\n      const geojsonLayer = L.geoJSON(jsonData).addTo(map);\n      \n      // Fit map to data bounds\n      if (geojsonLayer.getBounds().isValid()) {\n        map.fitBounds(geojsonLayer.getBounds(), { padding: [20, 20] });\n      }\n      \n      container.dataset.initialized = 'true';\n    } catch (error) {\n      console.error('Error rendering GeoJSON:', error);\n      container.innerHTML = '<p style=\"color: red; text-align: center; padding: 20px;\">Error rendering GeoJSON map</p>';\n      container.dataset.initialized = 'error';\n    }\n  }\n\n  /**\n   * Renders a TopoJSON map in the given container.\n   * @param {HTMLElement} container - The container element\n   * @private\n   */\n  renderTopoJSON(container) {\n    try {\n      const originalData = container.textContent;\n      \n      // Store original data for HtmlToMarkdown conversion FIRST\n      container.setAttribute('data-original-source', originalData);\n      \n      if (typeof L === 'undefined') {\n        console.warn('Leaflet not loaded, cannot render TopoJSON');\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">Leaflet library not loaded</p>';\n        return;\n      }\n\n      if (typeof topojson === 'undefined') {\n        console.warn('TopoJSON client not loaded, cannot render TopoJSON');\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">TopoJSON client library not loaded</p>';\n        return;\n      }\n\n      const topoData = JSON.parse(originalData);\n      \n      // Convert TopoJSON to GeoJSON\n      const geojsonData = topojson.feature(topoData, Object.keys(topoData.objects)[0]);\n      \n      // Clear container and set up for map\n      container.innerHTML = '';\n      container.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px;';\n      \n      // Create unique ID for this map\n      const mapId = 'map-' + Math.random().toString(36).substring(2, 15);\n      container.id = mapId;\n      \n      // Initialize Leaflet map\n      const map = L.map(mapId).setView([0, 0], 2);\n      \n      // Add tile layer\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      \n      // Add GeoJSON layer\n      const geojsonLayer = L.geoJSON(geojsonData).addTo(map);\n      \n      // Fit map to data bounds\n      if (geojsonLayer.getBounds().isValid()) {\n        map.fitBounds(geojsonLayer.getBounds(), { padding: [20, 20] });\n      }\n      \n      container.dataset.initialized = 'true';\n    } catch (error) {\n      console.error('Error rendering TopoJSON:', error);\n      container.innerHTML = '<p style=\"color: red; text-align: center; padding: 20px;\">Error rendering TopoJSON map</p>';\n      container.dataset.initialized = 'error';\n    }\n  }\n\n  /**\n   * Renders an STL 3D model in the given container.\n   * @param {HTMLElement} container - The container element\n   * @private\n   */\n  renderSTL(container) {\n    try {\n      const originalData = container.textContent;\n      \n      // Store original data for HtmlToMarkdown conversion FIRST\n      container.setAttribute('data-original-source', originalData);\n      \n      if (typeof THREE === 'undefined') {\n        console.warn('Three.js not loaded, cannot render STL');\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">Three.js library not loaded</p>';\n        return;\n      }\n\n      const stlData = originalData;\n      \n      // Clear container and set up for 3D rendering\n      container.innerHTML = '';\n      container.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px; position: relative;';\n      \n      // Create Three.js scene\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera(75, container.offsetWidth / container.offsetHeight, 0.1, 1000);\n      const renderer = new THREE.WebGLRenderer({ antialias: true });\n      \n      renderer.setSize(container.offsetWidth, container.offsetHeight);\n      renderer.setClearColor(0xf0f0f0);\n      container.appendChild(renderer.domElement);\n      \n      // Store references for copy functionality\n      container._threeScene = scene;\n      container._threeCamera = camera;\n      container._threeRenderer = renderer;\n      \n      // Parse STL data (basic ASCII STL parser)\n      const geometry = this.parseSTL(stlData);\n      const material = new THREE.MeshLambertMaterial({ color: 0x606060 });\n      const mesh = new THREE.Mesh(geometry, material);\n      \n      scene.add(mesh);\n      \n      // Add lighting\n      const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n      scene.add(ambientLight);\n      \n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n      directionalLight.position.set(1, 1, 1).normalize();\n      scene.add(directionalLight);\n      \n      // Position camera\n      const box = new THREE.Box3().setFromObject(mesh);\n      const center = box.getCenter(new THREE.Vector3());\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      \n      camera.position.set(center.x + maxDim, center.y + maxDim, center.z + maxDim);\n      camera.lookAt(center);\n      \n      // Animation loop\n      const animate = () => {\n        requestAnimationFrame(animate);\n        mesh.rotation.y += 0.01;\n        renderer.render(scene, camera);\n      };\n      animate();\n      \n      container.dataset.initialized = 'true';\n    } catch (error) {\n      console.error('Error rendering STL:', error);\n      container.innerHTML = '<p style=\"color: red; text-align: center; padding: 20px;\">Error rendering STL model</p>';\n      container.dataset.initialized = 'error';\n    }\n  }\n\n  /**\n   * Basic ASCII STL parser.\n   * @param {string} stlData - The STL file content\n   * @returns {THREE.BufferGeometry} - The parsed geometry\n   * @private\n   */\n  parseSTL(stlData) {\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n    const normals = [];\n    \n    const lines = stlData.split('\\n');\n    let currentNormal = null;\n    let vertexCount = 0;\n    \n    for (let line of lines) {\n      line = line.trim();\n      \n      if (line.startsWith('facet normal')) {\n        const parts = line.split(/\\s+/);\n        currentNormal = [parseFloat(parts[2]), parseFloat(parts[3]), parseFloat(parts[4])];\n      } else if (line.startsWith('vertex')) {\n        const parts = line.split(/\\s+/);\n        vertices.push(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3]));\n        if (currentNormal) {\n          normals.push(currentNormal[0], currentNormal[1], currentNormal[2]);\n        }\n        vertexCount++;\n      }\n    }\n    \n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('normal', new THREE.Float32BufferAttribute(normals, 3));\n    \n    return geometry;\n  }\n\n  /**\n   * Converts HTML content to Markdown format using our HtmlToMarkdown converter.\n   * \n   * @param {string} html - The HTML content to convert to Markdown\n   * @param {Object} options - Additional options for conversion\n   * @returns {string} The converted Markdown content\n   */\n  htmlToMarkdown(html, options = {}) {\n    // Use our HtmlToMarkdown converter which uses Turndown internally\n    // with SquibView-specific customizations\n    if (!this._htmlToMarkdownConverter) {\n      // Return simple conversion if converter isn't loaded yet\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      return tempDiv.textContent;\n    }\n    \n    // Use the converter with the original source as context to preserve special blocks\n    return this._htmlToMarkdownConverter.convert(html, {\n      originalSource: options.originalSource || this.input.value\n    });\n  }\n\n  /**\n   * Converts a table in the DOM to CSV format\n   * \n   * @param {string} html - The HTML content containing a table\n   * @param {string} [delimiter=','] - The delimiter to use\n   * @returns {string} The CSV content\n   */\n  tableToCSV(html, delimiter = ',') {\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html;\n    \n    const table = tempDiv.querySelector('table');\n    if (!table) {\n      return '';\n    }\n    \n    const rows = Array.from(table.querySelectorAll('tr'));\n    const csvRows = rows.map(row => {\n      const cells = Array.from(row.querySelectorAll('th, td'));\n      return cells.map(cell => {\n        // Escape quotes and wrap in quotes if needed\n        const text = cell.textContent.trim();\n        if (text.includes(delimiter) || text.includes('\"') || text.includes('\\n')) {\n          return `\"${text.replace(/\"/g, '\"\"')}\"`;\n        }\n        return text;\n      }).join(delimiter);\n    });\n    \n    return csvRows.join('\\n');\n  }\n\n  /**\n   * Removes all horizontal rules (---) from the Markdown content.\n   * Only works when the current content type is Markdown.\n   */\n  markdownRemoveAllHR() {\n    if (this.inputContentType === 'md') {\n      const markdown = this.getMarkdownSource();\n      const newMarkdown = markdown.replace(/---/g, '');\n      this.setContent(newMarkdown, this.inputContentType);\n    }\n  }\n  \n  /**\n   * Adjusts the heading levels in Markdown text by a specified offset.\n   * \n   * @param {string} markdown - The Markdown text to process\n   * @param {number} offset - The amount to adjust heading levels by (positive to increase, negative to decrease)\n   * @returns {string} - The Markdown text with adjusted heading levels\n   */\n  markdownAdjustHeadings(markdown, offset) {\n    // Early exit if offset is 0 or invalid input\n    if (offset === 0 || typeof markdown !== 'string') {\n      return markdown;\n    }\n\n    // Split the input into lines\n    const lines = markdown.split('\\n');\n\n    // Process each line\n    const modifiedLines = lines.map(line => {\n      // Regex to match heading lines: starts with 1-6 hash symbols followed by a space\n      const headingMatch = line.match(/^(#{1,6})\\s/);\n\n      if (!headingMatch) {\n        // Not a heading, return unchanged\n        return line;\n      }\n\n      const currentHeadingLevel = headingMatch[1].length;\n      // Calculate new heading level with bounds checking (min 1, max 6)\n      const newHeadingLevel = Math.min(Math.max(currentHeadingLevel + offset, 1), 6);\n\n      // Replace the heading prefix with the new level\n      return '#'.repeat(newHeadingLevel) + line.substring(currentHeadingLevel);\n    });\n\n    // Join the lines back together\n    return modifiedLines.join('\\n');\n  }\n  \n  /**\n   * Adjusts heading levels in the current Markdown content.\n   * \n   * @param {number} offset - The amount to adjust heading levels by (positive to increase, negative to decrease)\n   */\n  markdownEditorAdjustHeadings(offset) {\n    const markdown = this.getMarkdownSource();\n    const newMarkdown = this.markdownAdjustHeadings(markdown, offset);\n    this.setContent(newMarkdown, this.inputContentType);\n  }\n\n  /**\n   * Sets the current view mode of the editor.\n   * \n   * @param {string} view - The view mode to set: 'src' (source only), 'html' (rendered only), or 'split' (both)\n   */\n  setView(view) {\n    this.currentView = view;\n\n    this.controls.querySelectorAll('button[data-view]').forEach(btn => {\n      btn.classList.toggle('active', btn.dataset.view === view);\n    });\n\n    const copyMDButton = this.controls.querySelector('.copy-src-button');\n    const copyHTMLButton = this.controls.querySelector('.copy-html-button');\n\n    if (view === 'src') {\n      this.input.classList.remove('squibview-hidden');\n      this.output.classList.add('squibview-hidden');\n      this.input.style.width = '100%';\n      copyMDButton.classList.remove('squibview-hidden');\n      copyHTMLButton.classList.add('squibview-hidden');\n    } else if (view === 'html') {\n      this.input.classList.add('squibview-hidden');\n      this.output.classList.remove('squibview-hidden');\n      this.output.style.width = '100%';\n      copyMDButton.classList.add('squibview-hidden');\n      copyHTMLButton.classList.remove('squibview-hidden');\n    } else { // view == 'split'\n      this.input.classList.remove('squibview-hidden');\n      this.output.classList.remove('squibview-hidden');\n      this.input.style.width = '50%';\n      this.output.style.width = '50%';\n      copyMDButton.classList.remove('squibview-hidden');\n      copyHTMLButton.classList.remove('squibview-hidden');\n    }\n\n    this.adjustLayout();\n    \n    // Emit view:change event\n    this.events.emit('view:change', view);\n  }\n\n  /**\n   * Renders HTML content in an iframe within the output div.\n   * \n   * @param {string} src - The HTML source content to render\n   */\n  renderHTML(src) {\n    const htmlContent = src;\n    const outputDiv = this.output;\n    this.insertContentInIframe(outputDiv, htmlContent);\n    \n    // Emit html:rendered event\n    this.events.emit('html:rendered', htmlContent);\n  }\n\n  /**\n   * Creates an iframe that fills the entire parent element and injects provided HTML content.\n   * @param {HTMLElement} parentElement - The parent element to contain the iframe.\n   * @param {string} htmlContent - The HTML content to inject into the iframe.\n   */\n  insertContentInIframe(parentElement, htmlContent) {\n    // Create an iframe element\n    const iframe = document.createElement('iframe');\n\n    // Style the iframe to fill the parent completely\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.style.border = 'none';\n    iframe.style.display = 'block';\n\n    // Append the iframe to the parent element\n    parentElement.innerHTML = '';\n    parentElement.appendChild(iframe);\n\n    // Access the iframe's document and write the HTML content into it\n    const iframeDoc = iframe.contentWindow.document;\n    iframeDoc.open();\n    iframeDoc.write(htmlContent);\n    iframeDoc.close();\n    this.output_iframe = iframe;\n    this.output_ifraome_content = htmlContent;\n  }\n\n  /**\n   * Renders the current content based on its type using the registered renderer.\n   */\n  renderOutput() {\n    const renderer = this.renderers[this.inputContentType];\n    if (renderer && renderer.render) {\n      renderer.render(this.getContent());\n      this.events.emit('content:rendered', this.inputContentType);\n    } else {\n      console.warn(`No renderer for content type: ${this.inputContentType}`);\n      // Fall back to Markdown rendering\n      this.renderMarkdown();\n    }\n  }\n\n  /**\n   * Copies the source content to the clipboard.\n   * Attempts to use the modern Clipboard API with fallbacks for older browsers.\n   * \n   * @returns {Promise<void>} A promise that resolves when copying is complete\n   */\n  async copySource() {\n    const copyButton = this.controls.querySelector('.copy-src-button');\n    copyButton.textContent = 'Copying...';\n\n    try {\n      const markdownText = this.getMarkdownSource();\n\n      try {\n        await navigator.clipboard.writeText(markdownText);\n      } catch (modernErr) {\n        const textarea = document.createElement('textarea');\n        textarea.value = markdownText;\n        textarea.style.position = 'fixed';\n        textarea.style.opacity = '0';\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.body.removeChild(textarea);\n      }\n\n      copyButton.textContent = 'Copied!';\n    } catch (err) {\n      console.error('Copy Markdown failed:', err);\n      copyButton.textContent = 'Copy failed';\n    }\n\n    setTimeout(() => {\n      copyButton.textContent = 'Copy Source';\n    }, 2000);\n  }\n\n  /**\n   * Gets the current markdown source from the input textarea.\n   * \n   * @returns {string} The markdown source\n   */\n  getMarkdownSource() {\n    return this.input.value;\n  }\n\n  /**\n   * Gets the HTML source from the rendered output.\n   * \n   * @returns {string} The HTML content\n   */\n  getHTMLSource() {\n    const contentEditable = this.output.querySelector('div[contenteditable=\"true\"]');\n    if (contentEditable) {\n      return contentEditable.innerHTML;\n    }\n    \n    // If we have an iframe (HTML view)\n    if (this.output_iframe) {\n      return this.output_ifraome_content;\n    }\n    \n    return '';\n  }\n\n  /**\n   * Gets source diff as a programmatic object\n   * \n   * @param {Object} options - Diff options\n   * @param {number} options.fromIndex - Starting revision index (defaults to current - 1)\n   * @param {number} options.toIndex - Ending revision index (defaults to current)\n   * @returns {Object} Diff data object with metadata and line diffs\n   */\n  getSourceDiff(options = {}) {\n    const { fromIndex = null, toIndex = null } = options;\n    \n    // Get the line diff\n    const lineDiff = this.revisionManager.computeLineDiff(fromIndex, toIndex);\n    \n    // Get metadata about the revisions being compared\n    const actualFromIndex = fromIndex === null ? this.revisionManager.getCurrentIndex() - 1 : fromIndex;\n    const actualToIndex = toIndex === null ? this.revisionManager.getCurrentIndex() : toIndex;\n    \n    // Build the diff object\n    const diffData = {\n      fromIndex: actualFromIndex,\n      toIndex: actualToIndex,\n      lineDiff: lineDiff,\n      stats: this.revisionManager.getDiffStats(actualFromIndex, actualToIndex)\n    };\n    \n    // Add revision info if indices are valid\n    try {\n      diffData.fromRevision = this.revisionManager.getRevisionInfo(actualFromIndex);\n      diffData.toRevision = this.revisionManager.getRevisionInfo(actualToIndex);\n    } catch (e) {\n      // Invalid indices, return partial data\n      diffData.error = e.message;\n    }\n    \n    // Emit diff computed event\n    this.events.emit('diff:computed', {\n      fromIndex: diffData.fromIndex,\n      toIndex: diffData.toIndex,\n      stats: diffData.stats,\n      hasChanges: diffData.stats.totalChanges > 0\n    });\n    \n    return diffData;\n  }\n\n  /**\n   * Gets source diff as display-ready HTML\n   * \n   * @param {Object} options - Diff and styling options\n   * @param {number} options.fromIndex - Starting revision index (defaults to current - 1)\n   * @param {number} options.toIndex - Ending revision index (defaults to current)\n   * @param {boolean} options.showLineNumbers - Whether to show line numbers (default: true)\n   * @param {Object} options.cssClasses - Custom CSS classes for styling\n   * @returns {string} HTML string\n   */\n  getSourceDiffHTML(options = {}) {\n    const {\n      fromIndex = null,\n      toIndex = null,\n      showLineNumbers = true,\n      cssClasses = {}\n    } = options;\n    \n    // Get the diff data\n    const diffData = this.getSourceDiff({ fromIndex, toIndex });\n    \n    // Default CSS classes\n    const classes = {\n      container: cssClasses.container || 'squibview-diff',\n      line: cssClasses.line || 'diff-line',\n      added: cssClasses.added || 'diff-added',\n      removed: cssClasses.removed || 'diff-removed',\n      unchanged: cssClasses.unchanged || 'diff-unchanged',\n      lineNumber: cssClasses.lineNumber || 'diff-line-number',\n      content: cssClasses.content || 'diff-content'\n    };\n    \n    // Build HTML\n    let html = `<div class=\"${classes.container}\" contenteditable=\"false\">`;\n    \n    // Add header with revision info and stats\n    html += `<div class=\"diff-header\">`;\n    html += `<div>Comparing revision ${diffData.fromIndex} to ${diffData.toIndex}</div>`;\n    \n    // Add statistics\n    if (diffData.stats && diffData.stats.totalChanges > 0) {\n      html += `<div class=\"diff-stats\">`;\n      if (diffData.stats.additions > 0) {\n        html += `<span class=\"stat additions\">+${diffData.stats.additions} additions</span>`;\n      }\n      if (diffData.stats.deletions > 0) {\n        html += `<span class=\"stat deletions\">-${diffData.stats.deletions} deletions</span>`;\n      }\n      if (diffData.stats.modifications > 0) {\n        html += `<span class=\"stat modifications\">~${diffData.stats.modifications} modifications</span>`;\n      }\n      html += `<span class=\"stat\">${diffData.stats.totalChanges} total changes</span>`;\n      html += `</div>`;\n    } else {\n      html += `<div class=\"diff-stats\"><span class=\"stat\">No changes</span></div>`;\n    }\n    html += `</div>`;\n    \n    // Add diff content\n    html += `<div class=\"diff-content\">`;\n    \n    for (const line of diffData.lineDiff) {\n      const lineClass = `${classes.line} ${classes[line.type]}`;\n      html += `<div class=\"${lineClass}\">`;\n      \n      if (showLineNumbers) {\n        const displayNum = line.type === 'removed' ? (line.oldLineNum || '') : (line.newLineNum || '');\n        html += `<span class=\"${classes.lineNumber}\">${displayNum}</span>`;\n      }\n      \n      // Escape HTML in content\n      const escapedContent = this._escapeHtml(line.content);\n      html += `<span class=\"diff-content-text\">${escapedContent}</span>`;\n      \n      html += `</div>`;\n    }\n    \n    html += `</div>`; // diff-content\n    html += `</div>`; // container\n    \n    // Emit diff displayed event\n    this.events.emit('diff:displayed', {\n      fromIndex: diffData.fromIndex,\n      toIndex: diffData.toIndex,\n      stats: diffData.stats,\n      htmlLength: html.length,\n      showLineNumbers: showLineNumbers\n    });\n    \n    return html;\n  }\n\n  /**\n   * Gets source diff as inline HTML with additions and deletions marked within the text\n   * \n   * @param {Object} options - Diff and styling options\n   * @param {number} options.fromIndex - Starting revision index (defaults to current - 1)\n   * @param {number} options.toIndex - Ending revision index (defaults to current)\n   * @param {Object} options.cssClasses - Custom CSS classes for styling\n   * @returns {string} HTML string with inline diff markup\n   */\n  getSourceDiffInline(options = {}) {\n    const {\n      fromIndex = null,\n      toIndex = null,\n      cssClasses = {}\n    } = options;\n    \n    // Get the raw diff data\n    const diffData = this.getSourceDiff({ fromIndex, toIndex });\n    \n    // Default CSS classes for inline diff\n    const classes = {\n      container: cssClasses.container || 'squibview-diff-inline',\n      added: cssClasses.added || 'diff-inline-added',\n      removed: cssClasses.removed || 'diff-inline-removed'\n    };\n    \n    // Get the actual content from the revisions\n    const actualFromIndex = fromIndex === null ? this.revisionManager.getCurrentIndex() - 1 : fromIndex;\n    const actualToIndex = toIndex === null ? this.revisionManager.getCurrentIndex() : toIndex;\n    \n    let fromContent, toContent;\n    try {\n      fromContent = this.revisionManager.getContentAtRevision(actualFromIndex).content;\n      toContent = this.revisionManager.getContentAtRevision(actualToIndex).content;\n    } catch (e) {\n      return `<div class=\"${classes.container}\"><p>Error: ${e.message}</p></div>`;\n    }\n    \n    // Get character-level diff\n    const diff = this.revisionManager.diffEngine.diff_main(fromContent, toContent);\n    this.revisionManager.diffEngine.diff_cleanupSemantic(diff);\n    \n    // Convert diff to inline HTML\n    let html = `<div class=\"${classes.container}\" contenteditable=\"false\">`;\n    \n    // Add header\n    html += `<div class=\"diff-inline-header\">`;\n    html += `<div>Comparing revision ${actualFromIndex} to ${actualToIndex}</div>`;\n    if (diffData.stats && diffData.stats.totalChanges > 0) {\n      html += `<div class=\"diff-inline-stats\">`;\n      html += `<span style=\"color: #007bff;\">+${diffData.stats.additions}</span> `;\n      html += `<span style=\"color: #dc3545;\">-${diffData.stats.deletions}</span>`;\n      if (diffData.stats.modifications > 0) {\n        html += ` <span style=\"color: #ffc107;\">~${diffData.stats.modifications}</span>`;\n      }\n      html += `</div>`;\n    }\n    html += `</div>`;\n    \n    // Add content with inline diffs\n    html += `<div class=\"diff-inline-content\">`;\n    \n    for (const [op, text] of diff) {\n      const escapedText = this._escapeHtml(text);\n      if (op === 1) { // Addition\n        html += `<span class=\"${classes.added}\">${escapedText}</span>`;\n      } else if (op === -1) { // Deletion\n        html += `<span class=\"${classes.removed}\">${escapedText}</span>`;\n      } else { // Unchanged\n        html += escapedText;\n      }\n    }\n    \n    html += `</div></div>`;\n    \n    // Emit diff displayed event\n    this.events.emit('diff:displayed', {\n      fromIndex: actualFromIndex,\n      toIndex: actualToIndex,\n      stats: diffData.stats,\n      htmlLength: html.length,\n      type: 'inline'\n    });\n    \n    return html;\n  }\n\n  /**\n   * Escapes HTML special characters\n   * @private\n   */\n  _escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n  \n  /**\n   * Registers a callback function to be called when text is selected\n   * \n   * @param {Function} callback - Function to call when text is selected\n   * @returns {Function} Unsubscribe function to remove the callback\n   */\n  onTextSelected(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Callback must be a function');\n    }\n    this.events.on('text:selected', callback);\n    \n    // Return unsubscribe function\n    return () => {\n      this.events.off('text:selected', callback);\n    };\n  }\n  \n  /**\n   * Replaces the currently selected text in either panel\n   * \n   * @param {string} replacement - The text to replace the selection with\n   * @param {Object} selectionData - The selection data from the text:selected event\n   * @returns {boolean} Whether the replacement was successful\n   */\n  replaceSelectedText(replacement, selectionData) {\n    if (!selectionData) {\n      return false;\n    }\n    \n    if (selectionData.panel === 'source') {\n      // Replace in source panel (textarea)\n      const { start, end } = selectionData.range;\n      const currentContent = this.input.value;\n      const newContent = currentContent.substring(0, start) + \n                         replacement + \n                         currentContent.substring(end);\n      \n      // Update content\n      this.setContent(newContent, this.inputContentType);\n      \n      // Return cursor focus to textarea\n      this.input.focus();\n      this.input.setSelectionRange(start + replacement.length, start + replacement.length);\n      \n      return true;\n    } else if (selectionData.panel === 'rendered') {\n      // Replace in rendered panel (contenteditable div)\n      const range = selectionData.range;\n      range.deleteContents();\n      \n      // Create a text node with the replacement text\n      const textNode = document.createTextNode(replacement);\n      range.insertNode(textNode);\n      \n      // Set the cursor at the end of the replaced text\n      range.setStartAfter(textNode);\n      range.setEndAfter(textNode);\n      \n      // Collapse the range to a cursor position\n      range.collapse(true);\n      \n      // Select the range\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      \n      // Update the source content to match the HTML changes\n      const editableContent = this.output.querySelector('[contenteditable=\"true\"]');\n      if (editableContent) {\n        const renderedContent = editableContent.innerHTML;\n        const renderer = this.renderers[this.inputContentType];\n        \n        if (renderer && renderer.outputToSource) {\n          const originalSource = this.input.value;\n          let newSource = renderer.outputToSource(renderedContent, {\n            originalSource: originalSource\n          });\n          \n          // Update source content\n          this.input.value = newSource;\n          \n          // Add to revision history\n          this.revisionManager.addRevision(newSource, this.inputContentType);\n          \n          // Emit content change event\n          this.events.emit('content:change', newSource, this.inputContentType);\n        }\n      }\n      \n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Sets the contenteditable attribute for the selected text\n   * \n   * @param {boolean} editable - Whether the selection should be editable\n   * @param {Object} selectionData - The selection data from the text:selected event\n   * @returns {boolean} Whether the operation was successful\n   */\n  setSelectionEditable(editable, selectionData) {\n    if (!selectionData || selectionData.panel !== 'rendered') {\n      return false;\n    }\n    \n    const range = selectionData.range;\n    \n    if (range) {\n      // Create a wrapper span to control editability\n      const span = document.createElement('span');\n      span.contentEditable = editable.toString(); // 'true' or 'false'\n      \n      // Add a class to visually indicate locked content\n      if (!editable) {\n        span.className = 'squibview-locked-content';\n        span.title = 'This content is locked (not editable)';\n        // Add a small lock icon using CSS ::before\n        span.style.position = 'relative';\n        span.style.backgroundColor = 'rgba(0, 0, 0, 0.05)';\n        span.style.border = '1px dashed #999';\n        span.style.borderRadius = '3px';\n        span.style.padding = '0 2px';\n      } else {\n        span.className = 'squibview-editable-content';\n      }\n      \n      // Clone the range contents into the span\n      span.appendChild(range.cloneContents());\n      \n      // Clear the selected content and insert the wrapped content\n      range.deleteContents();\n      range.insertNode(span);\n      \n      // Update the source content to match the HTML changes\n      const editableContent = this.output.querySelector('[contenteditable=\"true\"]');\n      if (editableContent) {\n        const renderedContent = editableContent.innerHTML;\n        const renderer = this.renderers[this.inputContentType];\n        \n        if (renderer && renderer.outputToSource) {\n          const originalSource = this.input.value;\n          let newSource = renderer.outputToSource(renderedContent, {\n            originalSource: originalSource\n          });\n          \n          // Update source content\n          this.input.value = newSource;\n          \n          // Add to revision history\n          this.revisionManager.addRevision(newSource, this.inputContentType);\n          \n          // Emit content change event\n          this.events.emit('content:change', newSource, this.inputContentType);\n        }\n      }\n      \n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Toggles the editability of the selected text\n   * \n   * @param {Object} selectionData - The selection data from the text:selected event\n   * @returns {boolean} Whether the operation was successful and the new state (true=editable, false=locked)\n   */\n  toggleSelectionLock(selectionData) {\n    if (!selectionData || selectionData.panel !== 'rendered') {\n      return null;\n    }\n    \n    // Detect if selection is inside an already locked/unlocked span\n    let targetNode = selectionData.range.commonAncestorContainer;\n    let isLocked = false;\n    \n    // Navigate up to find if selection is within a contenteditable span\n    while (targetNode && targetNode.nodeType === Node.ELEMENT_NODE) {\n      if (targetNode.hasAttribute('contenteditable')) {\n        // Found a contenteditable attribute, check its value\n        isLocked = targetNode.getAttribute('contenteditable') === 'false';\n        break;\n      }\n      targetNode = targetNode.parentNode;\n    }\n    \n    // Toggle the state - if locked, unlock it; if unlocked or not in a contenteditable span, lock it\n    const newEditableState = isLocked;\n    const result = this.setSelectionEditable(newEditableState, selectionData);\n    \n    // Return both success status and the new state\n    return result ? newEditableState : null;\n  }\n  \n  /**\n   * Gets the current text selection data from either panel\n   * \n   * @returns {Object|null} The selection data object or null if no text is selected\n   */\n  getCurrentSelection() {\n    // First, check if we have a cached selection\n    if (this.lastSelectionData) {\n      return this.lastSelectionData;\n    }\n    \n    const selection = document.getSelection();\n    \n    // Check if we have an active selection\n    if (!selection || selection.toString().trim() === '') {\n      return null;\n    }\n    \n    // Determine which panel contains the selection\n    if (this.input === document.activeElement) {\n      // Source panel selection\n      const selectionData = {\n        panel: 'source',\n        text: selection.toString(),\n        range: {\n          start: this.input.selectionStart,\n          end: this.input.selectionEnd\n        }\n      };\n      this.lastSelectionData = selectionData;\n      return selectionData;\n    } else {\n      // Try to find if selection is within the rendered panel\n      let node = selection.anchorNode;\n      let isInOutput = false;\n      \n      // Walk up the DOM tree to check if selection is within output panel\n      while (node && node !== document.body) {\n        if (node === this.output) {\n          isInOutput = true;\n          break;\n        }\n        node = node.parentNode;\n      }\n      \n      if (isInOutput) {\n        const selectionData = {\n          panel: 'rendered',\n          text: selection.toString(),\n          range: selection.getRangeAt(0),\n          element: this.output.querySelector('[contenteditable=\"true\"]')\n        };\n        this.lastSelectionData = selectionData;\n        return selectionData;\n      }\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Clears the current text selection\n   */\n  clearSelection() {\n    this.lastSelectionData = null;\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n    }\n  }\n  \n  /**\n   * Sets a handler function for text replacement on selection\n   * \n   * @param {Function|null} handler - Function to call when text is selected, or null to remove handler\n   * @throws {Error} If handler is not a function or null\n   */\n  set onReplaceSelectedText(handler) {\n    if (handler !== null && typeof handler !== 'function') {\n      throw new Error('onReplaceSelectedText handler must be a function or null');\n    }\n    \n    // Remove previous handler if it exists\n    if (this._onTextReplacementHandler) {\n      this.events.off('text:selected', this._onTextReplacementHandler);\n      this._onTextReplacementHandler = null;\n    }\n    \n    // Set new handler if provided\n    if (handler) {\n      this._onTextReplacementHandler = (selectionData) => {\n        const result = handler(selectionData);\n        \n        // If the handler returns a string, use it to replace the selected text\n        if (typeof result === 'string') {\n          this.replaceSelectedText(result, selectionData);\n        }\n      };\n      \n      // Register the handler\n      this.events.on('text:selected', this._onTextReplacementHandler);\n    }\n  }\n  \n  /**\n   * Gets the current text replacement handler\n   * \n   * @returns {Function|null} The current handler function or null if none is set\n   */\n  get onReplaceSelectedText() {\n    return this._onTextReplacementHandler ? \n      (selectionData) => {\n        const result = this._onTextReplacementHandler(selectionData);\n        return result;\n      } : null;\n  }\n\n  /**\n   * Copies the rendered content to the clipboard with formatting.\n   * Processes code blocks, SVG elements, and images to ensure they copy correctly.\n   */\n  async copyHTML() {\n    const copyButton = this.controls.querySelector('.copy-html-button');\n    copyButton.textContent = 'Copying...';\n\n    try {\n      const contentDiv = this.output.querySelector('div[contenteditable=\"true\"]');\n      if (!contentDiv) {\n        throw new Error('Content div not found');\n      }\n\n      const clone = contentDiv.cloneNode(true);\n\n      // Process code blocks\n      clone.querySelectorAll('pre code').forEach(block => {\n        const formattedCode = block.innerHTML;\n\n        const table = document.createElement('table');\n        table.style.width = '100%';\n        table.style.borderCollapse = 'collapse';\n        table.style.border = 'none';\n\n        const tr = document.createElement('tr');\n        const td = document.createElement('td');\n        td.style.backgroundColor = '#f7f7f7';\n        td.style.padding = '12px';\n        td.style.fontFamily = 'Consolas, Monaco, \"Courier New\", monospace';\n        td.style.whiteSpace = 'pre';\n        td.style.border = 'none';\n\n        td.innerHTML = formattedCode.trim();\n\n        tr.appendChild(td);\n        table.appendChild(tr);\n        block.parentNode.replaceWith(table);\n      });\n\n      // Convert all images to data URLs for copying\n      const images = clone.querySelectorAll('img');\n      for (const img of images) {\n        try {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          // Create new image and wait for it to load\n          const tempImg = new Image();\n          tempImg.crossOrigin = 'anonymous';\n\n          await new Promise((resolve, reject) => {\n            tempImg.onload = () => {\n              // Get intended display dimensions from HTML attributes or CSS\n              const hasWidthAttr = img.getAttribute('width');\n              const hasHeightAttr = img.getAttribute('height');\n              \n              let displayWidth, displayHeight;\n              \n              if (hasWidthAttr && hasHeightAttr) {\n                // Both dimensions specified\n                displayWidth = parseInt(hasWidthAttr);\n                displayHeight = parseInt(hasHeightAttr);\n              } else if (hasWidthAttr && !hasHeightAttr) {\n                // Only width specified - maintain aspect ratio\n                displayWidth = parseInt(hasWidthAttr);\n                displayHeight = Math.round((displayWidth / tempImg.naturalWidth) * tempImg.naturalHeight);\n              } else if (!hasWidthAttr && hasHeightAttr) {\n                // Only height specified - maintain aspect ratio\n                displayHeight = parseInt(hasHeightAttr);\n                displayWidth = Math.round((displayHeight / tempImg.naturalHeight) * tempImg.naturalWidth);\n              } else {\n                // No dimensions specified - use natural size\n                displayWidth = tempImg.naturalWidth;\n                displayHeight = tempImg.naturalHeight;\n              }\n              \n              // Set canvas size to intended display size (not natural size)\n              canvas.width = displayWidth;\n              canvas.height = displayHeight;\n\n              // Draw image scaled to intended size\n              ctx.drawImage(tempImg, 0, 0, displayWidth, displayHeight);\n\n              // Convert to data URL\n              const dataUrl = canvas.toDataURL('image/png', 1.0);\n\n              // Update original image with proper sizing\n              img.src = dataUrl;\n              img.setAttribute('width', displayWidth.toString());\n              img.setAttribute('height', displayHeight.toString());\n              img.style.width = displayWidth + 'px';\n              img.style.height = displayHeight + 'px';\n              resolve();\n            };\n            tempImg.onerror = reject;\n            tempImg.src = img.src;\n          });\n        } catch (error) {\n          console.error('Failed to convert image for copying:', error);\n          // Preserve the original image source if conversion fails (e.g., for external badges)\n          // This ensures badges from services like shields.io still work when copied\n          if (img.src) {\n            // Keep the original src and any existing dimensions\n            const width = img.getAttribute('width');\n            const height = img.getAttribute('height');\n            if (width) img.style.width = width + (width.match(/\\d+$/) ? 'px' : '');\n            if (height) img.style.height = height + (height.match(/\\d+$/) ? 'px' : '');\n          }\n        }\n      }\n\n      // Convert SVG elements to PNG (excluding math SVGs which are handled separately)\n      const svgElements = clone.querySelectorAll('svg');\n      for (const svg of svgElements) {\n        // Skip SVGs that are inside math elements - they'll be handled separately\n        if (svg.closest('.math-display')) {\n          continue;\n        }\n        try {\n          const pngBlob = await this.svgToPng(svg);\n          const dataUrl = await new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onloadend = () => resolve(reader.result);\n            reader.readAsDataURL(pngBlob);\n          });\n\n          const img = document.createElement('img');\n          img.src = dataUrl;\n          \n          // Use the exact same dimension calculation logic as svgToPng\n          const isMermaidSvg = svg.closest('.mermaid') || svg.classList.contains('mermaid');\n          const hasExplicitDimensions = svg.getAttribute('width') && svg.getAttribute('height');\n          \n          let imgWidth, imgHeight;\n          \n          if (isMermaidSvg || !hasExplicitDimensions) {\n            // For Mermaid or other generated SVGs, prioritize computed dimensions\n            imgWidth = svg.clientWidth || \n                       (svg.viewBox && svg.viewBox.baseVal.width) || \n                       parseFloat(svg.getAttribute('width')) || 400;\n            imgHeight = svg.clientHeight || \n                        (svg.viewBox && svg.viewBox.baseVal.height) || \n                        parseFloat(svg.getAttribute('height')) || 300;\n          } else {\n            // For explicit SVGs (like fenced SVG blocks), prioritize explicit attributes\n            imgWidth = parseFloat(svg.getAttribute('width')) || \n                       (svg.viewBox && svg.viewBox.baseVal.width) || \n                       svg.clientWidth || 400;\n            imgHeight = parseFloat(svg.getAttribute('height')) || \n                        (svg.viewBox && svg.viewBox.baseVal.height) || \n                        svg.clientHeight || 300;\n          }\n          \n          // Set both HTML attributes and CSS properties for maximum compatibility\n          img.width = imgWidth;\n          img.height = imgHeight;\n          img.setAttribute('width', imgWidth.toString());\n          img.setAttribute('height', imgHeight.toString());\n          img.style.width = imgWidth + 'px';\n          img.style.height = imgHeight + 'px';\n          img.style.maxWidth = 'none';  // Prevent CSS from constraining the image\n          img.style.maxHeight = 'none';\n          img.setAttribute('v:shapes', 'image' + Math.random().toString(36).substr(2, 9));\n          img.alt = \"Converted diagram\";\n          \n          \n          svg.parentNode.replaceChild(img, svg);\n        } catch (error) {\n          console.error('Failed to convert SVG:', error);\n        }\n      }\n\n      // Convert Math elements to PNG images using the copy-as-image approach from math-test.html\n      const mathElements = Array.from(clone.querySelectorAll('.math-display'));\n      if (mathElements.length > 0) {\n        \n        for (const mathEl of mathElements) {\n          try {\n            \n            const svg = mathEl.querySelector('svg');\n            if (!svg) {\n              console.warn('No SVG found in math element, skipping');\n              continue;\n            }\n\n            // Convert SVG to PNG data URL using the exact approach from math-test.html\n            const serializer = new XMLSerializer();\n            const svgStr = serializer.serializeToString(svg);\n            const svgBlob = new Blob([svgStr], { type: \"image/svg+xml;charset=utf-8\" });\n            const url = URL.createObjectURL(svgBlob);\n            \n            const img = new Image();\n            const dataUrl = await new Promise((resolve, reject) => {\n              img.onload = function () {\n                const canvas = document.createElement('canvas');\n                \n                // Try different approaches to get SVG dimensions\n                let width, height;\n                try {\n                  // First try baseVal.value (works for absolute units)\n                  width = svg.width.baseVal.value;\n                  height = svg.height.baseVal.value;\n                } catch (e) {\n                  // Fallback for relative units - use viewBox or rendered size\n                  if (svg.viewBox && svg.viewBox.baseVal) {\n                    width = svg.viewBox.baseVal.width;\n                    height = svg.viewBox.baseVal.height;\n                  } else {\n                    // Use the natural size of the loaded image\n                    width = img.naturalWidth || img.width || 200;\n                    height = img.naturalHeight || img.height || 50;\n                  }\n                }\n                \n                \n                // Scale down math images to reasonable size for documents\n                // MathJax SVGs often have large coordinate systems, scale them down\n                const targetMaxWidth = 300;   // Target max width for math images  \n                const targetMaxHeight = 100;  // Target max height for math images\n                \n                // Apply a base scale factor for MathJax SVGs which tend to be oversized\n                let scaleFactor = 0.10; // Start with a smaller base scale\n                \n                // If still too large after base scaling, scale down further\n                const scaledWidth = width * scaleFactor;\n                const scaledHeight = height * scaleFactor;\n                \n                if (scaledWidth > targetMaxWidth || scaledHeight > targetMaxHeight) {\n                  const scaleX = targetMaxWidth / scaledWidth;\n                  const scaleY = targetMaxHeight / scaledHeight;\n                  scaleFactor *= Math.min(scaleX, scaleY);\n                }\n                \n                width *= scaleFactor;\n                height *= scaleFactor;\n                \n                \n                canvas.width = width;\n                canvas.height = height;\n                const ctx = canvas.getContext('2d');\n                \n                // White background\n                ctx.fillStyle = \"#FFFFFF\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                \n                // Draw the SVG image\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                \n                // Clean up URL\n                URL.revokeObjectURL(url);\n                \n                // Return data URL\n                resolve(canvas.toDataURL('image/png'));\n              };\n              \n              img.onerror = () => {\n                URL.revokeObjectURL(url);\n                reject(new Error('Failed to load SVG image'));\n              };\n              \n              img.src = url;\n            });\n\n            // Replace math element with img tag containing the PNG data URL\n            const imgElement = document.createElement('img');\n            imgElement.src = dataUrl;\n            imgElement.style.cssText = 'display:block;margin:0.5em 0;max-width:100%;height:auto;';\n            imgElement.alt = 'Math equation';\n            \n            mathEl.parentNode.replaceChild(imgElement, mathEl);\n          } catch (error) {\n            console.error('Failed to convert math element to image:', error);\n            // Keep the original element if conversion fails\n          }\n        }\n      }\n\n      // Handle GeoJSON containers - convert canvas to image\n      const geojsonContainers = clone.querySelectorAll('.geojson-container');\n      for (const container of geojsonContainers) {\n        try {\n          // Find the corresponding GeoJSON container in the original DOM by searching with proper escaping\n          const originalSource = container.getAttribute('data-original-source');\n          if (!originalSource) {\n            console.warn('No original source found for GeoJSON container');\n            throw new Error('No original source');\n          }\n\n          // Find original container more reliably\n          let originalContainer = null;\n          const allOriginalContainers = this.output.querySelectorAll('.geojson-container');\n          for (const candidate of allOriginalContainers) {\n            if (candidate.getAttribute('data-original-source') === originalSource) {\n              originalContainer = candidate;\n              break;\n            }\n          }\n          \n          if (originalContainer) {\n            try {\n              // Use div-to-image conversion to capture the entire container\n              const dataUrl = await this.divToDataUrl(originalContainer);\n              if (dataUrl) {\n                const img = document.createElement('img');\n                img.src = dataUrl;\n                img.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px; margin: 0.5em 0;';\n                img.alt = 'GeoJSON Map';\n                \n                // Replace the container with the image\n                container.parentNode.replaceChild(img, container);\n                continue;\n              }\n            } catch (error) {\n              console.warn('Failed to convert GeoJSON container to image:', error);\n            }\n          } else {\n            console.warn('Could not find original GeoJSON container');\n          }\n          \n          // Fallback to placeholder if canvas conversion fails\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[GeoJSON Map - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        } catch (error) {\n          console.error('Error processing GeoJSON container for copy:', error);\n          // Fallback to placeholder\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[GeoJSON Map - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        }\n      }\n\n      // Handle TopoJSON containers - convert to structured data tables\n      clone.querySelectorAll('.topojson-container').forEach(container => {\n        const originalSource = container.getAttribute('data-original-source');\n        if (originalSource) {\n          try {\n            const topoData = JSON.parse(originalSource);\n            \n            // Create a simple table showing TopoJSON data\n            const table = document.createElement('table');\n            table.style.cssText = 'width: 100%; border-collapse: collapse; border: 1px solid #ddd; margin: 0.5em 0;';\n            \n            const headerRow = document.createElement('tr');\n            headerRow.innerHTML = '<td colspan=\"2\" style=\"background-color: #f5f5f5; padding: 8px; border: 1px solid #ddd; font-weight: bold;\">TopoJSON Data</td>';\n            table.appendChild(headerRow);\n            \n            const typeRow = document.createElement('tr');\n            typeRow.innerHTML = `<td style=\"padding: 8px; border: 1px solid #ddd; font-weight: bold;\">Type:</td><td style=\"padding: 8px; border: 1px solid #ddd;\">${topoData.type || 'Unknown'}</td>`;\n            table.appendChild(typeRow);\n            \n            if (topoData.objects) {\n              const objectsRow = document.createElement('tr');\n              const objectNames = Object.keys(topoData.objects).join(', ');\n              objectsRow.innerHTML = `<td style=\"padding: 8px; border: 1px solid #ddd; font-weight: bold;\">Objects:</td><td style=\"padding: 8px; border: 1px solid #ddd;\">${objectNames}</td>`;\n              table.appendChild(objectsRow);\n            }\n            \n            container.parentNode.replaceChild(table, container);\n          } catch (error) {\n            // If JSON parsing fails, create a simple text block\n            const textBlock = document.createElement('div');\n            textBlock.style.cssText = 'padding: 12px; background-color: #f5f5f5; border: 1px solid #ddd; font-family: monospace; white-space: pre-wrap; margin: 0.5em 0;';\n            textBlock.textContent = `TopoJSON Data:\\n${originalSource}`;\n            container.parentNode.replaceChild(textBlock, container);\n          }\n        } else {\n          // No original source, replace with placeholder\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[TopoJSON Map - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        }\n      });\n\n      // Handle STL containers - convert canvas to image\n      const stlContainers = clone.querySelectorAll('.stl-container');\n      for (const container of stlContainers) {\n        try {\n          // Find the corresponding STL container in the original DOM by searching with proper escaping\n          const originalSource = container.getAttribute('data-original-source');\n          if (!originalSource) {\n            console.warn('No original source found for STL container');\n            throw new Error('No original source');\n          }\n\n          // Find original container more reliably\n          let originalContainer = null;\n          const allOriginalContainers = this.output.querySelectorAll('.stl-container');\n          for (const candidate of allOriginalContainers) {\n            if (candidate.getAttribute('data-original-source') === originalSource) {\n              originalContainer = candidate;\n              break;\n            }\n          }\n          \n          if (originalContainer) {\n            // Look for canvas element in the original container (Three.js WebGL canvas)\n            const canvas = originalContainer.querySelector('canvas');\n            if (canvas && canvas.width > 0 && canvas.height > 0) {\n              try {\n                // Ensure the Three.js scene is rendered before capturing\n                // The renderer should be accessible through the canvas or container\n                const renderer = canvas._threeRenderer || originalContainer._threeRenderer;\n                const scene = originalContainer._threeScene;\n                const camera = originalContainer._threeCamera;\n                \n                // If we have access to the Three.js objects, render the scene\n                if (renderer && scene && camera) {\n                  renderer.render(scene, camera);\n                }\n                \n                // Create image from canvas with error handling for WebGL context\n                const dataUrl = canvas.toDataURL('image/png', 1.0);\n                const img = document.createElement('img');\n                img.src = dataUrl;\n                img.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px; margin: 0.5em 0;';\n                img.alt = 'STL 3D Model';\n                \n                // Replace the container with the image\n                container.parentNode.replaceChild(img, container);\n                continue;\n              } catch (error) {\n                console.warn('Failed to convert STL canvas to image (likely WebGL context issue):', error);\n              }\n            } else {\n              console.warn('No valid canvas found in STL container');\n            }\n          } else {\n            console.warn('Could not find original STL container');\n          }\n          \n          // Fallback to placeholder if canvas conversion fails\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[STL 3D Model - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        } catch (error) {\n          console.error('Error processing STL container for copy:', error);\n          // Fallback to placeholder\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[STL 3D Model - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        }\n      }\n\n      const htmlContent = `\n          <html xmlns:v=\"urn:schemas-microsoft-com:vml\"\n                xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n                xmlns:w=\"urn:schemas-microsoft-com:office:word\">\n            <head>\n              <meta charset=\"utf-8\">\n              <style>\n                table { border-collapse: collapse; width: 100%; margin-bottom: 1em; }\n                th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }\n                th { background-color: #f0f0f0; font-weight: bold; }\n\n                /* Code block styling */\n                .hljs { display: block; overflow-x: auto; padding: 1em; }\n                .hljs-keyword { color: #0033B3; }\n                .hljs-string { color: #067D17; }\n                .hljs-comment { color: #8C8C8C; }\n                .hljs-function { color: #00627A; }\n                .hljs-number { color: #1750EB; }\n                .hljs-operator { color: #687687; }\n                .hljs-punctuation { color: #000000; }\n\n                /* Word-specific image handling */\n                img { display: block; max-width: none; }\n              </style>\n            </head>\n            <body>\n              ${clone.innerHTML}\n            </body>\n          </html>`;\n\n      const platform = this.getPlatform();\n\n      if (platform === 'macos') {\n        // macOS approach (previously working version)\n        try {\n          await navigator.clipboard.write([\n            new ClipboardItem({\n              'text/html': new Blob([htmlContent], { type: 'text/html' }),\n              'text/plain': new Blob([clone.innerText], { type: 'text/plain' })\n            })\n          ]);\n        } catch (modernErr) {\n          // Safari fallback\n          if (!this.copyToClipboard(htmlContent)) {\n            throw new Error('Fallback copy failed');\n          }\n        }\n      } else {\n        // Windows/Linux approach\n        const tempDiv = document.createElement('div');\n        tempDiv.style.position = 'fixed';\n        tempDiv.style.left = '-9999px';\n        tempDiv.style.top = '0';\n        tempDiv.innerHTML = htmlContent;\n        document.body.appendChild(tempDiv);\n\n        try {\n          await navigator.clipboard.write([\n            new ClipboardItem({\n              'text/html': new Blob([htmlContent], { type: 'text/html' }),\n              'text/plain': new Blob([clone.innerText], { type: 'text/plain' })\n            })\n          ]);\n        } catch (modernErr) {\n          const selection = window.getSelection();\n          const range = document.createRange();\n          range.selectNodeContents(tempDiv);\n          selection.removeAllRanges();\n          selection.addRange(range);\n\n          const successful = document.execCommand('copy');\n          if (!successful) {\n            throw new Error('Fallback copy failed');\n          }\n        } finally {\n          if (tempDiv && tempDiv.parentNode) {\n            document.body.removeChild(tempDiv);\n          }\n        }\n      }\n\n      copyButton.textContent = 'Copied!';\n    } catch (err) {\n      console.error('Copy HTML failed:', err);\n      copyButton.textContent = 'Copy failed';\n    }\n\n    setTimeout(() => {\n      copyButton.textContent = 'Copy Rendered';\n    }, 2000);\n  }\n\n  /**\n   * Converts an SVG element to a PNG blob.\n   * \n   * @param {SVGElement} svgElement - The SVG element to convert\n   * @returns {Promise<Blob>} A promise that resolves with the PNG blob\n   */\n  svgToPng(svgElement) {\n    return new Promise((resolve, reject) => {\n      const svgString = new XMLSerializer().serializeToString(svgElement);\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n\n      const scale = 2;\n      \n      // Check if this is a Mermaid-generated SVG (they don't have explicit width/height attributes)\n      const isMermaidSvg = svgElement.closest('.mermaid') || svgElement.classList.contains('mermaid');\n      const hasExplicitDimensions = svgElement.getAttribute('width') && svgElement.getAttribute('height');\n      \n      let svgWidth, svgHeight;\n      \n      if (isMermaidSvg || !hasExplicitDimensions) {\n        // For Mermaid or other generated SVGs, prioritize computed dimensions\n        svgWidth = svgElement.clientWidth || \n                   (svgElement.viewBox && svgElement.viewBox.baseVal.width) || \n                   parseFloat(svgElement.getAttribute('width')) || 400;\n        svgHeight = svgElement.clientHeight || \n                    (svgElement.viewBox && svgElement.viewBox.baseVal.height) || \n                    parseFloat(svgElement.getAttribute('height')) || 300;\n      } else {\n        // For explicit SVGs (like fenced SVG blocks), prioritize explicit attributes\n        svgWidth = parseFloat(svgElement.getAttribute('width')) || \n                   (svgElement.viewBox && svgElement.viewBox.baseVal.width) || \n                   svgElement.clientWidth || 400;\n        svgHeight = parseFloat(svgElement.getAttribute('height')) || \n                    (svgElement.viewBox && svgElement.viewBox.baseVal.height) || \n                    svgElement.clientHeight || 300;\n      }\n\n\n      // Ensure the SVG string has explicit dimensions by modifying it if necessary\n      let modifiedSvgString = svgString;\n      if (svgWidth && svgHeight) {\n        // Create a temporary SVG element to modify the serialized string\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = svgString;\n        const tempSvg = tempDiv.querySelector('svg');\n        if (tempSvg) {\n          tempSvg.setAttribute('width', svgWidth.toString());\n          tempSvg.setAttribute('height', svgHeight.toString());\n          modifiedSvgString = new XMLSerializer().serializeToString(tempSvg);\n        }\n      }\n\n\n      canvas.width = svgWidth * scale;\n      canvas.height = svgHeight * scale;\n      ctx.scale(scale, scale);\n\n      img.onload = () => {\n        try {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, svgWidth, svgHeight);\n          canvas.toBlob(blob => {\n            resolve(blob);\n          }, 'image/png', 1.0);\n        } catch (err) {\n          reject(err);\n        }\n      };\n\n      img.onerror = reject;\n      const svgDataUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(modifiedSvgString)}`;\n      img.src = svgDataUrl;\n    });\n  }\n\n  /**\n   * Shows or hides the control buttons.\n   * \n   * @param {boolean} show - Whether to show the controls\n   */\n  controlsShow(show) {\n    this.controls.style.display = show ? '' : 'none';\n    this.options.showControls = show;\n    this.adjustLayout();\n    \n    // Emit controls visibility change event\n    this.events.emit('controls:visibility', show);\n  }\n\n  /**\n   * Shows or hides the title section.\n   * \n   * @param {boolean} show - Whether to show the title\n   */\n  titleShow(show) {\n    this.title.style.display = show ? '' : 'none';\n    this.options.titleShow = show;\n    this.adjustLayout();\n    \n    // Emit title visibility change event\n    this.events.emit('title:visibility', show);\n  }\n\n  /**\n   * Sets the content of the title section.\n   * \n   * @param {string} content - The HTML content for the title\n   */\n  titleSetContent(content) {\n    this.title.innerHTML = content;\n    this.options.titleContent = content;\n    \n    // Emit title content change event\n    this.events.emit('title:content', content);\n  }\n\n  /**\n   * Gets the content of the title section.\n   * \n   * @returns {string} The HTML content of the title\n   */\n  titleGetContent() {\n    return this.title.innerHTML;\n  }\n\n  /**\n   * Toggles between the different view modes (source, rendered, split).\n   * Cycles through: source -> split -> rendered -> source.\n   */\n  toggleView() {\n    if (this.currentView === 'src') {\n      this.setView('split');\n    } else if (this.currentView === 'split') {\n      this.setView('html');\n    } else {\n      this.setView('src');\n    }\n  }\n\n  /**\n   * Copies text to clipboard using various fallback methods.\n   * \n   * @param {string} string - The text to copy to the clipboard\n   * @returns {boolean} Whether the copy operation was successful\n   */\n  copyToClipboard(string) {\n    let textarea;\n    let result;\n\n    try {\n      textarea = document.createElement('textarea');\n      textarea.setAttribute('readonly', true);\n      textarea.setAttribute('contenteditable', true);\n      textarea.style.position = 'fixed';\n      textarea.style.left = '0';\n      textarea.style.top = '0';\n      textarea.style.opacity = '0';\n      textarea.value = string;\n\n      document.body.appendChild(textarea);\n\n      textarea.focus();\n      textarea.select();\n\n      const range = document.createRange();\n      range.selectNodeContents(textarea);\n\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n\n      textarea.setSelectionRange(0, textarea.value.length);\n      result = document.execCommand('copy');\n    } catch (err) {\n      console.error(err);\n      result = null;\n    } finally {\n      if (textarea && textarea.parentNode) {\n        document.body.removeChild(textarea);\n      }\n    }\n\n    // manual copy fallback using prompt\n    if (!result) {\n      const isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n      const copyHotkey = isMac ? '⌘C' : 'CTRL+C';\n      result = prompt(`Press ${copyHotkey}`, string);\n      if (!result) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Converts a math element to a PNG blob using simple SVG-to-PNG conversion.\n   * Based on the working approach from math-test.html\n   * \n   * @param {HTMLElement} mathElement - The math element to convert\n   * @returns {Promise<Blob>} A promise that resolves with the PNG blob\n   */\n  async mathToPng(mathElement) {\n    return new Promise((resolve, reject) => {\n      try {\n        const svg = mathElement.querySelector('svg');\n        if (!svg) {\n          reject(new Error('No SVG found in math element'));\n          return;\n        }\n\n        // Serialize SVG to string\n        const serializer = new XMLSerializer();\n        const svgStr = serializer.serializeToString(svg);\n        const svgBlob = new Blob([svgStr], { type: \"image/svg+xml;charset=utf-8\" });\n        const url = URL.createObjectURL(svgBlob);\n        \n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement('canvas');\n          canvas.width = svg.width.baseVal.value;\n          canvas.height = svg.height.baseVal.value;\n          const ctx = canvas.getContext('2d');\n          \n          // White background\n          ctx.fillStyle = \"#FFFFFF\";\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          \n          // Draw the SVG image\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          \n          // Clean up URL\n          URL.revokeObjectURL(url);\n          \n          // Convert canvas to blob\n          canvas.toBlob(resolve, 'image/png');\n        };\n        \n        img.onerror = () => {\n          URL.revokeObjectURL(url);\n          reject(new Error('Failed to load SVG image'));\n        };\n        \n        img.src = url;\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * Checks if MathJax 3 is available with the necessary APIs.\n   * \n   * @returns {boolean} True if MathJax 3 is properly loaded\n   * @private\n   */\n  isMathJax3Available() {\n    return typeof MathJax !== 'undefined' &&\n           typeof MathJax.typesetPromise === 'function' &&\n           (typeof MathJax.tex2svgPromise === 'function' || \n            // Allow test environment with basic MathJax mock\n            (typeof jest !== 'undefined' && MathJax.version));\n  }\n\n\n\n  /**\n   * Converts CHTML MathJax output to PNG using html2canvas-like approach.\n   * \n   * @param {HTMLElement} chtmlContainer - The CHTML MathJax container\n   * @returns {Promise<Blob|null>} PNG blob if successful, null otherwise\n   * @private\n   */\n  async mathCHTMLToPng(chtmlContainer) {\n    try {\n      // Get container bounds\n      const rect = chtmlContainer.getBoundingClientRect();\n      if (rect.width === 0 || rect.height === 0) {\n        console.warn('CHTML container has zero dimensions');\n        return null;\n      }\n\n      // Create canvas\n      const padding = 8;\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      const scale = 2; // High DPI\n      const canvasWidth = rect.width + padding * 2;\n      const canvasHeight = rect.height + padding * 2;\n      \n      canvas.width = canvasWidth * scale;\n      canvas.height = canvasHeight * scale;\n      canvas.style.width = canvasWidth + 'px';\n      canvas.style.height = canvasHeight + 'px';\n      ctx.scale(scale, scale);\n\n      // White background\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n      // Convert CHTML to SVG for rendering\n      const foreignObject = `\n        <svg width=\"${canvasWidth}\" height=\"${canvasHeight}\" xmlns=\"http://www.w3.org/2000/svg\">\n          <foreignObject x=\"${padding}\" y=\"${padding}\" width=\"${rect.width}\" height=\"${rect.height}\">\n            <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font-size: 16px; font-family: 'Times New Roman', serif;\">\n              ${chtmlContainer.outerHTML}\n            </div>\n          </foreignObject>\n        </svg>\n      `;\n\n      const svgBlob = new Blob([foreignObject], { type: 'image/svg+xml;charset=utf-8' });\n      const url = URL.createObjectURL(svgBlob);\n\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          try {\n            ctx.drawImage(img, 0, 0, canvasWidth, canvasHeight);\n            URL.revokeObjectURL(url);\n            canvas.toBlob(resolve, 'image/png');\n          } catch (error) {\n            URL.revokeObjectURL(url);\n            reject(error);\n          }\n        };\n        img.onerror = () => {\n          URL.revokeObjectURL(url);\n          reject(new Error('Failed to load CHTML as image'));\n        };\n        img.src = url;\n      });\n\n    } catch (error) {\n      console.error('CHTML to PNG conversion failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Detects the user's operating system platform.\n   * \n   * @returns {string} The detected platform: 'macos', 'windows', 'linux', or 'unknown'\n   */\n  getPlatform() {\n    const platform = navigator.platform.toLowerCase();\n    const userAgent = navigator.userAgent.toLowerCase();\n\n    if (platform.includes('mac') || userAgent.includes('mac')) {\n      return 'macos';\n    } else if (userAgent.includes('windows')) {\n      return 'windows';\n    } else if (userAgent.includes('linux')) {\n      return 'linux';\n    }\n    return 'unknown';\n  }\n  \n  /**\n   * Example of how to use text selection features\n   * This method demonstrates registering selection callbacks and manipulating selected text\n   * \n   * @example\n   * // Register a selection callback\n   * const editor = new SquibView('#editor');\n   * const unsubscribe = editor.onTextSelected(selectionData => {\n   *   console.log(`Selected text: ${selectionData.text} in ${selectionData.panel} panel`);\n   *   \n   *   // Replace selection with bold text if in source panel\n   *   if (selectionData.panel === 'source') {\n   *     editor.replaceSelectedText(`**${selectionData.text}**`, selectionData);\n   *   }\n   *   \n   *   // Make selection non-editable if in rendered panel\n   *   if (selectionData.panel === 'rendered') {\n   *     editor.setSelectionEditable(false, selectionData);\n   *   }\n   * });\n   * \n   * // Later, to stop listening for selections:\n   * unsubscribe();\n   * \n   * // Get current selection manually (without callback)\n   * const selection = editor.getCurrentSelection();\n   * if (selection) {\n   *   editor.replaceSelectedText('replacement text', selection);\n   * }\n   */\n  demonstrateSelectionFeatures() {\n    // This is a documentation method only and doesn't need implementation\n    console.log('See method documentation for usage examples');\n  }\n\n  /**\n   * Creates a complete HTML page from a HTML snippet/div content.\n   * \n   * @param {string} inputDivHTML - The HTML content to include in the page\n   * @param {boolean} [editable=false] - Whether the content should be editable\n   * @returns {string} A complete HTML page as a string\n   */\n  makeHTMLPageFromDiv(inputDivHTML, editable = false) {\n    let editableAttr = editable ? 'contenteditable=\"true\"' : '';\n    let s =\n      `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Markdown Viewer with Graphics Support</title>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n  <xscripx src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></xscripx>\n  <xscripx src=\"https://unpkg.com/mermaid/dist/mermaid.min.js\"></xscripx>\n  <style>\n      body {\n          font-family: Arial, sans-serif;\n          box-sizing: border-box;\n          padding: 20px;\n      }\n      .squibview-output {\n          width: 50%;\n          margin: auto;\n      }\n      pre {\n          background-color: #f4f4f4;\n          padding: 10px;\n          border-radius: 5px;\n          overflow-x: auto;\n      }\n      table {\n          width: 100%;\n          border-collapse: collapse;\n          margin: 20px 0;\n      }\n      table, th, td {\n          border: 1px solid black;\n      }\n      th, td {\n          padding: 8px;\n          text-align: left;\n      }\n  </style>\n</head>\n<body ${editableAttr}>\n  ${inputDivHTML}\n</body>\n</html>`;\n    // Replace the xscript placeholders with real script tags\n    s = s.replaceAll(\"xscripx\", \"script\");\n    return s;\n  }\n\n  /**\n   * Creates a RevealJS presentation page from markdown content.\n   * Splits the markdown on '---' delimiters to create slides.\n   * \n   * @param {string} markdown - The markdown content to convert to slides\n   * @param {string} [title=\"Slide Presentation\"] - The title for the presentation\n   * @returns {string} A complete HTML page with RevealJS for presenting slides\n   */\n  makeRevealJSFullPage(markdown, title = \"Slide Presentation\") {\n    return `<!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>${title}</title>\n      <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.css\">\n      <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js/dist/theme/black.css\">\n      <script src=\"https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\"></script>\n  </head>\n  <body>\n      <div class=\"reveal\" contenteditable=\"true\">\n          <div class=\"slides\">\n              ${markdown.split('---').map(slide => `<section data-markdown><script type=\"text/template\">${slide.trim()}</script></section>`).join('\\n')}\n          </div>\n      </div>\n      <script src=\"https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/reveal.js/plugin/markdown/markdown.js\"></script>\n      <script>\n          Reveal.initialize({\n              plugins: [ RevealMarkdown ]\n          });\n          \n          // Ensure Mermaid diagrams initialize correctly\n          document.addEventListener('DOMContentLoaded', () => {\n              mermaid.initialize({ startOnLoad: true , securityLevel: 'loose', theme: 'dark' });\n              document.querySelectorAll('.mermaid').forEach(el => {\n                  el.innerHTML = el.textContent;\n                  mermaid.init(undefined, el);\n              });\n          });\n      </script>\n  </body>\n  </html>`;\n  }\n\n  /**\n   * Converts CSV/TSV content to a markdown table.\n   * \n   * @param {string} input - The CSV/TSV string to convert\n   * @param {string} [delimiter=','] - The delimiter used in the input (comma, tab, etc.)\n   * @returns {string} A markdown formatted table\n   */\n  csvOrTsvToMarkdownTable(input, delimiter = ',') {\n    // Parse CSV/TSV content\n    const parsedData = Papa.parse(input, {\n      delimiter,\n      skipEmptyLines: true\n    });\n\n    const rows = parsedData.data;\n\n    if (rows.length === 0) return 'No data found.';\n\n    // Markdown table header\n    const header = `| ${rows[0].join(' | ')} |`;\n    const separator = `| ${rows[0].map(() => '---').join(' | ')} |`;\n    const tableRows = rows.slice(1).map(row => `| ${row.join(' | ')} |`).join('\\n');\n\n    return `${header}\\n${separator}\\n${tableRows}`;\n  }\n\n  /**\n   * Gets whether image tags are preserved in source view\n   * @returns {boolean} Whether image tags are preserved\n   */\n  get preserveImageTags() {\n    return this.options.preserveImageTags;\n  }\n\n  /**\n   * Sets whether image tags should be preserved in source view\n   * @param {boolean} value - Whether to preserve image tags\n   */\n  set preserveImageTags(value) {\n    this.options.preserveImageTags = value;\n    // Re-render content to apply the new setting\n    this.renderMarkdown();\n  }\n\n  /**\n   * Fixes linefeeds in markdown by adding two spaces at the end of lines that are not already hard breaks, not empty, and not part of a list, heading, or code block.\n   * @param {string} markdown - The markdown text to process\n   * @returns {string} - The markdown text with fixed linefeeds\n   */\n  fixLinefeedsInMarkdown(markdown) {\n    if (typeof markdown !== 'string') return markdown;\n    const lines = markdown.split('\\n');\n    let inCodeBlock = false;\n    return lines.map(line => {\n      // Toggle code block state\n      if (/^```/.test(line)) {\n        inCodeBlock = !inCodeBlock;\n        return line;\n      }\n      if (inCodeBlock) return line;\n      // Skip headings, lists, blockquotes, tables, and empty lines\n      if (/^\\s*([#\\-*>]|\\d+\\.|\\|)/.test(line) || line.trim() === '') return line;\n      // If line already ends with two or more spaces, or is just whitespace, skip\n      if (/\\s{2,}$/.test(line)) return line;\n      // Otherwise, add two spaces\n      return line + '  ';\n    }).join('\\n');\n  }\n\n  /**\n   * Toggles the linefeed view state. When enabled, rendered HTML will have <br> at the end of lines that would otherwise be collapsed.\n   */\n  toggleLinefeedView() {\n    this.linefeedViewEnabled = !this.linefeedViewEnabled;\n    this.renderOutput();\n  }\n\n  /**\n   * Converts a DOM element to a data URL image.\n   * @param {HTMLElement} element - The DOM element to convert\n   * @returns {Promise<string>} A promise that resolves with the data URL\n   */\n  async divToDataUrl(element) {\n    return new Promise((resolve, reject) => {\n      try {\n        // Get the element's dimensions\n        const rect = element.getBoundingClientRect();\n        const width = rect.width || 400;\n        const height = rect.height || 300;\n\n        // Special handling for Leaflet maps (GeoJSON containers)\n        if (element.classList.contains('geojson-container') || element.id && element.id.startsWith('map-')) {\n          // Try to access the Leaflet map instance\n          const mapId = element.id;\n          if (typeof L !== 'undefined' && mapId && window[mapId + '_map']) {\n            const map = window[mapId + '_map'];\n            \n            // Use Leaflet's built-in screenshot functionality if available\n            if (map.getContainer) {\n              try {\n                // Create a canvas from the map container using html2canvas-like approach\n                const mapContainer = map.getContainer();\n                const mapRect = mapContainer.getBoundingClientRect();\n                \n                // Create canvas and draw the map tiles\n                const canvas = document.createElement('canvas');\n                canvas.width = mapRect.width;\n                canvas.height = mapRect.height;\n                const ctx = canvas.getContext('2d');\n                \n                // White background\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                \n                // Try to capture tile layers\n                const tileLayers = mapContainer.querySelectorAll('.leaflet-tile');\n                let tilesLoaded = 0;\n                const totalTiles = tileLayers.length;\n                \n                if (totalTiles === 0) {\n                  // No tiles, just return white canvas\n                  const dataUrl = canvas.toDataURL('image/png', 1.0);\n                  resolve(dataUrl);\n                  return;\n                }\n                \n                // Load and draw each tile\n                for (const tile of tileLayers) {\n                  const img = new Image();\n                  img.crossOrigin = 'anonymous';\n                  \n                  img.onload = () => {\n                    try {\n                      const tileRect = tile.getBoundingClientRect();\n                      const offsetX = tileRect.left - mapRect.left;\n                      const offsetY = tileRect.top - mapRect.top;\n                      \n                      ctx.drawImage(img, offsetX, offsetY, tileRect.width, tileRect.height);\n                    } catch (e) {\n                      console.warn('Failed to draw tile:', e);\n                    }\n                    \n                    tilesLoaded++;\n                    if (tilesLoaded === totalTiles) {\n                      // All tiles loaded, now draw SVG overlays\n                      const svgElements = mapContainer.querySelectorAll('svg');\n                      for (const svg of svgElements) {\n                        if (svg.classList.contains('leaflet-attribution-flag')) continue;\n                        \n                        try {\n                          const svgRect = svg.getBoundingClientRect();\n                          const svgOffsetX = svgRect.left - mapRect.left;\n                          const svgOffsetY = svgRect.top - mapRect.top;\n                          \n                          // Convert SVG to image and draw it\n                          const svgData = new XMLSerializer().serializeToString(svg);\n                          const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\n                          const svgUrl = URL.createObjectURL(svgBlob);\n                          \n                          const svgImg = new Image();\n                          svgImg.onload = () => {\n                            ctx.drawImage(svgImg, svgOffsetX, svgOffsetY);\n                            URL.revokeObjectURL(svgUrl);\n                          };\n                          svgImg.src = svgUrl;\n                        } catch (e) {\n                          console.warn('Failed to draw SVG overlay:', e);\n                        }\n                      }\n                      \n                      const dataUrl = canvas.toDataURL('image/png', 1.0);\n                      resolve(dataUrl);\n                    }\n                  };\n                  \n                  img.onerror = () => {\n                    tilesLoaded++;\n                    if (tilesLoaded === totalTiles) {\n                      const dataUrl = canvas.toDataURL('image/png', 1.0);\n                      resolve(dataUrl);\n                    }\n                  };\n                  \n                  img.src = tile.src;\n                }\n                \n                return;\n              } catch (error) {\n                console.warn('Leaflet-specific approach failed:', error);\n              }\n            }\n          }\n        }\n\n        // First try to find existing canvas or SVG elements\n        const canvas = element.querySelector('canvas');\n        if (canvas && canvas.width > 0 && canvas.height > 0) {\n          try {\n            const dataUrl = canvas.toDataURL('image/png', 1.0);\n            resolve(dataUrl);\n            return;\n          } catch (error) {\n            console.warn('Canvas toDataURL failed, trying SVG approach:', error);\n          }\n        }\n\n        // Try to find SVG elements\n        const svgs = element.querySelectorAll('svg');\n        if (svgs.length > 0) {\n          // Find the largest SVG (excluding small attribution icons)\n          let bestSvg = null;\n          let maxArea = 0;\n          \n          for (const svg of svgs) {\n            if (svg.classList.contains('leaflet-attribution-flag')) continue;\n            \n            const svgWidth = svg.clientWidth || parseFloat(svg.getAttribute('width')) || 0;\n            const svgHeight = svg.clientHeight || parseFloat(svg.getAttribute('height')) || 0;\n            const area = svgWidth * svgHeight;\n            \n            if (area > maxArea && area > 100) {\n              maxArea = area;\n              bestSvg = svg;\n            }\n          }\n          \n          if (bestSvg) {\n            try {\n              this.svgToPng(bestSvg).then(pngBlob => {\n                const reader = new FileReader();\n                reader.onloadend = () => resolve(reader.result);\n                reader.readAsDataURL(pngBlob);\n              }).catch(reject);\n              return;\n            } catch (error) {\n              console.warn('SVG conversion failed, trying simple approach:', error);\n            }\n          }\n        }\n\n        // Simple fallback: create a placeholder image\n        const fallbackCanvas = document.createElement('canvas');\n        fallbackCanvas.width = width;\n        fallbackCanvas.height = height;\n        const ctx = fallbackCanvas.getContext('2d');\n        \n        // White background\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, width, height);\n        \n        // Draw simple text indicating content type\n        ctx.fillStyle = '#666';\n        ctx.font = '16px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('GeoJSON Map', width / 2, height / 2);\n        ctx.fillText('(Interactive content)', width / 2, height / 2 + 20);\n        \n        const dataUrl = fallbackCanvas.toDataURL('image/png', 1.0);\n        resolve(dataUrl);\n        \n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n// The React component wrapper has been moved to a separate file\n// to avoid dependency issues when React is not available\n\n// Export the main class\nexport default SquibView;"],"names":["tinyEmitterModule","VERSION","REPO_URL","this","Node","HtmlToMarkdown","options","arguments","length","undefined","_classCallCheck","turndownService","TurndownService","_objectSpread","headingStyle","codeBlockStyle","emDelimiter","bulletListMarker","cache","Map","cacheSize","_specialBlocks","configureTurndownRules","_createClass","key","value","_this","addRule","filter","node","nodeName","hasAttribute","replacement","content","lang","getAttribute","innerContent","contentFromHtml","innerHTML","replace","tempDiv","ownerDocument","createElement","textContent","innerText","trim","console","warn","tableElement","querySelector","_htmlTableToDelimitedText","preElement","codeElement","langTag","finalInnerContent","outerHTML","classList","contains","blockId","Math","random","toString","substring","set","type","concat","geojsonContent","dataset","geojson","e","error","mathContent","firstChild","code","language","className","match","prefix","parentNode","cells","querySelectorAll","separatorRow","repeat","parentElement","markdown","headerRow","forEach","th","turndown","bodyRows","row","td","keep","checkbox","checked","restOfLiContent","current","nextSibling","markdownContent","_getStringHash","str","hash","i","char","charCodeAt","convert","html","clear","_placeholders","cacheKey","has","get","processedHtml","_preProcessSpecialContainers","_postProcessMarkdown","originalSource","size","firstKey","keys","next","_this2","document","Error","_regexFallbackPreProcess","specialDivs","placeholders","div","index","sourceType","placeholder","includes","push","placeholderText","createTextNode","replaceChild","_ref","blockContent","fencedBlock","textPlaceholder","escapedPlaceholder","mermaidBlockRegex","svgBlockRegex","svgMatch","geojsonBlockRegex","JSON","parse","mathBlockRegex","codeBlockRegex","blockIndex","originalBlocks","exec","mermaidIndex","svgIndex","geojsonIndex","mathIndex","mermaidBlocks","b","svgBlocks","geojsonBlocks","topojsonIndex","topojsonBlocks","stlIndex","stlBlocks","mathBlocks","delimiter","data","_extractTableDataFromHtml","String","rows","rowData","cell","cellText","join","htmlContent","rowRegex","rowContent","cellRegex","cellMatch","_this3","divRegex","extractedContent","originalSourceMatch","preMatch","RevisionManager","initialContent","initialContentType","contentType","diffs","currentIndex","diffEngine","DiffMatchPatch","initialize","addRevision","newContent","currentContent","getCurrentContent","diff","diff_main","diff_cleanupSemantic","patchText","patch_toText","patch_make","slice","undo","getCurrentContentType","redo","patches","patch_fromText","_this$diffEngine$patc","patch_apply","_this$diffEngine$patc2","_slicedToArray","patchedText","currentType","setRevision","getRevisionCount","getCurrentIndex","getContentAtRevision","_this$diffEngine$patc3","_this$diffEngine$patc4","computeDiff","fromIndex","toIndex","fromContent","toContent","computeLineDiff","rawDiff","fromLines","split","toLines","lineDiffs","currentFromLine","currentToLine","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","operation","text","DIFF_EQUAL","equalLines","oldLineNum","newLineNum","DIFF_DELETE","deletedLines","DIFF_INSERT","addedLines","err","f","getDiffStats","lineDiff","stats","additions","deletions","modifications","totalChanges","line","getRevisionInfo","_this$getContentAtRev","info","contentSize","lineCount","isCurrent","diffSize","hasContentTypeChange","changeStats","getHljs","window","hljs","global","SquibView","element","defaultOptions","container","events","TinyEmitter","revisionManager","RevisionHistory","lastSelectionData","_onTextReplacementHandler","renderers","_initializeHtmlToMarkdown","initializeLibraries","registerDefaultRenderers","createStructure","initializeEventHandlers","initializeResizeObserver","inputContentType","setContent","setView","initialView","updateTypeButtons","onReplaceSelectedText","_initializeHtmlToMarkdown2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","module","HtmlToMarkdownClass","wrap","_callee$","_context","prev","_htmlToMarkdownConverter","sent","t0","stop","apply","mermaid","startOnLoad","securityLevel","theme","errorCallback","init","md","MarkdownIt","linkify","typographer","highlight","getLanguage","renderer","rules","fence","tokens","idx","env","self","renderToken","token","toLowerCase","escapedContent","utils","escapeHtml","escapeForAttribute","escapedSource","mathId","singleLineContent","langName","escapedLangName","tableLangs","Papa","parseConfig","skipEmptyLines","parsedData","errors","errorMessages","map","message","_dataToHtmlTable","codeHtml","highlightedContent","ignoreIllegals","headerCells","bodyCells","j","cellContent","registerRenderer","config","emit","render","source","renderMarkdown","sourceToOutput","outputToSource","output","htmlToMarkdown","operations","increaseHeadings","src","markdownAdjustHeadings","decreaseHeadings","removeHR","fixLinefeeds","fixLinefeedsInMarkdown","toggleLinefeedView","getContent","buttons","label","action","title","renderHTML","makeRevealJSFullPage","markdownTable","csvOrTsvToMarkdownTable","tableToCSV","add","baseClass","titleShow","titleContent","showControls","controls","editor","input","typeButtonsContainer","universalButtonsContainer","_this4","button","btn","addEventListener","appendChild","_this5","view","copySource","copyHTML","revisionUndo","revisionRedo","selection","getSelection","selectionData","panel","range","start","selectionStart","end","selectionEnd","editDebounceTimer","specialContentBlocks","currentView","editableContent","clearTimeout","setTimeout","renderedContent","newSource","getRangeAt","preserveSpecialBlocks","specialBlocks","mermaidRegex","mermaidMatch","startIndex","endIndex","geojsonRegex","geojsonMatch","mathRegex","mathMatch","modifiedSource","mermaidDivRegex","geojsonDivRegex","mathDivRegex","mermaidDivMatch","block","geojsonDivMatch","mathDivMatch","_this6","resizeObserver","ResizeObserver","entries","entry","target","adjustLayout","observe","containerRect","getBoundingClientRect","titleHeight","offsetHeight","controlsHeight","availableHeight","height","availableWidth","width","style","containerWidth","containerHeight","saveRevision","typeChanged","renderOutput","prevState","nextState","revisionSet","state","revisionNumRevsions","revisionGetCurrentIndex","cleanMarkdown","_renderMarkdown","_callee2","_this7","contentDiv","images","_iterator2","_step2","_loop","_callee2$","_context3","linefeedViewEnabled","open","close","lines","processedLines","test","img","originalSrc","canvas","ctx","tempImg","_loop$","_context2","preserveImageTags","getContext","Image","crossOrigin","Promise","resolve","reject","onload","naturalWidth","naturalHeight","drawImage","dataUrl","toDataURL","onerror","delegateYield","t1","finish","initializeGeoRenderers","initializeSTLRenderers","ensureMathJaxAndTypeset","_x","_ensureMathJaxAndTypeset","_callee3","typesetAll","_callee3$","_context4","_typesetAll2","MathJax","typesetPromise","Array","from","abrupt","mathJaxLoading","loader","load","tex","packages","inlineMath","displayMath","processEscapes","processEnvironments","renderActions","addMenu","ignoreHtmlClass","processHtmlClass","svg","fontCache","startup","typeset","script","async","_typesetAll","then","head","_this8","geojsonContainers","initialized","renderGeoJSON","topojsonContainers","renderTopoJSON","_this9","stlContainers","renderSTL","originalData","setAttribute","L","jsonData","cssText","mapId","id","tileLayer","attribution","addTo","geojsonLayer","geoJSON","getBounds","isValid","fitBounds","padding","topojson","topoData","geojsonData","feature","Object","objects","THREE","stlData","scene","Scene","camera","PerspectiveCamera","offsetWidth","WebGLRenderer","antialias","setSize","setClearColor","domElement","_threeScene","_threeCamera","_threeRenderer","geometry","parseSTL","material","MeshLambertMaterial","color","mesh","Mesh","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","normalize","box","Box3","setFromObject","center","getCenter","Vector3","getSize","maxDim","max","x","y","z","lookAt","animate","requestAnimationFrame","rotation","BufferGeometry","vertices","normals","currentNormal","vertexCount","_iterator3","_step3","startsWith","parts","parseFloat","Float32BufferAttribute","table","csvRows","markdownRemoveAllHR","getMarkdownSource","newMarkdown","offset","modifiedLines","headingMatch","currentHeadingLevel","newHeadingLevel","min","markdownEditorAdjustHeadings","toggle","copyMDButton","copyHTMLButton","remove","outputDiv","insertContentInIframe","iframe","border","display","iframeDoc","contentWindow","write","output_iframe","output_ifraome_content","_copySource","_callee4","copyButton","markdownText","textarea","_callee4$","_context5","navigator","clipboard","writeText","opacity","body","select","removeChild","getHTMLSource","contentEditable","getSourceDiff","_options$fromIndex","_options$toIndex","actualFromIndex","actualToIndex","diffData","fromRevision","toRevision","hasChanges","getSourceDiffHTML","_options$fromIndex2","_options$toIndex2","_options$showLineNumb","showLineNumbers","_options$cssClasses","cssClasses","classes","added","removed","unchanged","lineNumber","_iterator4","_step4","lineClass","displayNum","_escapeHtml","htmlLength","getSourceDiffInline","_options$fromIndex3","_options$toIndex3","_options$cssClasses2","_iterator5","_step5","_step5$value","op","escapedText","onTextSelected","callback","_this10","on","off","replaceSelectedText","_selectionData$range","focus","setSelectionRange","deleteContents","textNode","insertNode","setStartAfter","setEndAfter","collapse","removeAllRanges","addRange","setSelectionEditable","editable","span","backgroundColor","borderRadius","cloneContents","toggleSelectionLock","targetNode","commonAncestorContainer","isLocked","nodeType","ELEMENT_NODE","newEditableState","result","getCurrentSelection","activeElement","anchorNode","isInOutput","clearSelection","_this11","handler","_this12","_copyHTML","_callee5","_this13","clone","_iterator6","_step6","_loop3","svgElements","_iterator7","_step7","_loop4","mathElements","_iterator8","_step8","_loop2","_iterator9","_step9","originalContainer","allOriginalContainers","_iterator11","_step11","candidate","_placeholder","_iterator10","_step10","_container","_originalSource","_originalContainer","_allOriginalContainers","_iterator12","_step12","_candidate","_dataUrl","_img","_placeholder2","_placeholder3","platform","successful","_callee5$","_context9","cloneNode","formattedCode","borderCollapse","tr","fontFamily","whiteSpace","replaceWith","_loop3$","_context7","hasWidthAttr","hasHeightAttr","displayWidth","displayHeight","parseInt","round","pngBlob","isMermaidSvg","hasExplicitDimensions","imgWidth","imgHeight","_loop4$","_context8","closest","svgToPng","reader","FileReader","onloadend","readAsDataURL","clientWidth","viewBox","baseVal","clientHeight","maxWidth","maxHeight","substr","alt","t2","t3","mathEl","serializer","svgStr","svgBlob","url","imgElement","_loop2$","_context6","XMLSerializer","serializeToString","Blob","URL","createObjectURL","targetMaxWidth","targetMaxHeight","scaleFactor","scaledWidth","scaledHeight","scaleX","scaleY","fillStyle","fillRect","revokeObjectURL","t4","t5","t6","divToDataUrl","t7","t8","t9","typeRow","objectsRow","objectNames","textBlock","t10","t11","t12","t13","getPlatform","ClipboardItem","t14","copyToClipboard","left","top","t15","createRange","selectNodeContents","execCommand","t16","svgElement","svgString","scale","svgWidth","svgHeight","modifiedSvgString","tempSvg","clearRect","toBlob","blob","svgDataUrl","encodeURIComponent","controlsShow","show","titleSetContent","titleGetContent","toggleView","string","sel","isMac","toUpperCase","indexOf","copyHotkey","prompt","_mathToPng","_callee6","mathElement","_callee6$","_context10","mathToPng","_x2","isMathJax3Available","tex2svgPromise","jest","version","_mathCHTMLToPng","_callee7","chtmlContainer","rect","canvasWidth","canvasHeight","foreignObject","_callee7$","_context11","mathCHTMLToPng","_x3","userAgent","demonstrateSelectionFeatures","log","makeHTMLPageFromDiv","inputDivHTML","editableAttr","replaceAll","slide","header","separator","tableRows","inCodeBlock","_divToDataUrl","_callee8","_this14","_callee8$","_context12","getContainer","mapContainer","mapRect","tileLayers","tilesLoaded","totalTiles","_iterator13","_step13","_loop5","tile","tileRect","offsetX","offsetY","_iterator14","_step14","_loop6","svgRect","svgOffsetX","svgOffsetY","svgData","svgUrl","svgImg","svgs","bestSvg","maxArea","_iterator15","_step15","area","fallbackCanvas","font","textAlign","fillText","_x4","_defineProperty"],"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","x_google_ignoreList":[0,1,3,4,5]}