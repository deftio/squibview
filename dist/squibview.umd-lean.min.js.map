{"version":3,"file":"squibview.umd-lean.min.js","sources":["../node_modules/eventemitter3/index.js","../node_modules/papaparse/papaparse.js","../node_modules/turndown/lib/turndown.es.js","../src/HtmlToMarkdown.js","../src/RevisionHistory.js","../src/squibview.js","../src/version.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/* @license\nPapa Parse\nv5.5.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n\t// stringify the factory method for the blob worker\n\t// eslint-disable-next-line func-name\n}(this, function moduleFactory()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tfunction getWorkerBlob() {\n\t\tvar URL = global.URL || global.webkitURL || null;\n\t\tvar code = moduleFactory.toString();\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \", '(', code, ')();'], {type: 'text/javascript'})));\n\t}\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = global.IS_PAPA_WORKER || false;\n\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t}\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\t_input = stripBom(_input);\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\n\t\t// Strip character from UTF-8 BOM encoded files that cause issue parsing the file\n\t\tfunction stripBom(string) {\n\t\t\tif (string.charCodeAt(0) === 0xfeff) {\n\t\t\t\treturn string.slice(1);\n\t\t\t}\n\t\t\treturn string;\n\t\t}\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n\n\t\t/** whether to skip empty lines */\n\t\tvar _skipEmptyLines = false;\n\n\t\t/** the columns (keys) we expect when we unparse objects */\n\t\tvar _columns = null;\n\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n\t\tvar _escapeFormulae = false;\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (Array.isArray(_input))\n\t\t{\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(_columns || Object.keys(_input[0]), _input, _skipEmptyLines);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (Array.isArray(_input.data))\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields = _input.meta && _input.meta.fields || _columns;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: typeof _input.data[0] === 'object'\n\t\t\t\t\t\t\t? Object.keys(_input.data[0])\n\t\t\t\t\t\t\t: [];\n\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow new Error('Unable to serialize unrecognized input');\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| typeof _config.quotes === 'function'\n\t\t\t\t|| Array.isArray(_config.quotes))\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\n\t\t\tif (Array.isArray(_config.columns)) {\n\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n\n\t\t\t\t_columns = _config.columns;\n\t\t\t}\n\n\t\t\tif (_config.escapeChar !== undefined) {\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n\t\t\t}\n\n\t\t\tif (_config.escapeFormulae instanceof RegExp) {\n\t\t\t\t_escapeFormulae = _config.escapeFormulae;\n\t\t\t} else if (typeof _config.escapeFormulae === 'boolean' && _config.escapeFormulae) {\n\t\t\t\t_escapeFormulae =  /^[=+\\-@\\t\\r].*$/;\n\t\t\t}\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data, skipEmptyLines)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tvar emptyLine = false;\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n\t\t\t\tif (skipEmptyLines && !hasHeader)\n\t\t\t\t{\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n\t\t\t\t}\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n\t\t\t\t\tvar line = [];\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n\t\t\t\t\t\tline.push(data[row][cx]);\n\t\t\t\t\t}\n\t\t\t\t\temptyLine = line.join('').trim() === '';\n\t\t\t\t}\n\t\t\t\tif (!emptyLine)\n\t\t\t\t{\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0 && !nullLine)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n\t\t\t\t\t{\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tvar needsQuotes = false;\n\n\t\t\tif (_escapeFormulae && typeof str === \"string\" && _escapeFormulae.test(str)) {\n\t\t\t\tstr = \"'\" + str;\n\t\t\t\tneedsQuotes = true;\n\t\t\t}\n\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n\n\t\t\tneedsQuotes = needsQuotes\n\t\t\t\t\t\t\t|| _quotes === true\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._halted = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tconst skipFirstNLines = parseInt(this._config.skipFirstNLines) || 0;\n\t\t\tif (this.isFirstChunk && skipFirstNLines > 0) {\n\t\t\t\tlet _newline = this._config.newline;\n\t\t\t\tif (!_newline) {\n\t\t\t\t\tconst quoteChar = this._config.quoteChar || '\"';\n\t\t\t\t\t_newline = this._handle.guessLineEndings(chunk, quoteChar);\n\t\t\t\t}\n\t\t\t\tconst splitChunk = chunk.split(_newline);\n\t\t\t\tchunk = [...splitChunk.slice(skipFirstNLines)].join(_newline);\n\t\t\t}\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\t\t\tthis._halted = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\tthis._halted = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\t\tthis._halted = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send(this._config.downloadRequestBody);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk;\n\t\t\tif(size) {\n\t\t\t\tchunk = remaining.substring(0, size);\n\t\t\t\tremaining = remaining.substring(size);\n\t\t\t} else {\n\t\t\t\tchunk = remaining;\n\t\t\t\tremaining = '';\n\t\t\t}\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t// so we need to pause until more items\n\t\t\t\t// can be processed\n\t\t\t\tthis._handle.pause();\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t}\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/;\n\t\tvar ISO_DATE = /^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/;\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse {\n\t\t\t\t\t\t_results.data = _results.data[0];\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = this.guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n\t\t\t// otherwise we can get duplicate content within a row\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tif(self.streamer._halted) {\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t} else {\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n\t\t\t\t// wait for it to halt in order to resume\n\t\t\t\tsetTimeout(self.resume, 3);\n\t\t\t}\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tthis.guessLineEndings = function(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction testFloat(s) {\n\t\t\tif (FLOAT.test(s)) {\n\t\t\t\tvar floatValue = parseFloat(s);\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\t_results.data = _results.data.filter(function(d) {\n\t\t\t\t\treturn !testEmptyLine(d);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\n\t\t\tfunction addHeader(header, i)\n\t\t\t{\n\t\t\t\tif (isFunction(_config.transformHeader))\n\t\t\t\t\theader = _config.transformHeader(header, i);\n\n\t\t\t\t_fields.push(header);\n\t\t\t}\n\n\t\t\tif (Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\t_results.data[i].forEach(addHeader);\n\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n\t\t\telse\n\t\t\t\t_results.data.forEach(addHeader);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (testFloat(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfunction processRow(rowSource, i)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = rowSource[j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\n\t\t\tvar incrementBy = 1;\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\t_results.data = _results.data.map(processRow);\n\t\t\t\tincrementBy = _results.data.length;\n\t\t\t}\n\t\t\telse\n\t\t\t\t_results.data = processRow(_results.data, 0);\n\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += incrementBy;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n\t\t\t\tvar delim = delimitersToGuess[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 0) {\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\tvar error = {\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg\n\t\t\t};\n\t\t\tif(row !== undefined) {\n\t\t\t\terror.row = row;\n\t\t\t}\n\t\t\t_results.errors.push(error);\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\tvar renamedHeaders = null;\n\t\tvar headerParsed = false;\n\n\t\tif (config.quoteChar === undefined || config.quoteChar === null) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow new Error('Comment character same as delimiter');\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow new Error('Input must be a string');\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndDelimiter, delimLen) === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t// we look for next delimiter char\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substring(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\tif (config.header && !baseIndex && data.length && !headerParsed)\n\t\t\t\t{\n\t\t\t\t\tconst result = data[0];\n\t\t\t\t\tconst headerCount = {}; // To track the count of each base header\n\t\t\t\t\tconst usedHeaders = new Set(result); // To track used headers and avoid duplicates\n\t\t\t\t\tlet duplicateHeaders = false;\n\n\t\t\t\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\t\t\t\tlet header = result[i];\n\t\t\t\t\t\tif (isFunction(config.transformHeader))\n\t\t\t\t\t\t\theader = config.transformHeader(header, i);\n\n\t\t\t\t\t\tif (!headerCount[header]) {\n\t\t\t\t\t\t\theaderCount[header] = 1;\n\t\t\t\t\t\t\tresult[i] = header;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet newHeader;\n\t\t\t\t\t\t\tlet suffixCount = headerCount[header];\n\n\t\t\t\t\t\t\t// Find a unique new header\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tnewHeader = `${header}_${suffixCount}`;\n\t\t\t\t\t\t\t\tsuffixCount++;\n\t\t\t\t\t\t\t} while (usedHeaders.has(newHeader));\n\n\t\t\t\t\t\t\tusedHeaders.add(newHeader); // Mark this new Header as used\n\t\t\t\t\t\t\tresult[i] = newHeader;\n\t\t\t\t\t\t\theaderCount[header]++;\n\t\t\t\t\t\t\tduplicateHeaders = true;\n\t\t\t\t\t\t\tif (renamedHeaders === null) {\n\t\t\t\t\t\t\t\trenamedHeaders = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trenamedHeaders[newHeader] = header;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tusedHeaders.add(header); // Ensure the original header is marked as used\n\t\t\t\t\t}\n\t\t\t\t\tif (duplicateHeaders) {\n\t\t\t\t\t\tconsole.warn('Duplicate headers found and renamed.');\n\t\t\t\t\t}\n\t\t\t\t\theaderParsed = true;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0),\n\t\t\t\t\t\trenamedHeaders: renamedHeaders\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\n\t\tvar workerUrl = getWorkerBlob();\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: msg.results.data[i],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow new Error('Not implemented.');\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    if (href) href = href.replace(/([()])/g, '\\\\$1');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title.replace(/\"/g, '\\\\\"') + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    var domino = require('@mixmark-io/domino');\n    Parser.prototype.parseFromString = function (string) {\n      return domino.createDocument(string)\n    };\n  }\n  return Parser\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n","import TurndownService from 'turndown';\n\n/**\n * Converts HTML content to Markdown format using the Turndown library with \n * customizations specific to SquibView's needs.\n */\nexport default class HtmlToMarkdown {\n  constructor(options = {}) {\n    this.turndownService = new TurndownService({\n      headingStyle: 'atx',       // Use # style headings\n      codeBlockStyle: 'fenced',  // Use ``` style code blocks\n      emDelimiter: '*',          // Use * for emphasis\n      bulletListMarker: '-',     // Use - for bullet lists\n      ...options\n    });\n    \n    // Add a simple cache for converted content to improve performance\n    this.cache = new Map();\n    this.cacheSize = options.cacheSize || 10;\n    \n    // Store special blocks for preservation\n    this._specialBlocks = new Map();\n    \n    this.configureTurndownRules();\n  }\n  \n  /**\n   * Configure custom Turndown rules\n   */\n  configureTurndownRules() {\n    // Since we're using pre-processing for data-source-type containers,\n    // we can simplify this and keep it as a fallback for any missed cases\n    this.turndownService.addRule('squibviewFencedBlock', {\n      filter: (node) => {\n        return node.nodeName === 'DIV' && node.hasAttribute('data-source-type');\n      },\n      replacement: (content, node, options) => {\n        const lang = node.getAttribute('data-source-type') || 'code';\n        let innerContent = '';\n\n        switch (lang) {\n          case 'mermaid':\n          case 'math':\n            let contentFromHtml = node.innerHTML;\n            // Convert <br> tags to newlines first\n            contentFromHtml = contentFromHtml.replace(/<br\\s*\\/?>/gi, '\\n');\n            // For Mermaid and Math, the content is expected to be text-like after <br> replacement.\n            // Avoid stripping other tags if they are part of the intended content (e.g. MathML in MathJax)\n            // Instead, rely on a robust way to get text content, then trim.\n            const tempDiv = node.ownerDocument.createElement('div');\n            tempDiv.innerHTML = contentFromHtml; // Let browser parse it\n            innerContent = tempDiv.textContent || tempDiv.innerText || ''; // Get text content\n            break;\n          case 'geojson':\n          case 'topojson':\n          case 'stl':\n            // For GeoJSON, TopoJSON, and STL, the original data is stored in data-original-source attribute\n            if (node.hasAttribute('data-original-source')) {\n              // The attribute value is HTML-escaped, browser will decode it when getting the attribute\n              innerContent = node.getAttribute('data-original-source');\n            } else if (node.textContent && node.textContent.trim()) {\n              // Fallback to text content if not yet rendered\n              innerContent = node.textContent;\n            } else {\n              // If no original data available, we can't recover it\n              console.warn('[HtmlToMarkdown] Missing original data for', lang, 'block');\n              innerContent = 'Error: Original data lost during rendering';\n            }\n            break;\n          case 'svg':\n            // The 'node' is the div with data-source-type=\"svg\".\n            // For proper round-trip fidelity, use the original source from the data attribute if available\n            if (node.hasAttribute('data-original-source')) {\n              // The attribute value is HTML-escaped, browser will decode it when getting the attribute\n              innerContent = node.getAttribute('data-original-source');\n            } else {\n              // Fallback to innerHTML if no original source stored\n              innerContent = node.innerHTML;\n            }\n            // console.warn('[HtmlToMarkdown] squibviewFencedBlock SVG: Captured content:', innerContent.substring(0, 200));\n            break;\n          case 'csv':\n          case 'tsv':\n          case 'psv':\n            const tableElement = node.querySelector('table');\n            if (tableElement) {\n              innerContent = this._htmlTableToDelimitedText(tableElement, lang);\n            } else {\n              innerContent = 'Error: Table not found for ' + lang;\n              console.warn('Could not find table inside div[data-source-type=\"' + lang + '\"]');\n            }\n            break;\n          default: // Handles 'javascript', 'python', 'code', etc.\n            const preElement = node.querySelector('pre');\n            if (preElement) {\n              const codeElement = preElement.querySelector('code');\n              // textContent of <code> or <pre> contains the code.\n              innerContent = (codeElement || preElement).textContent; // trimEnd removed, will be handled by trim() later\n            } else {\n              // Fallback if <pre> not found (e.g. if it was just a div with code)\n              innerContent = node.textContent; // trimEnd removed\n               console.warn('Could not find <pre> inside div[data-source-type=\"' + lang + '\"]');\n            }\n            break;\n        }\n\n        const langTag = (lang === 'code') ? '' : lang;\n        let finalInnerContent = innerContent.trim(); // Trim whitespace consistently here\n\n        if (finalInnerContent) { // If there's content after trimming\n          finalInnerContent = '\\n' + finalInnerContent + '\\n';\n        } else { // If content was empty or just whitespace\n          finalInnerContent = '\\n'; // Ensure a blank line for empty fenced blocks\n        }\n\n        return '\\n```' + langTag + finalInnerContent + '```\\n';\n      }\n    });\n\n    // Preserve HTML image tags by returning their outerHTML\n    this.turndownService.addRule('keepImageTags', {\n      filter: 'img',\n      replacement: function (content, node) {\n        return node.outerHTML;\n      }\n    });\n\n    // TEMPORARILY DISABLED: Preserve standalone <svg> tags NOT inside a data-source-type div\n    /*\n    this.turndownService.addRule('keepStandaloneSvgTags', {\n      filter: function(node) {\n        if (node.nodeName !== 'SVG') return false;\n        \n        // Don't process SVG elements that are inside a data-source-type div\n        const parentDiv = node.closest('div[data-source-type]');\n        if (parentDiv) {\n          console.warn('[HtmlToMarkdown] Skipping SVG inside data-source-type div');\n          return false;\n        }\n        \n        console.warn('[HtmlToMarkdown] Processing standalone SVG');\n        return true;\n      },\n      replacement: function (content, node) {\n        // console.warn('[HtmlToMarkdown] standalone SVG rule processing:', node.outerHTML);\n        return node.outerHTML;\n      }\n    });\n    */\n    \n    // Preserve Mermaid diagram blocks with special identifiers\n    this.turndownService.addRule('mermaid', {\n      filter: node => {\n        return node.nodeName === 'DIV' && \n               node.classList.contains('mermaid');\n      },\n      replacement: (content, node) => {\n        // Generate a unique ID for this mermaid block to help with matching later\n        const blockId = 'mermaid_' + Math.random().toString(36).substring(2, 10);\n        \n        // Store the raw content for later use\n        if (this._specialBlocks) {\n          this._specialBlocks.set(blockId, {\n            type: 'mermaid',\n            content: node.textContent\n          });\n        }\n        \n        // Return with special marker that can be identified later\n        return `\\n<div data-special-block=\"${blockId}\" class=\"mermaid\">\\n` +\n               node.textContent + \n               `\\n</div>\\n`;\n      }\n    });\n    \n    /*\n    // Preserve SVG elements with special identifiers\n    this.turndownService.addRule('svg', {\n      filter: node => {\n        // Only apply this rule if the SVG is NOT inside one of our data-source-type divs\n        // and has one of our specific identifiers (e.g., an id starting with \"squib-svg-\")\n        // or if it does not have a data-source-type attribute itself.\n        const isInsideSquibDiv = node.closest('div[data-source-type]');\n        const hasSquibIdentifier = node.id && node.id.startsWith('squib-svg-'); // Example identifier\n        const isSpecialSquibSvg = node.hasAttribute('data-source-type') && node.getAttribute('data-source-type') === 'svg';\n\n        if (isInsideSquibDiv || isSpecialSquibSvg) {\n          // console.warn('[HtmlToMarkdown] SVG rule: Skipping SVG inside data-source-type div or special SVG.');\n          return false; // Don't process if it's already handled or should be handled by squibviewFencedBlock\n        }\n        // console.warn('[HtmlToMarkdown] SVG rule: Processing standalone SVG:', node.outerHTML.substring(0,100));\n        return node.nodeName === 'SVG' && hasSquibIdentifier; // Or other conditions for standalone SVGs\n      },\n      replacement: function (content, node) {\n        // console.warn('[HtmlToMarkdown] SVG rule: Replacing with outerHTML for node:', node.outerHTML.substring(0,100));\n        return node.outerHTML; // Preserve the whole SVG tag\n      }\n    });\n    */\n\n    // Preserve GeoJSON map blocks\n    this.turndownService.addRule('geojson', {\n      filter: node => {\n        return node.nodeName === 'DIV' && \n               node.classList.contains('geojson-map');\n      },\n      replacement: (content, node) => {\n        // Generate a unique ID for this GeoJSON block\n        const blockId = 'geojson_' + Math.random().toString(36).substring(2, 10);\n        \n        // Try to extract the GeoJSON data from the script element\n        let geojsonContent = '';\n        try {\n          // The actual GeoJSON would be in a script tag or in a data attribute\n          // Here we'll use a placeholder since the actual data is hard to extract\n          geojsonContent = node.dataset.geojson || '{\"type\":\"FeatureCollection\",\"features\":[]}';\n        } catch(e) {\n          console.error('Error extracting GeoJSON data:', e);\n        }\n        \n        if (this._specialBlocks) {\n          this._specialBlocks.set(blockId, {\n            type: 'geojson',\n            content: geojsonContent\n          });\n        }\n        \n        return `\\n<div data-special-block=\"${blockId}\" class=\"geojson-container\">\\n` +\n               geojsonContent + \n               `\\n</div>\\n`;\n      }\n    });\n    \n    // Preserve Math blocks\n    this.turndownService.addRule('math', {\n      filter: node => {\n        return node.nodeName === 'DIV' && \n               node.classList.contains('math-display');\n      },\n      replacement: (content, node) => {\n        // Generate a unique ID for this math block\n        const blockId = 'math_' + Math.random().toString(36).substring(2, 10);\n        \n        // Get the raw math content (might be wrapped in $$...$$ in the original)\n        let mathContent = node.textContent;\n        \n        // Remove $$ delimiters if present\n        mathContent = mathContent.replace(/^\\$\\$([\\s\\S]*)\\$\\$$/, '$1');\n        \n        if (this._specialBlocks) {\n          this._specialBlocks.set(blockId, {\n            type: 'math',\n            content: mathContent\n          });\n        }\n        \n        return `\\n<div data-special-block=\"${blockId}\" class=\"math-container\">\\n` +\n               mathContent + \n               `\\n</div>\\n`;\n      }\n    });\n    \n    // Special handling for code blocks\n    this.turndownService.addRule('codeBlock', {\n      filter: node => {\n        return node.nodeName === 'PRE' && \n               node.firstChild && \n               node.firstChild.nodeName === 'CODE';\n      },\n      replacement: (content, node) => {\n        const code = node.firstChild.textContent;\n        let language = '';\n        \n        // Try to detect language from class\n        if (node.firstChild.className) {\n          const match = node.firstChild.className.match(/language-(\\w+)/);\n          if (match) {\n            language = match[1];\n          }\n        }\n        \n        return '\\n```' + language + '\\n' + code.trim() + '\\n```\\n';\n      }\n    });\n    \n    // Improve table handling\n    this.turndownService.addRule('tableCell', {\n      filter: ['th', 'td'],\n      replacement: (content, node) => {\n        return ' ' + content.trim() + ' |';\n      }\n    });\n    \n    this.turndownService.addRule('tableRow', {\n      filter: 'tr',\n      replacement: (content, node) => {\n        let prefix = '|';\n        \n        // Handle header rows\n        if (node.parentNode.nodeName === 'THEAD') {\n          const cells = node.querySelectorAll('th, td').length;\n          const separatorRow = '\\n|' + ' --- |'.repeat(cells);\n          return prefix + content + separatorRow;\n        }\n        \n        return prefix + content + '\\n';\n      }\n    });\n    \n    this.turndownService.addRule('table', {\n      filter: 'table',\n      replacement: (content, node) => {\n        // If this table is inside our data-source-type div, it's already handled.\n        if (node.parentElement && node.parentElement.hasAttribute('data-source-type')) {\n          const type = node.parentElement.getAttribute('data-source-type');\n          if (type === 'csv' || type === 'tsv' || type === 'psv') {\n            return content; // Turndown will process children, but our main rule handles the fence.\n          }\n        }\n        // Default table processing otherwise\n        // (Existing complex table rule logic from Turndown or custom might be here)\n        // For simplicity, using a basic version of Turndown's own table handling as a placeholder\n        // if not already handled by a more specific rule like the one above for data-source-type.\n        let markdown = '';\n        const headerRow = node.querySelector('thead tr');\n        if (headerRow) {\n          markdown += '|';\n          headerRow.querySelectorAll('th').forEach(th => {\n            markdown += ` ${this.turndownService.turndown(th.innerHTML).trim()} |`;\n          });\n          markdown += '\\n|';\n          headerRow.querySelectorAll('th').forEach(() => {\n            markdown += ' --- |';\n          });\n          markdown += '\\n';\n        }\n\n        const bodyRows = node.querySelectorAll('tbody tr');\n        bodyRows.forEach(row => {\n          markdown += '|';\n          row.querySelectorAll('td').forEach(td => {\n            markdown += ` ${this.turndownService.turndown(td.innerHTML).trim()} |`;\n          });\n          markdown += '\\n';\n        });\n        return '\\n' + markdown + '\\n';\n      }\n    });\n\n    // Ensure this class is aware of custom GFM task list items if not default in Turndown version\n    this.turndownService.keep(['li']); // Keep <li> to allow custom rule for task list items\n    this.turndownService.addRule('taskListItems', {\n      filter: function (node) {\n        return node.nodeName === 'LI' && node.firstChild && node.firstChild.nodeName === 'INPUT' && node.firstChild.type === 'checkbox';\n      },\n      replacement: function (content, node) {\n        const checkbox = node.firstChild;\n        const checked = checkbox.checked;\n        // Need to remove the input from the content that turndown processes for the <li>\n        // The first child (input) is already handled, process the rest of the <li> content.\n        // Create a temporary div to hold the rest of the li children\n        let restOfLiContent = '';\n        let current = checkbox.nextSibling;\n        while(current) {\n            restOfLiContent += current.outerHTML || current.textContent;\n            current = current.nextSibling;\n        }\n        // Turndown the rest of the LI content\n        const markdownContent = this.turndownService.turndown(restOfLiContent).trim(); \n        return (checked ? '[x] ' : '[ ] ') + markdownContent;\n      }\n    });\n  }\n  \n  /**\n   * Get a simplified hash code of a string for caching\n   * \n   * @private\n   * @param {string} str - The string to hash\n   * @returns {string} A hash representation of the string\n   */\n  _getStringHash(str) {\n    // Simple and fast hash function for strings\n    // This is not a cryptographic hash, just for caching purposes\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash.toString(36); // Convert to base36 for shorter string\n  }\n  \n  /**\n   * Convert HTML to Markdown with caching for performance\n   * \n   * @param {string} html - The HTML content to convert\n   * @param {Object} options - Additional options\n   * @param {string} options.originalSource - The original source if available\n   * @returns {string} The converted Markdown content\n   */\n  convert(html, options = {}) {\n    // Clear special blocks map for this conversion\n    this._specialBlocks.clear();\n    this._placeholders = [];\n    \n    // Use a hash of the HTML as the cache key\n    const cacheKey = this._getStringHash(html);\n    \n    // Check if we have a cached version\n    if (this.cache.has(cacheKey)) {\n      return this.cache.get(cacheKey);\n    }\n    \n    // Pre-process HTML to extract and preserve data-source-type containers\n    let processedHtml = this._preProcessSpecialContainers(html);\n    \n    // Convert the HTML to Markdown\n    let markdown = this.turndownService.turndown(processedHtml);\n    \n    // Post-process the markdown to restore special blocks\n    markdown = this._postProcessMarkdown(markdown, options.originalSource);\n    \n    // Cache the result\n    this.cache.set(cacheKey, markdown);\n    \n    // Keep the cache size under control\n    if (this.cache.size > this.cacheSize) {\n      // Remove the oldest entry\n      const firstKey = this.cache.keys().next().value;\n      this.cache.delete(firstKey);\n    }\n    \n    return markdown;\n  }\n  \n  /**\n   * Pre-process HTML to extract data-source-type containers and replace them with placeholders\n   * \n   * @private\n   * @param {string} html - The HTML to process\n   * @returns {string} - The processed HTML with placeholders\n   */\n  _preProcessSpecialContainers(html) {\n    // Handle both browser and test environments safely\n    if (typeof document === 'undefined' || !document.createElement) {\n      // If no document is available, skip pre-processing and use the original HTML\n      console.warn('Document not available, skipping pre-processing');\n      this._placeholders = [];\n      return html;\n    }\n    \n    let tempDiv;\n    try {\n      tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      // Test if querySelector is available - if not, we'll use a fallback approach\n      if (typeof tempDiv.querySelector !== 'function') {\n        throw new Error('querySelector not available');\n      }\n    } catch (e) {\n      // Fallback: if DOM methods aren't available, use simple regex-based processing\n      console.warn('DOM methods not available, using regex fallback for pre-processing');\n      return this._regexFallbackPreProcess(html);\n    }\n    \n    // Find all divs with data-source-type attribute\n    const specialDivs = tempDiv.querySelectorAll('div[data-source-type]');\n    const placeholders = [];\n    \n    specialDivs.forEach((div, index) => {\n      const sourceType = div.getAttribute('data-source-type');\n      const placeholder = `__SPECIAL_CONTAINER_${index}__`;\n      let content;\n      if (sourceType === 'svg' && div.hasAttribute('data-original-source')) {\n        content = div.getAttribute('data-original-source');\n      } else if (['mermaid', 'math', 'geojson', 'topojson', 'stl'].includes(sourceType) && div.hasAttribute('data-original-source')) {\n        content = div.getAttribute('data-original-source');\n      } else if (sourceType === 'csv' || sourceType === 'tsv' || sourceType === 'psv') {\n        const tableElement = div.querySelector('table');\n        if (tableElement) {\n          content = this._htmlTableToDelimitedText(tableElement, sourceType);\n        } else {\n          content = 'Error: Table not found for ' + sourceType;\n        }\n      } else {\n        const preElement = div.querySelector('pre');\n        if (preElement) {\n          const codeElement = preElement.querySelector('code');\n          content = (codeElement || preElement).textContent.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '');\n        } else {\n          content = div.textContent.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '');\n        }\n      }\n      placeholders.push({\n        placeholder,\n        type: sourceType,\n        content: content\n      });\n      const placeholderText = document.createTextNode(placeholder);\n      if (div.parentNode) {\n        div.parentNode.replaceChild(placeholderText, div);\n      }\n    });\n    \n    // Store placeholders for post-processing\n    this._placeholders = placeholders;\n    \n    return tempDiv.innerHTML;\n  }\n\n  /**\n   * Post-process markdown to restore special blocks and apply additional formatting\n   * \n   * @private\n   * @param {string} markdown - The converted markdown \n   * @param {string} originalSource - The original markdown source if available\n   * @returns {string} - The processed markdown\n   */\n  _postProcessMarkdown(markdown, originalSource) {\n    // First pass: Replace placeholders with proper fenced code blocks\n    if (this._placeholders && this._placeholders.length > 0) {\n      this._placeholders.forEach(({ placeholder, type, content }) => {\n        const langTag = (type === 'code') ? '' : type;\n        const blockContent = content.replace(/^[\\r\\n]+|[\\r\\n]+$/g, '');\n        const fencedBlock = `\\`\\`\\`${langTag}\\n${blockContent}\\n\\`\\`\\``;\n        \n        // Handle both DOM-based placeholders (text nodes) and regex-based placeholders\n        const textPlaceholder = placeholder; // This is __SPECIAL_CONTAINER_${idx}__\n        const escapedPlaceholder = textPlaceholder.replace(/_/g, '\\\\_'); // Turndown escapes underscores\n        \n        // Replace the placeholder with the fenced block (try both forms)\n        if (markdown.includes(textPlaceholder)) {\n          markdown = markdown.replace(textPlaceholder, fencedBlock);\n        } else if (markdown.includes(escapedPlaceholder)) {\n          markdown = markdown.replace(escapedPlaceholder, fencedBlock);\n        }\n      });\n    }\n    \n    // Second pass: Convert any remaining special blocks markers back to proper markdown\n    \n    // Convert mermaid blocks\n    const mermaidBlockRegex = /<div data-special-block=\"mermaid_[^\"]*\" class=\"mermaid\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(mermaidBlockRegex, (match, content) => {\n      return `\\n\\`\\`\\`mermaid\\n${content.trim()}\\n\\`\\`\\`\\n`;\n    });\n    \n    // Convert SVG blocks\n    const svgBlockRegex = /<div data-special-block=\"svg_[^\"]*\" class=\"svg-container\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(svgBlockRegex, (match, content) => {\n      // Try to find a closing SVG tag\n      const svgMatch = content.match(/<svg[\\s\\S]*?<\\/svg>/);\n      if (svgMatch) {\n        return `\\n\\`\\`\\`svg\\n${svgMatch[0]}\\n\\`\\`\\`\\n`;\n      }\n      return match;\n    });\n    \n    // Convert GeoJSON blocks\n    const geojsonBlockRegex = /<div data-special-block=\"geojson_[^\"]*\" class=\"geojson-container\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(geojsonBlockRegex, (match, content) => {\n      try {\n        // Ensure content is valid JSON before creating the code block\n        JSON.parse(content);\n        return `\\n\\`\\`\\`geojson\\n${content.trim()}\\n\\`\\`\\`\\n`;\n      } catch (e) {\n        console.error('Invalid GeoJSON data:', e);\n        return `\\n\\`\\`\\`geojson\\n{\"type\":\"FeatureCollection\",\"features\":[]}\\n\\`\\`\\`\\n`;\n      }\n    });\n    \n    // Convert Math blocks\n    const mathBlockRegex = /<div data-special-block=\"math_[^\"]*\" class=\"math-container\">\\s*([\\s\\S]*?)\\s*<\\/div>/g;\n    markdown = markdown.replace(mathBlockRegex, (match, content) => {\n      return `\\n\\`\\`\\`math\\n${content.trim()}\\n\\`\\`\\`\\n`;\n    });\n    \n    // Second pass: Restore blocks from original source if possible\n    if (originalSource) {\n      // Extract code blocks from original source\n      const codeBlockRegex = /```(\\w+)\\s*([\\s\\S]*?)```/g;\n      let match;\n      let blockIndex = 0;\n      const originalBlocks = [];\n      \n      while ((match = codeBlockRegex.exec(originalSource)) !== null) {\n        const type = match[1];\n        const content = match[2];\n        \n        if (type === 'mermaid' || type === 'svg' || type === 'geojson' || type === 'topojson' || type === 'stl' || type === 'math') {\n          originalBlocks.push({\n            type,\n            content: match[0],\n            index: blockIndex++\n          });\n        }\n      }\n      \n      // Try to match original blocks with current blocks\n      // This is a simplistic approach that assumes blocks are in the same order\n      \n      let mermaidIndex = 0;\n      let svgIndex = 0;\n      let geojsonIndex = 0;\n      let mathIndex = 0;\n      \n      // Replace mermaid blocks\n      markdown = markdown.replace(/```mermaid\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const mermaidBlocks = originalBlocks.filter(b => b.type === 'mermaid');\n        if (mermaidIndex < mermaidBlocks.length) {\n          return mermaidBlocks[mermaidIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace SVG blocks\n      markdown = markdown.replace(/```svg\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const svgBlocks = originalBlocks.filter(b => b.type === 'svg');\n        if (svgIndex < svgBlocks.length) {\n          return svgBlocks[svgIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace GeoJSON blocks\n      markdown = markdown.replace(/```geojson\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const geojsonBlocks = originalBlocks.filter(b => b.type === 'geojson');\n        if (geojsonIndex < geojsonBlocks.length) {\n          return geojsonBlocks[geojsonIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace TopoJSON blocks\n      let topojsonIndex = 0;\n      markdown = markdown.replace(/```topojson\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const topojsonBlocks = originalBlocks.filter(b => b.type === 'topojson');\n        if (topojsonIndex < topojsonBlocks.length) {\n          return topojsonBlocks[topojsonIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace STL blocks\n      let stlIndex = 0;\n      markdown = markdown.replace(/```stl\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const stlBlocks = originalBlocks.filter(b => b.type === 'stl');\n        if (stlIndex < stlBlocks.length) {\n          return stlBlocks[stlIndex++].content;\n        }\n        return match;\n      });\n      \n      // Replace Math blocks\n      markdown = markdown.replace(/```math\\s*([\\s\\S]*?)```/g, (match, content) => {\n        const mathBlocks = originalBlocks.filter(b => b.type === 'math');\n        if (mathIndex < mathBlocks.length) {\n          return mathBlocks[mathIndex++].content;\n        }\n        return match;\n      });\n    }\n    \n    return markdown;\n  }\n\n  /**\n   * Converts an HTML table element to a delimited string (CSV, TSV, etc.).\n   * @param {HTMLTableElement} tableElement The HTML table element.\n   * @param {string} type The type of delimited format ('csv', 'tsv', 'psv').\n   * @returns {string} The delimited text representation of the table.\n   * @private\n   */\n  _htmlTableToDelimitedText(tableElement, type) {\n    let delimiter;\n    switch (type) {\n      case 'csv': delimiter = ','; break;\n      case 'tsv': delimiter = '\\t'; break;\n      case 'psv': delimiter = '|'; break;\n      default:    delimiter = ','; // Default to CSV\n    }\n\n    const data = [];\n    \n    // Check if we have proper DOM methods available\n    if (!tableElement || typeof tableElement.querySelectorAll !== 'function') {\n      console.warn('DOM methods not available for table extraction, using regex fallback');\n      return this._extractTableDataFromHtml(tableElement ? tableElement.outerHTML || tableElement.innerHTML || String(tableElement) : '', type);\n    }\n    \n    const rows = tableElement.querySelectorAll('tr');\n    \n    // Additional safety check for the rows result\n    if (!rows || typeof rows.forEach !== 'function') {\n      console.warn('querySelectorAll did not return proper NodeList, falling back to regex');\n      return this._extractTableDataFromHtml(tableElement.outerHTML || tableElement.innerHTML || String(tableElement), type);\n    }\n\n    rows.forEach(row => {\n      const rowData = [];\n      const cells = row.querySelectorAll('th, td');\n      cells.forEach(cell => {\n        // Basic text content extraction. For complex cell content, might need refinement.\n        // Replace newlines within a cell with a space, trim content.\n        let cellText = cell.textContent || '';\n        cellText = cellText.replace(/\\r?\\n|\\r/g, ' ').trim();\n        // If delimiter is comma, and cellText contains comma, quote it.\n        if (delimiter === ',' && cellText.includes(',')) {\n          cellText = `\"${cellText.replace(/\"/g, '\"\"')}\"`;\n        }\n        // If delimiter is tab, and cellText contains tab, it might be an issue depending on consumer.\n        // For PSV, if cellText contains pipe, it's an issue unless handled by quoting (not standard for PSV).\n        rowData.push(cellText);\n      });\n      data.push(rowData.join(delimiter));\n    });\n\n    return data.join('\\n');\n  }\n\n  /**\n   * Extract table data from HTML content using regex when DOM methods aren't available\n   * \n   * @private\n   * @param {string} htmlContent - The HTML content containing the table\n   * @param {string} type - The type of delimited format ('csv', 'tsv', 'psv')\n   * @returns {string} - The extracted delimited text\n   */\n  _extractTableDataFromHtml(htmlContent, type) {\n    let delimiter;\n    switch (type) {\n      case 'csv': delimiter = ','; break;\n      case 'tsv': delimiter = '\\t'; break;\n      case 'psv': delimiter = '|'; break;\n      default:    delimiter = ','; // Default to CSV\n    }\n\n    try {\n      // Extract all table rows using regex\n      const rowRegex = /<tr[^>]*>([\\s\\S]*?)<\\/tr>/gi;\n      const rows = [];\n      let match;\n\n      while ((match = rowRegex.exec(htmlContent)) !== null) {\n        const rowContent = match[1];\n        \n        // Extract all cells (th or td) from this row\n        const cellRegex = /<(?:th|td)[^>]*>([\\s\\S]*?)<\\/(?:th|td)>/gi;\n        const cells = [];\n        let cellMatch;\n\n        while ((cellMatch = cellRegex.exec(rowContent)) !== null) {\n          let cellText = cellMatch[1];\n          \n          // Remove HTML tags and decode entities\n          cellText = cellText\n            .replace(/<[^>]*>/g, '') // Remove all HTML tags\n            .replace(/&quot;/g, '\"')\n            .replace(/&#x27;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&')\n            .replace(/\\r?\\n|\\r/g, ' ') // Replace newlines with spaces\n            .trim();\n\n          // Handle CSV quoting if cell contains delimiter\n          if (delimiter === ',' && cellText.includes(',')) {\n            cellText = `\"${cellText.replace(/\"/g, '\"\"')}\"`;\n          }\n\n          cells.push(cellText);\n        }\n\n        if (cells.length > 0) {\n          rows.push(cells.join(delimiter));\n        }\n      }\n\n      return rows.join('\\n');\n    } catch (e) {\n      console.error('Error extracting table data from HTML:', e);\n      return 'Error: Could not extract table data';\n    }\n  }\n\n  /**\n   * Regex-based fallback for pre-processing when DOM methods aren't available\n   * \n   * @private\n   * @param {string} html - The HTML to process\n   * @returns {string} - The processed HTML with placeholders\n   */\n  _regexFallbackPreProcess(html) {\n    // Simple regex-based approach when DOM isn't available\n    // This matches div elements with data-source-type attributes\n    const divRegex = /<div[^>]*data-source-type=\"([^\"]*)\"[^>]*>([\\s\\S]*?)<\\/div>/g;\n    const placeholders = [];\n    let index = 0;\n    \n    const processedHtml = html.replace(divRegex, (match, sourceType, content) => {\n      const placeholder = `__SPECIAL_CONTAINER_${index}__`;\n      \n      // Extract content based on type\n      let extractedContent;\n      if (sourceType === 'svg') {\n        // For SVG, look for data-original-source attribute first\n        const originalSourceMatch = match.match(/data-original-source=\"([^\"]*)\"/);\n        if (originalSourceMatch) {\n          // Decode HTML entities in the attribute value\n          extractedContent = originalSourceMatch[1]\n            .replace(/&quot;/g, '\"')\n            .replace(/&#x27;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&');\n        } else {\n          // Fallback to inner SVG content\n          const svgMatch = content.match(/<svg[\\s\\S]*?<\\/svg>/);\n          extractedContent = svgMatch ? svgMatch[0] : content;\n        }\n      } else if (sourceType === 'csv' || sourceType === 'tsv' || sourceType === 'psv') {\n        // For delimited data, we need to extract from table using regex\n        extractedContent = this._extractTableDataFromHtml(content, sourceType);\n      } else {\n        // For code blocks, extract from pre/code elements\n        const preMatch = content.match(/<pre[^>]*><code[^>]*>([\\s\\S]*?)<\\/code><\\/pre>/);\n        if (preMatch) {\n          extractedContent = preMatch[1]\n            .replace(/<span[^>]*>/g, '')\n            .replace(/<\\/span>/g, '')\n            .replace(/&quot;/g, '\"')\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&');\n        } else {\n          // For other content types (mermaid, math, etc.), use raw content but decode HTML entities\n          extractedContent = content\n            .replace(/<[^>]*>/g, '') // Remove any HTML tags\n            .replace(/&quot;/g, '\"')\n            .replace(/&#x27;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&'); // &amp; should be last to avoid double-decoding\n        }\n      }\n      \n      placeholders.push({\n        placeholder,\n        type: sourceType,\n        content: extractedContent\n      });\n      \n      index++;\n      return `<p>${placeholder}</p>`;\n    });\n    \n    // Store placeholders for post-processing\n    this._placeholders = placeholders;\n    \n    return processedHtml;\n  }\n}","import DiffMatchPatch from 'diff-match-patch';\n\n/**\n * RevisionHistory class handles content revisions with memory-efficient diff storage\n */\nclass RevisionManager {\n  /**\n   * Creates a new RevisionManager instance\n   */\n  constructor() {\n    this.initialContent = '';\n    this.initialContentType = ''; // Store the initial content type separately\n    this.contentType = ''; // Current content type\n    this.diffs = [];\n    this.currentIndex = -1;\n    this.diffEngine = new DiffMatchPatch();\n  }\n\n  /**\n   * Initializes the revision manager with initial content\n   *\n   * @param {string} content - The initial content\n   * @param {string} contentType - The content type\n   */\n  initialize(content, contentType) {\n    this.initialContent = content;\n    this.initialContentType = contentType; // Store initial content type\n    this.contentType = contentType; // Current content type\n    this.diffs = [];\n    this.currentIndex = -1;\n  }\n\n  /**\n   * Adds a new revision\n   *\n   * @param {string} newContent - The new content to add as a revision\n   * @param {string} contentType - The content type of the revision\n   */\n  addRevision(newContent, contentType) {\n    // Calculate diff between current state and new state\n    const currentContent = this.getCurrentContent();\n    const diff = this.diffEngine.diff_main(currentContent, newContent);\n    this.diffEngine.diff_cleanupSemantic(diff);\n    const patchText = this.diffEngine.patch_toText(\n      this.diffEngine.patch_make(currentContent, diff)\n    );\n\n    // Remove any forward history if we're branching\n    if (this.currentIndex < this.diffs.length - 1) {\n      this.diffs = this.diffs.slice(0, this.currentIndex + 1);\n    }\n\n    // Add new diff and update content type if it changed\n    this.diffs.push({\n      diff: patchText,\n      contentType: contentType !== this.contentType ? contentType : undefined\n    });\n\n    // Update the content type if it changed\n    if (contentType !== this.contentType) {\n      this.contentType = contentType;\n    }\n\n    this.currentIndex = this.diffs.length - 1;\n  }\n\n  /**\n   * Moves backward in the revision history\n   *\n   * @returns {Object|null} The previous revision state or null if at the beginning\n   */\n  undo() {\n    if (this.currentIndex >= 0) {\n      this.currentIndex--;\n      return {\n        content: this.getCurrentContent(),\n        contentType: this.getCurrentContentType()\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Moves forward in the revision history\n   *\n   * @returns {Object|null} The next revision state or null if at the end\n   */\n  redo() {\n    if (this.currentIndex < this.diffs.length - 1) {\n      this.currentIndex++;\n      return {\n        content: this.getCurrentContent(),\n        contentType: this.getCurrentContentType()\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Gets the content at the current revision point\n   *\n   * @returns {string} The current content\n   */\n  getCurrentContent() {\n    if (this.currentIndex < 0) return this.initialContent;\n\n    // Apply all diffs up to currentIndex\n    let content = this.initialContent;\n    for (let i = 0; i <= this.currentIndex; i++) {\n      const patches = this.diffEngine.patch_fromText(this.diffs[i].diff);\n      const [patchedText] = this.diffEngine.patch_apply(patches, content);\n      content = patchedText;\n    }\n    return content;\n  }\n\n  /**\n   * Gets the content type at the current revision point\n   *\n   * @returns {string} The current content type\n   */\n  getCurrentContentType() {\n    if (this.currentIndex < 0) return this.initialContentType;\n\n    // Find the last content type change up to the current index\n    let currentType = this.initialContentType;\n    for (let i = 0; i <= this.currentIndex; i++) {\n      if (this.diffs[i].contentType !== undefined) {\n        currentType = this.diffs[i].contentType;\n      }\n    }\n    return currentType;\n  }\n\n  /**\n   * Sets the revision to a specific index\n   *\n   * @param {number} index - The revision index to set\n   * @returns {Object|null} The revision state at the index or null if invalid\n   */\n  setRevision(index) {\n    if (index >= -1 && index < this.diffs.length) {\n      this.currentIndex = index;\n      return {\n        content: this.getCurrentContent(),\n        contentType: this.getCurrentContentType()\n      };\n    }\n    return null;\n  }\n\n  /**\n   * Returns the total number of revisions\n   *\n   * @returns {number} The number of revisions\n   */\n  getRevisionCount() {\n    return this.diffs.length;\n  }\n\n  /**\n   * Returns the current index in the revision history\n   *\n   * @returns {number} The current revision index\n   */\n  getCurrentIndex() {\n    return this.currentIndex;\n  }\n\n  /**\n   * Gets the content at a specific revision index\n   *\n   * @param {number} index - Revision index (-1 for initial, 0 to n-1 for revisions)\n   * @returns {Object} Object with { content: string, contentType: string }\n   */\n  getContentAtRevision(index) {\n    // Validate index\n    if (index < -1 || index >= this.diffs.length) {\n      throw new Error(`Invalid revision index: ${index}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n\n    // Return initial content if index is -1\n    if (index === -1) {\n      return {\n        content: this.initialContent,\n        contentType: this.initialContentType\n      };\n    }\n\n    // Apply diffs up to the specified index to get content\n    let content = this.initialContent;\n    for (let i = 0; i <= index; i++) {\n      const patches = this.diffEngine.patch_fromText(this.diffs[i].diff);\n      const [patchedText] = this.diffEngine.patch_apply(patches, content);\n      content = patchedText;\n    }\n\n    // Find the content type at this revision\n    let currentType = this.initialContentType;\n    for (let i = 0; i <= index; i++) {\n      if (this.diffs[i].contentType !== undefined) {\n        currentType = this.diffs[i].contentType;\n      }\n    }\n\n    return {\n      content: content,\n      contentType: currentType\n    };\n  }\n\n  /**\n   * Computes diff between two revisions\n   *\n   * @param {number} fromIndex - Starting revision index (null for current)\n   * @param {number} toIndex - Ending revision index (null for current)\n   * @returns {Array} DiffMatchPatch diff array\n   */\n  computeDiff(fromIndex = null, toIndex = null) {\n    // Default to comparing previous revision to current if not specified\n    if (fromIndex === null) {\n      fromIndex = this.currentIndex - 1;\n    }\n    if (toIndex === null) {\n      toIndex = this.currentIndex;\n    }\n\n    // Validate indices\n    if (fromIndex < -1 || fromIndex >= this.diffs.length) {\n      throw new Error(`Invalid fromIndex: ${fromIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (toIndex < -1 || toIndex >= this.diffs.length) {\n      throw new Error(`Invalid toIndex: ${toIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (fromIndex > toIndex) {\n      throw new Error(`fromIndex (${fromIndex}) cannot be greater than toIndex (${toIndex})`);\n    }\n\n    // Get content at both revisions\n    const fromContent = this.getContentAtRevision(fromIndex).content;\n    const toContent = this.getContentAtRevision(toIndex).content;\n\n    // Compute and return the diff\n    const diff = this.diffEngine.diff_main(fromContent, toContent);\n    this.diffEngine.diff_cleanupSemantic(diff);\n    \n    return diff;\n  }\n\n  /**\n   * Computes line-based diff between revisions\n   *\n   * @param {number} fromIndex - Starting revision index (null for current - 1)\n   * @param {number} toIndex - Ending revision index (null for current)\n   * @returns {Array} Array of line diff objects with { type, content, oldLineNum, newLineNum }\n   */\n  computeLineDiff(fromIndex = null, toIndex = null) {\n    // Default to comparing previous revision to current if not specified\n    if (fromIndex === null) {\n      fromIndex = this.currentIndex - 1;\n    }\n    if (toIndex === null) {\n      toIndex = this.currentIndex;\n    }\n\n    // Validate indices\n    if (fromIndex < -1 || fromIndex >= this.diffs.length) {\n      throw new Error(`Invalid fromIndex: ${fromIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (toIndex < -1 || toIndex >= this.diffs.length) {\n      throw new Error(`Invalid toIndex: ${toIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (fromIndex > toIndex) {\n      throw new Error(`fromIndex (${fromIndex}) cannot be greater than toIndex (${toIndex})`);\n    }\n\n    // Get the full content to properly handle line numbers\n    const fromContent = this.getContentAtRevision(fromIndex).content;\n    const toContent = this.getContentAtRevision(toIndex).content;\n    \n    // Split content into lines for reference\n    const fromLines = fromContent.split('\\n');\n    const toLines = toContent.split('\\n');\n    \n    // Use diff_match_patch to compute line-level diffs\n    const lineDiff = this.diffEngine.diff_linesToChars_(fromContent, toContent);\n    const diffs = this.diffEngine.diff_main(lineDiff.chars1, lineDiff.chars2, false);\n    this.diffEngine.diff_charsToLines_(diffs, lineDiff.lineArray);\n    \n    // Convert to our format\n    const lineDiffs = [];\n    let oldLineNum = 1;\n    let newLineNum = 1;\n    \n    for (const [operation, text] of diffs) {\n      const lines = text.split('\\n').filter((line, idx, arr) => \n        // Keep all lines except empty last one (which is just the trailing newline)\n        idx < arr.length - 1 || line !== ''\n      );\n      \n      for (const line of lines) {\n        if (operation === DiffMatchPatch.DIFF_EQUAL) {\n          lineDiffs.push({\n            type: 'unchanged',\n            content: line,\n            oldLineNum: oldLineNum,\n            newLineNum: newLineNum\n          });\n          oldLineNum++;\n          newLineNum++;\n        } else if (operation === DiffMatchPatch.DIFF_DELETE) {\n          lineDiffs.push({\n            type: 'removed',\n            content: line,\n            oldLineNum: oldLineNum,\n            newLineNum: null\n          });\n          oldLineNum++;\n        } else if (operation === DiffMatchPatch.DIFF_INSERT) {\n          lineDiffs.push({\n            type: 'added',\n            content: line,\n            oldLineNum: null,\n            newLineNum: newLineNum\n          });\n          newLineNum++;\n        }\n      }\n    }\n    \n    return lineDiffs;\n  }\n\n  /**\n   * Gets statistics about changes between revisions\n   *\n   * @param {number} fromIndex - Starting revision index (null for current - 1)\n   * @param {number} toIndex - Ending revision index (null for current)\n   * @returns {Object} Stats object with { additions, deletions, modifications, totalChanges }\n   */\n  getDiffStats(fromIndex = null, toIndex = null) {\n    // Default to comparing previous revision to current if not specified\n    if (fromIndex === null) {\n      fromIndex = this.currentIndex - 1;\n    }\n    if (toIndex === null) {\n      toIndex = this.currentIndex;\n    }\n\n    // Validate indices (same validation as computeLineDiff)\n    if (fromIndex < -1 || fromIndex >= this.diffs.length) {\n      throw new Error(`Invalid fromIndex: ${fromIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (toIndex < -1 || toIndex >= this.diffs.length) {\n      throw new Error(`Invalid toIndex: ${toIndex}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n    if (fromIndex > toIndex) {\n      throw new Error(`fromIndex (${fromIndex}) cannot be greater than toIndex (${toIndex})`);\n    }\n\n    // Get the line diff\n    const lineDiff = this.computeLineDiff(fromIndex, toIndex);\n    \n    // Calculate statistics\n    const stats = {\n      additions: 0,\n      deletions: 0,\n      modifications: 0,\n      totalChanges: 0\n    };\n    \n    // Count different types of changes\n    for (let i = 0; i < lineDiff.length; i++) {\n      const line = lineDiff[i];\n      \n      if (line.type === 'added') {\n        stats.additions++;\n        stats.totalChanges++;\n      } else if (line.type === 'removed') {\n        stats.deletions++;\n        stats.totalChanges++;\n        \n        // Check if this is part of a modification (removed line followed by added line)\n        // This is a simplified heuristic - a more sophisticated approach would use\n        // line similarity analysis\n        if (i + 1 < lineDiff.length && lineDiff[i + 1].type === 'added') {\n          stats.modifications++;\n          // Don't double count the deletion and addition as separate changes\n          stats.totalChanges--;\n        }\n      }\n    }\n    \n    return stats;\n  }\n\n  /**\n   * Gets metadata about a revision\n   *\n   * @param {number} index - Revision index (-1 for initial, 0+ for revisions)\n   * @returns {Object} Revision metadata including index, contentType, size, and other info\n   */\n  getRevisionInfo(index) {\n    // Validate index\n    if (index < -1 || index >= this.diffs.length) {\n      throw new Error(`Invalid revision index: ${index}. Valid range: -1 to ${this.diffs.length - 1}`);\n    }\n\n    // Get the content at this revision\n    const { content, contentType } = this.getContentAtRevision(index);\n    \n    // Build revision info object\n    const info = {\n      index: index,\n      contentType: contentType,\n      contentSize: content.length,\n      lineCount: content.split('\\n').length,\n      isCurrent: index === this.currentIndex\n    };\n\n    // Add diff-specific info for non-initial revisions\n    if (index >= 0) {\n      info.diffSize = this.diffs[index].diff.length;\n      info.hasContentTypeChange = this.diffs[index].contentType !== undefined;\n      \n      // Add stats comparing to previous revision\n      const stats = this.getDiffStats(index - 1, index);\n      info.changeStats = stats;\n    } else {\n      // Initial revision has no diff\n      info.diffSize = 0;\n      info.hasContentTypeChange = false;\n      info.changeStats = {\n        additions: 0,\n        deletions: 0,\n        modifications: 0,\n        totalChanges: 0\n      };\n    }\n\n    return info;\n  }\n}\n\nexport { RevisionManager as RevisionHistory }; ","/* SquibView a live md/html/etc Editor/renderer with copy support\n supports markdown, html, and split view\n supports copying of formatted html and markdown\n supports copying of images as data urls\n supports copying of svg as png\n supports copying of tables as formatted tables\n supports copying of code blocks as formatted tables\n supports copying of math blocks as formatted math\n by deftio (c) 2024\n*/\n\n// Import required libraries\nimport TinyEmitter from 'tiny-emitter';\nimport DiffMatchPatch from 'diff-match-patch';\nimport './squibview.css'; // Import the main CSS file\nimport { VERSION, REPO_URL } from './version.js'; // Import version info\nimport EventEmitter3 from 'eventemitter3';\nimport MarkdownIt from 'markdown-it'; // Import markdown-it\nimport Papa from 'papaparse';\nimport HtmlToMarkdown from './HtmlToMarkdown.js';\nimport { RevisionHistory } from './RevisionHistory.js';\n\n// Import highlight.js for syntax highlighting\n// Use dynamic lookup to maintain compatibility with different build targets\nfunction getHljs() {\n  try {\n    if (typeof window !== 'undefined' && window.hljs) {\n      return window.hljs;\n    }\n    if (typeof global !== 'undefined' && global.hljs) {\n      return global.hljs;\n    }\n  } catch (e) {\n    // Ignore errors\n  }\n  return null;\n}\n\n// Fix for development mode\n/*\ntry {\n  if (!TinyEmitter || !DiffMatchPatch) {\n    // If direct imports failed, try the shim\n    const shim = await import('./import-shim.js');\n    if (!TinyEmitter && shim.TinyEmitter) TinyEmitter = shim.TinyEmitter;\n    if (!DiffMatchPatch && shim.DiffMatchPatch) DiffMatchPatch = shim.DiffMatchPatch;\n  }\n} catch (e) {\n  console.warn('Import shim not available, continuing with direct imports', e);\n}\n*/\n\n/**\n * SquibView is a lightweight editor that live-renders different content types\n */\nclass SquibView {\n  static defaultOptions = {\n    initialContent: '',\n    inputContentType: 'md', // 'md', 'html', 'reveal', 'csv' or 'tsv'\n    showControls: true,\n    titleShow: false,\n    titleContent: '',\n    initialView: 'split',\n    baseClass: 'squibview',\n    onReplaceSelectedText: null,\n    preserveImageTags: true, // Changed default to true\n    showLineNumbers: false,  // Enable/disable line numbers\n    lineNumberStart: 1,      // Starting line number\n    lineNumberMinDigits: 2,   // Minimum digits (e.g., 01, 02)\n    autoload_deps: null,      // Default off, can be { all: true } or fine-grained control\n    streamingMode: false,     // Enable streaming-friendly error handling\n    incompleteBlockPlaceholder: '⏳ Rendering...', // Placeholder for incomplete blocks\n    renderErrorPlaceholder: '❌ Render error',      // Placeholder for render errors\n    errorHandling: null       // Fine-grained error control\n  };\n\n  // Default CDN URLs for autoloading dependencies\n  static DEFAULT_CDN_URLS = {\n    mermaid: {\n      script: 'https://unpkg.com/mermaid@10.6.1/dist/mermaid.min.js'\n    },\n    hljs: {\n      script: 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js',\n      css: 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css'\n    },\n    mathjax: {\n      script: 'https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js'\n    },\n    leaflet: {\n      script: 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js',\n      css: 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css'\n    },\n    three: {\n      script: 'https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js'\n    },\n    stlLoader: {\n      script: 'https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/loaders/STLLoader.js'\n    },\n    orbitControls: {\n      script: 'https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/controls/OrbitControls.js'\n    }\n  };\n\n  static version = {\n    version: VERSION,\n    url: REPO_URL\n  };\n\n  /**\n   * Creates a new SquibView instance.\n   * \n   * @param {HTMLElement|string} element - The DOM element or selector where the editor will be mounted\n   * @param {Object} options - Configuration options for the editor\n   * @param {string} [options.initialContent=''] - Initial content to load\n   * @param {string} [options.inputContentType='md'] - Type of the initial content ('md', 'html', 'reveal', 'csv', 'tsv')\n   * @param {boolean} [options.showControls=true] - Whether to show the control buttons\n   * @param {boolean} [options.titleShow=false] - Whether to show the title section\n   * @param {string} [options.titleContent=''] - Content for the title section\n   * @param {string} [options.initialView='split'] - Initial view mode ('src', 'html', 'split')\n   * @param {string} [options.baseClass='squibview'] - Base CSS class for styling\n   * @param {Object|null} [options.autoload_deps=null] - Configuration for autoloading dependencies. null = disabled (default), { all: true } = enable all, or fine-grained control per library\n   * @throws {Error} Throws if the container element is not found\n   */\n  constructor(element, options = {}) {\n    this.options = { ...SquibView.defaultOptions, ...options };\n    \n    this.container = typeof element === 'string' ? document.querySelector(element) : element;\n\n    if (!this.container) {\n      throw new Error('Container element not found');\n    }\n\n    // Initialize autoload configuration\n    this._initializeAutoload();\n\n    // Initialize event emitter for plugin communication and selection events\n    this.events = new TinyEmitter();\n    \n    // Initialize revision manager\n    this.revisionManager = new RevisionHistory();\n    \n    // Track last selection data\n    this.lastSelectionData = null;\n    \n    // Store text selection handlers\n    this._onTextReplacementHandler = null;\n    \n    // Initialize renderer registry\n    this.renderers = {};\n    \n    // Initialize HTML to Markdown converter\n    this._initializeHtmlToMarkdown();\n    \n    // Initialize libraries and register default renderers\n    this.initializeLibraries();\n    this.registerDefaultRenderers();\n    \n    // Create DOM structure\n    this.createStructure();\n    this.initializeEventHandlers();\n    this.initializeResizeObserver();\n    \n    // Initialize line numbers if enabled\n    if (this.options.showLineNumbers) {\n      this.initializeLineNumbers();\n    }\n    \n    // Set initial content\n    if (this.options.initialContent) {\n      this.revisionManager.initialize(this.options.initialContent, this.options.inputContentType);\n      this.setContent(this.options.initialContent, this.options.inputContentType, false);\n    } else {\n      this.revisionManager.initialize('', this.options.inputContentType);\n    }\n    \n    // Set initial view\n    this.setView(this.options.initialView);\n    \n    // Update UI elements based on current content type\n    this.updateTypeButtons();\n    \n    // Set up text replacement handler if provided in options\n    if (this.options.onReplaceSelectedText) {\n      this.onReplaceSelectedText = this.options.onReplaceSelectedText;\n    }\n  }\n\n  /**\n   * Initialize autoload configuration\n   * @private\n   */\n  _initializeAutoload() {\n    const autoloadConfig = this.options.autoload_deps;\n\n    // If autoload is disabled (null or false), do nothing\n    if (!autoloadConfig) {\n      this.autoloadConfig = null;\n      return;\n    }\n\n    // Parse the configuration\n    this.autoloadConfig = {\n      enabled: true,\n      cdnUrls: { ...SquibView.DEFAULT_CDN_URLS, ...(autoloadConfig.cdnUrls || {}) },\n      libraries: {}\n    };\n\n    // Helper to parse library config\n    const parseLibConfig = (libName, config) => {\n      // If 'all' is set, apply to all libraries\n      if (config.all === true) {\n        return { strategy: 'ondemand' };\n      } else if (config.all === 'auto') {\n        return { strategy: 'auto' };\n      } else if (config.all === false) {\n        return { strategy: 'none' };\n      }\n\n      // Check specific library config\n      const libConfig = config[libName];\n\n      if (libConfig === false || libConfig === 'none') {\n        return { strategy: 'none' };\n      } else if (libConfig === true || libConfig === 'ondemand') {\n        return { strategy: 'ondemand' };\n      } else if (libConfig === 'auto') {\n        return { strategy: 'auto' };\n      } else if (typeof libConfig === 'function') {\n        return { strategy: 'custom', handler: libConfig };\n      } else if (typeof libConfig === 'object') {\n        return libConfig;\n      }\n\n      // Default based on 'all' setting or ondemand\n      return config.all ? { strategy: 'ondemand' } : { strategy: 'none' };\n    };\n\n    // Configure each library\n    ['mermaid', 'hljs', 'mathjax', 'leaflet', 'three'].forEach(lib => {\n      this.autoloadConfig.libraries[lib] = parseLibConfig(lib, autoloadConfig);\n    });\n\n    // Track loaded libraries\n    this.loadedLibraries = new Set();\n    this.loadingPromises = {};\n\n    // Load 'auto' libraries immediately after init\n    setTimeout(() => this._loadAutoLibraries(), 0);\n  }\n\n  /**\n   * Load libraries configured with 'auto' strategy\n   * @private\n   */\n  async _loadAutoLibraries() {\n    if (!this.autoloadConfig || !this.autoloadConfig.enabled) return;\n\n    for (const [libName, config] of Object.entries(this.autoloadConfig.libraries)) {\n      if (config.strategy === 'auto') {\n        await this._autoloadLibrary(libName);\n      }\n    }\n  }\n\n  /**\n   * Load a script dynamically\n   * @private\n   */\n  _loadScript(src) {\n    return new Promise((resolve, reject) => {\n      if (document.querySelector(`script[src=\"${src}\"]`)) {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = resolve;\n      script.onerror = () => reject(new Error(`Failed to load script: ${src}`));\n      document.head.appendChild(script);\n    });\n  }\n\n  /**\n   * Load a CSS file dynamically\n   * @private\n   */\n  _loadCSS(href) {\n    return new Promise((resolve, reject) => {\n      if (document.querySelector(`link[href=\"${href}\"]`)) {\n        resolve();\n        return;\n      }\n\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = () => reject(new Error(`Failed to load CSS: ${href}`));\n      document.head.appendChild(link);\n    });\n  }\n\n  /**\n   * Autoload a specific library\n   * @private\n   */\n  async _autoloadLibrary(libName) {\n    if (!this.autoloadConfig || !this.autoloadConfig.enabled) return false;\n\n    const config = this.autoloadConfig.libraries[libName];\n    if (!config || config.strategy === 'none') return false;\n\n    // Check if already loaded\n    if (this.loadedLibraries.has(libName)) return true;\n\n    // Check if library is already available\n    if (this._isLibraryLoaded(libName)) {\n      this.loadedLibraries.add(libName);\n      return true;\n    }\n\n    // Handle custom loading strategy\n    if (config.strategy === 'custom' && config.handler) {\n      const result = await config.handler();\n      if (result) this.loadedLibraries.add(libName);\n      return result;\n    }\n\n    // Check if already loading\n    if (this.loadingPromises[libName]) {\n      return this.loadingPromises[libName];\n    }\n\n    // Start loading\n    const cdnConfig = this.autoloadConfig.cdnUrls[libName];\n    if (!cdnConfig) return false;\n\n    this.loadingPromises[libName] = this._loadLibraryAssets(libName, cdnConfig);\n\n    try {\n      const result = await this.loadingPromises[libName];\n      if (result) {\n        this.loadedLibraries.add(libName);\n        // Re-initialize if needed\n        if (libName === 'mermaid') {\n          this.initializeLibraries();\n        }\n      }\n      return result;\n    } finally {\n      delete this.loadingPromises[libName];\n    }\n  }\n\n  /**\n   * Load library assets (script and optional CSS)\n   * @private\n   */\n  async _loadLibraryAssets(libName, cdnConfig) {\n    try {\n      const promises = [];\n\n      if (cdnConfig.script) {\n        promises.push(this._loadScript(cdnConfig.script));\n      }\n\n      if (cdnConfig.css) {\n        promises.push(this._loadCSS(cdnConfig.css));\n      }\n\n      await Promise.all(promises);\n\n      // Wait for library to be available\n      await this._waitForLibrary(libName);\n\n      // Special handling for Three.js - load additional dependencies after THREE is available\n      if (libName === 'three' && window.THREE) {\n        // STLLoader and OrbitControls need THREE to be globally available\n        if (this.autoloadConfig.cdnUrls.stlLoader) {\n          await this._loadScript(this.autoloadConfig.cdnUrls.stlLoader.script);\n        }\n        if (this.autoloadConfig.cdnUrls.orbitControls) {\n          await this._loadScript(this.autoloadConfig.cdnUrls.orbitControls.script);\n        }\n      }\n\n      return this._isLibraryLoaded(libName);\n    } catch (err) {\n      if (this.autoloadConfig.debug) {\n        console.error(`Failed to load ${libName}:`, err);\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Wait for a library to become available\n   * @private\n   */\n  _waitForLibrary(libName, maxAttempts = 20) {\n    return new Promise((resolve) => {\n      let attempts = 0;\n      const check = () => {\n        if (this._isLibraryLoaded(libName) || attempts >= maxAttempts) {\n          resolve();\n        } else {\n          attempts++;\n          setTimeout(check, 100);\n        }\n      };\n      check();\n    });\n  }\n\n  /**\n   * Check if a library is loaded\n   * @private\n   */\n  _isLibraryLoaded(libName) {\n    switch (libName) {\n      case 'mermaid':\n        return typeof window !== 'undefined' && typeof window.mermaid !== 'undefined';\n      case 'hljs':\n        return typeof window !== 'undefined' && typeof window.hljs !== 'undefined';\n      case 'mathjax':\n        return typeof window !== 'undefined' && typeof window.MathJax !== 'undefined';\n      case 'leaflet':\n        return typeof window !== 'undefined' && typeof window.L !== 'undefined';\n      case 'three':\n        return typeof window !== 'undefined' && typeof window.THREE !== 'undefined';\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Check content and autoload required libraries\n   * @private\n   */\n  async _checkAndAutoloadLibraries(content) {\n    if (!this.autoloadConfig || !this.autoloadConfig.enabled) return;\n\n    const promises = [];\n\n    // Check for mermaid diagrams\n    if (content.includes('```mermaid')) {\n      const config = this.autoloadConfig.libraries.mermaid;\n      if (config && config.strategy === 'ondemand') {\n        promises.push(this._autoloadLibrary('mermaid'));\n      }\n    }\n\n    // Check for code blocks (for syntax highlighting)\n    if (/```\\w+/.test(content)) {\n      const config = this.autoloadConfig.libraries.hljs;\n      if (config && config.strategy === 'ondemand') {\n        promises.push(this._autoloadLibrary('hljs'));\n      }\n    }\n\n    // Check for math content\n    if (content.includes('$$') || content.includes('```math')) {\n      const config = this.autoloadConfig.libraries.mathjax;\n      if (config && config.strategy === 'ondemand') {\n        promises.push(this._autoloadLibrary('mathjax'));\n      }\n    }\n\n    // Check for GeoJSON/TopoJSON\n    if (content.includes('```geojson') || content.includes('```topojson')) {\n      const config = this.autoloadConfig.libraries.leaflet;\n      if (config && config.strategy === 'ondemand') {\n        promises.push(this._autoloadLibrary('leaflet'));\n      }\n    }\n\n    // Check for STL 3D models\n    if (content.includes('```stl')) {\n      const config = this.autoloadConfig.libraries.three;\n      if (config && config.strategy === 'ondemand') {\n        promises.push(this._autoloadLibrary('three'));\n      }\n    }\n\n    // Wait for all libraries to load\n    if (promises.length > 0) {\n      await Promise.all(promises);\n    }\n  }\n\n  /**\n   * Initialize the HTML to Markdown converter\n   *\n   * @private\n   */\n  async _initializeHtmlToMarkdown() {\n    try {\n      // Try to load synchronously first for better performance\n      if (typeof HtmlToMarkdown !== 'undefined') {\n        // If HtmlToMarkdown is already available globally (e.g., in UMD build)\n        this._htmlToMarkdownConverter = new HtmlToMarkdown({\n          cacheSize: 20 // Cache up to 20 recent conversions for better performance\n        });\n      } else {\n        // Fall back to dynamic import if needed\n        const module = await import('./HtmlToMarkdown.js');\n        const HtmlToMarkdownClass = module.default;\n        this._htmlToMarkdownConverter = new HtmlToMarkdownClass({\n          cacheSize: 20\n        });\n      }\n    } catch (err) {\n      console.error('Failed to load HtmlToMarkdown module:', err);\n      // Provide a minimal fallback implementation\n      this._htmlToMarkdownConverter = {\n        convert: (html) => {\n          const div = document.createElement('div');\n          div.innerHTML = html;\n          return div.textContent;\n        }\n      };\n    }\n  }\n\n  /**\n   * Initializes the required libraries for rendering content.\n   * Sets up Mermaid for diagrams and markdown-it for Markdown processing.\n   * \n   * @private\n   */\n  initializeLibraries() {\n    // Initialize Mermaid for diagram rendering if available\n    if (typeof window !== 'undefined' && window.mermaid) {\n      const self = this;\n      window.mermaid.initialize({\n        startOnLoad: false,\n        securityLevel: 'loose',\n        theme: 'default',\n        errorCallback: function (error) {\n          // Only log errors if not in streaming mode or if explicitly configured\n          if (!self._shouldSuppressErrors('mermaid')) {\n            console.warn(\"Mermaid error:\", error);\n          }\n          return \"<div class='mermaid-error'></div>\";\n        }\n      });\n      // Don't auto-init in streaming mode - we'll handle it manually\n      if (!this.options.streamingMode) {\n        window.mermaid.init(undefined, \".mermaid\");\n      }\n    }\n    \n    // Initialize markdown-it with options and syntax highlighting\n    this.md = new MarkdownIt({\n      html: true,\n      linkify: true,\n      typographer: true,\n      highlight: (str, lang) => {\n        const hljs = getHljs();\n        if (lang && hljs && hljs.getLanguage && hljs.getLanguage(lang)) {\n          try {\n            return hljs.highlight(str, { language: lang }).value;\n          } catch (e) {\n            // Fallback to no highlighting on error\n          }\n        }\n        return '';\n      }\n    });\n\n    // Configure custom fence rendering for markdown-it\n    const defaultFence = this.md.renderer.rules.fence ||\n      ((tokens, idx, options, env, self) => self.renderToken(tokens, idx, options));\n\n    this.md.renderer.rules.fence = (tokens, idx, options, env, self) => {\n      const token = tokens[idx];\n      const info = token.info.trim().toLowerCase(); // Normalize to lowercase\n      const content = token.content; // Raw content from the fenced block\n\n      // Handle Mermaid diagrams\n      if (info === 'mermaid') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        return `<div class=\"mermaid\" data-source-type=\"mermaid\">${escapedContent}</div>`;\n      }\n\n      // Handle SVG directly\n      if (info === 'svg') {\n        const escapeForAttribute = (str) => {\n          return str.replace(/&/g, '&amp;')\n                    .replace(/\"/g, '&quot;')\n                    .replace(/'/g, '&#x27;')\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;');\n        };\n        const escapedSource = escapeForAttribute(content);\n        return `<div class=\"svg-container\" data-source-type=\"svg\" data-original-source=\"${escapedSource}\">${content}</div>`;\n      }\n\n      // Handle GeoJSON maps\n      if (info === 'geojson') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        const escapedSource = this.md.utils.escapeHtml(content);\n        return `<div class=\"geojson-container\" data-source-type=\"geojson\" data-original-source=\"${escapedSource}\">${escapedContent}</div>`;\n      }\n\n      // Handle TopoJSON maps  \n      if (info === 'topojson') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        const escapedSource = this.md.utils.escapeHtml(content);\n        return `<div class=\"topojson-container\" data-source-type=\"topojson\" data-original-source=\"${escapedSource}\">${escapedContent}</div>`;\n      }\n\n      // Handle STL 3D models\n      if (info === 'stl') {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        const escapedSource = this.md.utils.escapeHtml(content);\n        return `<div class=\"stl-container\" data-source-type=\"stl\" data-original-source=\"${escapedSource}\">${escapedContent}</div>`;\n      }\n\n      // Handle mathematical expressions\n      if (info === 'math') {\n        const mathId = 'math-' + Math.random().toString(36).substring(2, 15);\n        // Pass raw 'content' to MathJax, wrapped in $$ ... $$ on a single line\n        const singleLineContent = content.replace(/\\r?\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n        return `<div id=\"${mathId}\" class=\"math-display\" data-source-type=\"math\">$${'$'}${singleLineContent}$${'$'}</div>`;\n      }\n\n      // Default fence renderer (for code blocks)\n      const langName = token.info.trim().split(/\\s+/)[0] || '';\n      const escapedLangName = this.md.utils.escapeHtml(langName);\n      const tableLangs = ['csv', 'tsv', 'psv'];\n      if (tableLangs.includes(langName)) {\n        try {\n          if (typeof Papa === 'undefined' || typeof Papa.parse !== 'function') {\n            return `<pre class=\"squibview-error\" data-source-type=\"${escapedLangName}\">Error: PapaParse library not loaded.</pre>`;\n          }\n          let parseConfig = { skipEmptyLines: true };\n          if (langName !== 'tsv') parseConfig.delimiter = langName === 'csv' ? ',' : '|';\n          const parsedData = Papa.parse(content, parseConfig);\n          if (parsedData.errors && parsedData.errors.length > 0) {\n            let errorMessages = parsedData.errors.map(err => `${err.type}: ${err.message} (Row: ${err.row})`).join('\\n');\n            return `<pre class=\"squibview-error\" data-source-type=\"${escapedLangName}\">Error parsing ${langName} data:\\n${this.md.utils.escapeHtml(errorMessages)}</pre>`;\n          }\n          return `<div data-source-type=\"${escapedLangName}\">${this._dataToHtmlTable(parsedData.data)}</div>`;\n        } catch (e) {\n          return `<pre class=\"squibview-error\" data-source-type=\"${escapedLangName}\">Could not render ${this.md.utils.escapeHtml(langName)} table.</pre>`;\n        }\n      }\n      let codeHtml;\n      const hljs = getHljs();\n      if (hljs && hljs.getLanguage && hljs.getLanguage(langName)) {\n        try {\n          const highlightedContent = hljs.highlight(content, { language: langName, ignoreIllegals: true }).value;\n          codeHtml = `<pre><code class=\"hljs language-${escapedLangName}\" data-source-type=\"code\" data-lang=\"${escapedLangName}\">${highlightedContent}</code></pre>`;\n        } catch (e) {\n          // Fallback to non-highlighted if error occurs\n        }\n      }\n      if (!codeHtml) {\n        const escapedContent = this.md.utils.escapeHtml(content);\n        codeHtml = `<pre><code class=\"hljs language-${escapedLangName}\" data-source-type=\"code\" data-lang=\"${escapedLangName}\">${escapedContent}</code></pre>`;\n      }\n      return `<div data-source-type=\"${escapedLangName || 'code'}\">${codeHtml}</div>`;\n    };\n  }\n\n  /**\n   * Converts parsed data (array of arrays) to an HTML table string.\n   *\n   * @param {Array<Array<string>>} rows - The data rows, where the first row is the header.\n   * @returns {string} An HTML table string.\n   * @private\n   */\n  _dataToHtmlTable(rows) {\n    if (!rows || rows.length === 0) {\n      return '<p class=\"squibview-info\">No data to display.</p>';\n    }\n\n    let html = '<table class=\"squibview-data-table\">';\n\n    // Header\n    const headerCells = rows[0];\n    html += '<thead><tr>';\n    headerCells.forEach(cell => {\n      html += `<th>${this.md.utils.escapeHtml(String(cell))}</th>`;\n    });\n    html += '</tr></thead>';\n\n    // Body\n    html += '<tbody>';\n    for (let i = 1; i < rows.length; i++) {\n      html += '<tr>';\n      const bodyCells = rows[i];\n      // Ensure all rows have the same number of cells as the header\n      // by either truncating or padding with empty cells\n      for (let j = 0; j < headerCells.length; j++) {\n          const cellContent = bodyCells[j] !== undefined ? String(bodyCells[j]) : '';\n          html += `<td>${this.md.utils.escapeHtml(cellContent)}</td>`;\n      }\n      html += '</tr>';\n    }\n    html += '</tbody></table>';\n\n    return html;\n  }\n\n  /**\n   * Registers a content type renderer with specified configuration\n   * \n   * @param {string} type - The content type identifier ('md', 'html', etc.)\n   * @param {Object} config - Renderer configuration\n   * @param {Function} config.render - Function to render the content type\n   * @param {Function} [config.sourceToOutput] - Function to transform source to output\n   * @param {Function} [config.outputToSource] - Function to transform output back to source\n   * @param {Object} [config.operations] - Map of operations that can be performed on this content type\n   * @param {Array} [config.buttons] - Buttons to display when this content type is active\n   */\n  registerRenderer(type, config) {\n    this.renderers[type] = config;\n    \n    // Trigger event for plugins to react\n    this.events.emit('renderer:registered', type, config);\n    \n    // Update buttons if this is the current content type\n    if (this.inputContentType === type) {\n      this.updateTypeButtons();\n    }\n  }\n  \n  /**\n   * Registers the default renderers for standard content types\n   * \n   * @private\n   */\n  registerDefaultRenderers() {\n    // Markdown renderer\n    this.registerRenderer('md', {\n      render: (source) => this.renderMarkdown(source),\n      sourceToOutput: (source) => this.md.render(source),\n      outputToSource: (output, options = {}) => this.htmlToMarkdown(output, options),\n      operations: {\n        increaseHeadings: (src) => this.markdownAdjustHeadings(src, 1),\n        decreaseHeadings: (src) => this.markdownAdjustHeadings(src, -1),\n        removeHR: (src) => src.replace(/---/g, ''),\n        fixLinefeeds: (src) => this.fixLinefeedsInMarkdown(src),\n        toggleLinefeedView: () => { this.toggleLinefeedView(); return this.getContent(); }\n      },\n      buttons: [\n        { label: 'H-', action: 'decreaseHeadings', title: 'Decrease heading levels' },\n        { label: 'H+', action: 'increaseHeadings', title: 'Increase heading levels' },\n        { label: 'Remove HR', action: 'removeHR', title: 'Remove horizontal rules' },\n        { label: 'Smart Linefeeds', action: 'fixLinefeeds', title: 'Convert all single line breaks to hard line breaks (two spaces + newline) in the source.' }\n      ]\n    });\n    \n    // HTML renderer\n    this.registerRenderer('html', {\n      render: (source) => this.renderHTML(source),\n      sourceToOutput: (source) => source,\n      outputToSource: (output) => output,\n      operations: {},\n      buttons: []\n    });\n    \n    // RevealJS renderer\n    this.registerRenderer('reveal', {\n      render: (source) => this.renderHTML(this.makeRevealJSFullPage(source)),\n      sourceToOutput: (source) => this.makeRevealJSFullPage(source),\n      outputToSource: (output) => output,\n      operations: {},\n      buttons: []\n    });\n    \n    // CSV renderer\n    this.registerRenderer('csv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, ',');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, ','),\n      outputToSource: (output) => this.tableToCSV(output),\n      operations: {},\n      buttons: []\n    });\n    \n    // TSV renderer\n    this.registerRenderer('tsv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, '\\t');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, '\\t'),\n      outputToSource: (output) => this.tableToCSV(output, '\\t'),\n      operations: {},\n      buttons: []\n    });\n    \n    // Semicolon separated values renderer\n    this.registerRenderer('semisv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, ';');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, ';'),\n      outputToSource: (output) => this.tableToCSV(output, ';'),\n      operations: {},\n      buttons: []\n    });\n    \n    // Space separated values renderer\n    this.registerRenderer('ssv', {\n      render: (source) => {\n        const markdownTable = this.csvOrTsvToMarkdownTable(source, ' ');\n        this.renderMarkdown(markdownTable);\n      },\n      sourceToOutput: (source) => this.csvOrTsvToMarkdownTable(source, ' '),\n      outputToSource: (output) => this.tableToCSV(output, ' '),\n      operations: {},\n      buttons: []\n    });\n  }\n\n  /**\n   * Creates the DOM structure for the editor.\n   * Sets up the title bar, controls, and editor areas.\n   * \n   * @private\n   */\n  createStructure() {\n    this.container.classList.add(this.options.baseClass);\n\n    this.container.innerHTML = `\n      <div class=\"${this.options.baseClass}-title\" ${!this.options.titleShow ? 'style=\"display:none\"' : ''}>\n        ${this.options.titleContent}\n      </div>\n      <div class=\"${this.options.baseClass}-controls\" ${!this.options.showControls ? 'style=\"display:none\"' : ''}>\n        <button data-view='src'>Source</button>\n        <button data-view=\"html\">Rendered</button>\n        <button data-view=\"split\">Split</button>\n        <button class=\"copy-src-button\">Copy Source</button>\n        <button class=\"copy-html-button\">Copy Rendered</button>\n        <button class=\"revision-undo\" title=\"Undo\">&#x21A9;</button>\n        <button class=\"revision-redo\" title=\"Redo\">&#x21AA;</button>\n        <span class=\"${this.options.baseClass}-type-buttons\"></span>\n      </div>\n      <div class=\"${this.options.baseClass}-editor\">\n        ${this.options.showLineNumbers ? \n          `<div class=\"${this.options.baseClass}-source-panel\">\n            <div class=\"${this.options.baseClass}-line-gutter\"></div>\n            <textarea class=\"${this.options.baseClass}-input\"></textarea>\n          </div>` :\n          `<textarea class=\"${this.options.baseClass}-input\"></textarea>`\n        }\n        <div class=\"${this.options.baseClass}-output\"></div>\n      </div>\n    `;\n\n    this.title = this.container.querySelector(`.${this.options.baseClass}-title`);\n    this.controls = this.container.querySelector(`.${this.options.baseClass}-controls`);\n    this.editor = this.container.querySelector(`.${this.options.baseClass}-editor`);\n    this.input = this.container.querySelector(`.${this.options.baseClass}-input`);\n    this.output = this.container.querySelector(`.${this.options.baseClass}-output`);\n    this.typeButtonsContainer = this.container.querySelector(`.${this.options.baseClass}-type-buttons`);\n    this.universalButtonsContainer = this.container.querySelector(`.${this.options.baseClass}-universal-buttons`);\n    \n    // Line numbers elements\n    if (this.options.showLineNumbers) {\n      this.sourcePanel = this.container.querySelector(`.${this.options.baseClass}-source-panel`);\n      this.lineGutter = this.container.querySelector(`.${this.options.baseClass}-line-gutter`);\n    }\n  }\n\n  /**\n   * Updates the type-specific buttons based on the current content type\n   * \n   * @private\n   */\n  updateTypeButtons() {\n    // Clear current buttons\n    this.typeButtonsContainer.innerHTML = '';\n    \n    // Get buttons for current content type\n    const renderer = this.renderers[this.inputContentType];\n    if (renderer && renderer.buttons && renderer.buttons.length > 0) {\n      renderer.buttons.forEach(button => {\n        const btn = document.createElement('button');\n        btn.textContent = button.label;\n        if (button.title) {\n          btn.title = button.title;\n        }\n        btn.addEventListener('click', () => {\n          if (renderer.operations && renderer.operations[button.action]) {\n            const newContent = renderer.operations[button.action](this.getContent());\n            this.setContent(newContent, this.inputContentType);\n          }\n        });\n        this.typeButtonsContainer.appendChild(btn);\n      });\n    }\n  }\n\n  /**\n   * Sets up event listeners for user interactions.\n   * Handles view changes, copy functionality, and input changes.\n   * \n   * @private\n   */\n  initializeEventHandlers() {\n    // View buttons\n    this.controls.querySelectorAll('button[data-view]').forEach(button => {\n      button.addEventListener('click', () => this.setView(button.dataset.view));\n    });\n\n    // Copy buttons\n    this.controls.querySelector('.copy-src-button').addEventListener('click', () => this.copySource());\n    this.controls.querySelector('.copy-html-button').addEventListener('click', () => this.copyHTML());\n    \n    // Undo/redo buttons\n    this.controls.querySelector('.revision-undo').addEventListener('click', () => this.revisionUndo());\n    this.controls.querySelector('.revision-redo').addEventListener('click', () => this.revisionRedo());\n\n    // Input source change event\n    this.input.addEventListener('input', () => { \n      this.setContent(); \n    });\n    \n    // Text selection event in source panel\n    this.input.addEventListener('mouseup', () => {\n      const selection = document.getSelection();\n      if (selection && selection.toString().trim() !== '') {\n        const selectionData = {\n          panel: 'source',\n          text: selection.toString(),\n          range: {\n            start: this.input.selectionStart,\n            end: this.input.selectionEnd\n          }\n        };\n        this.lastSelectionData = selectionData;\n        this.events.emit('text:selected', selectionData);\n      }\n    });\n    \n    // Listen for changes in rendered content to support bidirectional editing\n    // Use a debounce pattern to prevent processing every keystroke\n    let editDebounceTimer = null;\n    \n    // Create a map to store special content blocks\n    this.specialContentBlocks = new Map();\n    \n    this.output.addEventListener('input', () => {\n      if (this.currentView === 'html' || this.currentView === 'split') {\n        const editableContent = this.output.querySelector('[contenteditable=\"true\"]');\n        if (editableContent) {\n          // Clear any existing timer\n          if (editDebounceTimer) {\n            clearTimeout(editDebounceTimer);\n          }\n          \n          // Set a new timer to process the edit after a short delay (300ms)\n          editDebounceTimer = setTimeout(() => {\n            const renderedContent = editableContent.innerHTML;\n            const renderer = this.renderers[this.inputContentType];\n            \n            if (renderer && renderer.outputToSource) {\n              // Get the original source markdown\n              const originalSource = this.input.value;\n              \n              // Process the HTML back to markdown, passing original source for context\n              let newSource = renderer.outputToSource(renderedContent, {\n                originalSource: originalSource\n              });\n              \n              // Update source without triggering render cycle\n              this.input.value = newSource;\n              \n              // Only save revision after editing stops for a moment\n              this.revisionManager.addRevision(newSource, this.inputContentType);\n              \n              // Emit content change event\n              this.events.emit('content:change', newSource, this.inputContentType);\n            }\n            \n            // Clear the timer reference\n            editDebounceTimer = null;\n          }, 300);\n        }\n      }\n    });\n    \n    // Text selection event in rendered panel\n    this.output.addEventListener('mouseup', () => {\n      const selection = document.getSelection();\n      if (selection && selection.toString().trim() !== '') {\n        const range = selection.getRangeAt(0);\n        const selectionData = {\n          panel: 'rendered',\n          text: selection.toString(),\n          range: range,\n          element: this.output.querySelector('[contenteditable=\"true\"]')\n        };\n        this.lastSelectionData = selectionData;\n        this.events.emit('text:selected', selectionData);\n      }\n    });\n  }\n  \n  /**\n   * Preserves special content blocks like Mermaid diagrams, SVG, GeoJSON and math from original source\n   * @param {string} originalSource - The original markdown source\n   * @param {string} newSource - The new source after HTML-to-Markdown conversion\n   * @returns {string} - Source with special blocks preserved\n   * @private\n   */\n  preserveSpecialBlocks(originalSource, newSource) {\n    // If no original source, just return the new source\n    if (!originalSource) return newSource;\n    \n    // Extract special blocks from original source\n    const specialBlocks = [];\n    \n    // Extract Mermaid blocks: ```mermaid ... ```\n    const mermaidRegex = /```mermaid\\s*([\\s\\S]*?)```/g;\n    let mermaidMatch;\n    while ((mermaidMatch = mermaidRegex.exec(originalSource)) !== null) {\n      specialBlocks.push({\n        type: 'mermaid',\n        content: mermaidMatch[0],\n        startIndex: mermaidMatch.index,\n        endIndex: mermaidMatch.index + mermaidMatch[0].length\n      });\n    }\n    \n    // Extract GeoJSON blocks: ```geojson ... ```\n    const geojsonRegex = /```geojson\\s*([\\s\\S]*?)```/g;\n    let geojsonMatch;\n    while ((geojsonMatch = geojsonRegex.exec(originalSource)) !== null) {\n      specialBlocks.push({\n        type: 'geojson',\n        content: geojsonMatch[0],\n        startIndex: geojsonMatch.index,\n        endIndex: geojsonMatch.index + geojsonMatch[0].length\n      });\n    }\n    \n    // Extract Math blocks: ```math ... ```\n    const mathRegex = /```math\\s*([\\s\\S]*?)```/g;\n    let mathMatch;\n    while ((mathMatch = mathRegex.exec(originalSource)) !== null) {\n      specialBlocks.push({\n        type: 'math',\n        content: mathMatch[0],\n        startIndex: mathMatch.index,\n        endIndex: mathMatch.index + mathMatch[0].length\n      });\n    }\n    \n    // Find corresponding locations in new source and preserve the special blocks\n    // This is a heuristic approach - we look for markers that might indicate where\n    // the special content was converted to something else\n    \n    let modifiedSource = newSource;\n    \n    // Look for elements in the newSource which likely represent our special blocks\n    const mermaidDivRegex = /<div[^>]*class=['\"]?mermaid['\"]?[^>]*>([\\s\\S]*?)<\\/div>/g;\n    const geojsonDivRegex = /<div[^>]*class=['\"]?geojson-map['\"]?[^>]*>[\\s\\S]*?<\\/div>/g;\n    const mathDivRegex = /<div[^>]*class=['\"]?math-display['\"]?[^>]*>[\\s\\S]*?<\\/div>/g;\n    \n    // Replace mermaid divs with original mermaid code blocks\n    let mermaidDivMatch;\n    let mermaidIndex = 0;\n    while ((mermaidDivMatch = mermaidDivRegex.exec(modifiedSource)) !== null) {\n      // Find the next available mermaid block\n      const mermaidBlocks = specialBlocks.filter(block => block.type === 'mermaid');\n      if (mermaidIndex < mermaidBlocks.length) {\n        // Replace the div with the original mermaid code block\n        modifiedSource = \n          modifiedSource.substring(0, mermaidDivMatch.index) + \n          mermaidBlocks[mermaidIndex].content + \n          modifiedSource.substring(mermaidDivMatch.index + mermaidDivMatch[0].length);\n        \n        mermaidIndex++;\n      }\n    }\n    \n    // Replace GeoJSON divs with original GeoJSON code blocks\n    let geojsonDivMatch;\n    let geojsonIndex = 0;\n    while ((geojsonDivMatch = geojsonDivRegex.exec(modifiedSource)) !== null) {\n      // Find the next available GeoJSON block\n      const geojsonBlocks = specialBlocks.filter(block => block.type === 'geojson');\n      if (geojsonIndex < geojsonBlocks.length) {\n        // Replace the div with the original GeoJSON code block\n        modifiedSource = \n          modifiedSource.substring(0, geojsonDivMatch.index) + \n          geojsonBlocks[geojsonIndex].content + \n          modifiedSource.substring(geojsonDivMatch.index + geojsonDivMatch[0].length);\n        \n        geojsonIndex++;\n      }\n    }\n    \n    // Replace Math divs with original Math code blocks\n    let mathDivMatch;\n    let mathIndex = 0;\n    while ((mathDivMatch = mathDivRegex.exec(modifiedSource)) !== null) {\n      // Find the next available math block\n      const mathBlocks = specialBlocks.filter(block => block.type === 'math');\n      if (mathIndex < mathBlocks.length) {\n        // Replace the div with the original math code block\n        modifiedSource = \n          modifiedSource.substring(0, mathDivMatch.index) + \n          mathBlocks[mathIndex].content + \n          modifiedSource.substring(mathDivMatch.index + mathDivMatch[0].length);\n        \n        mathIndex++;\n      }\n    }\n    \n    return modifiedSource;\n  }\n  \n  /**\n   * Sets up a resize observer to adjust the layout when the container size changes.\n   * \n   * @private\n   */\n  initializeResizeObserver() {\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        if (entry.target === this.container) {\n          this.adjustLayout();\n        }\n      }\n    });\n    resizeObserver.observe(this.container);\n  }\n\n  /**\n   * Adjusts the layout of the editor components based on the current view and container size.\n   * \n   * @private\n   */\n  adjustLayout() {\n    const containerRect = this.container.getBoundingClientRect();\n    const titleHeight = this.title.offsetHeight;\n    const controlsHeight = this.controls.offsetHeight;\n\n    const availableHeight = containerRect.height - titleHeight - controlsHeight;\n    const availableWidth = containerRect.width;\n    this.editor.style.height = `${availableHeight}px`;\n    this.editor.style.width = `${availableWidth}px`;\n\n    if (this.currentView === 'split') {\n      this.input.style.width = '50%';\n      this.output.style.width = '50%';\n    } else if (this.currentView === 'src') {\n      this.input.style.width = '100%';\n    } else if (this.currentView === 'html') {\n      this.output.style.width = '100%';\n    }\n    \n    // Emit layout change event for plugins\n    this.events.emit('layout:change', this.currentView, {\n      containerWidth: availableWidth,\n      containerHeight: availableHeight\n    });\n  }\n\n  /**\n   * Sets or gets the streaming mode state\n   * @param {boolean} [enabled] - If provided, sets streaming mode. If omitted, returns current state.\n   * @returns {boolean|undefined} Current streaming mode state if no parameter provided\n   */\n  streamingMode(enabled) {\n    if (enabled === undefined) {\n      return this.options.streamingMode;\n    }\n    this.options.streamingMode = Boolean(enabled);\n    // Re-render if content exists to apply new mode\n    if (this.input.value) {\n      this.renderMarkdown();\n    }\n  }\n\n  /**\n   * Sets the content of the editor and renders it.\n   *\n   * @param {string} [content=this.input.value] - The content to set\n   * @param {string} [contentType=this.inputContentType] - The type of content ('md', 'html', 'reveal', 'csv', 'tsv')\n   * @param {boolean} [saveRevision=true] - Whether to save this change to the revision history\n   */\n  setContent(content = this.input.value, contentType = this.inputContentType, saveRevision = true) {\n    // Check if content type has changed\n    const typeChanged = contentType !== this.inputContentType;\n    if (typeChanged) {\n      this.inputContentType = contentType;\n      this.updateTypeButtons();\n    }\n    \n    this.input.value = content;\n    \n    // Add to revision history if required\n    if (saveRevision) {\n      this.revisionManager.addRevision(content, contentType);\n    }\n    \n    // Render the content\n    this.renderOutput();\n    \n    // Update line numbers if enabled\n    if (this.options.showLineNumbers && this.lineGutter) {\n      this.updateLineNumbers();\n    }\n    \n    // Emit content change event\n    this.events.emit('content:change', content, contentType);\n  }\n\n  /**\n   * Undoes the last change if possible.\n   * Decrements the revision index and restores the content from that revision.\n   */\n  revisionUndo() {\n    const prevState = this.revisionManager.undo();\n    if (prevState) {\n      this.input.value = prevState.content;\n      this.inputContentType = prevState.contentType;\n      \n      // Update buttons if content type changed\n      this.updateTypeButtons();\n      \n      // Render the content\n      this.renderOutput();\n      \n      // Emit undo event\n      this.events.emit('revision:undo', prevState.content, prevState.contentType);\n    }\n  }\n  \n  /**\n   * Redoes a previously undone change if possible.\n   * Increments the revision index and restores the content from that revision.\n   */\n  revisionRedo() {\n    const nextState = this.revisionManager.redo();\n    if (nextState) {\n      this.input.value = nextState.content;\n      this.inputContentType = nextState.contentType;\n      \n      // Update buttons if content type changed\n      this.updateTypeButtons();\n      \n      // Render the content\n      this.renderOutput();\n      \n      // Emit redo event\n      this.events.emit('revision:redo', nextState.content, nextState.contentType);\n    }\n  }\n  \n  /**\n   * Sets the revision to a specific index in the history.\n   * \n   * @param {number} index - The revision index to set\n   */\n  revisionSet(index) {\n    const state = this.revisionManager.setRevision(index);\n    if (state) {\n      this.input.value = state.content;\n      this.inputContentType = state.contentType;\n      \n      // Update buttons if content type changed\n      this.updateTypeButtons();\n      \n      // Render the content\n      this.renderOutput();\n      \n      // Emit revision:set event\n      this.events.emit('revision:set', index, state.content, state.contentType);\n    }\n  }\n  \n  /**\n   * Returns the total number of revisions in the history.\n   * \n   * @returns {number} The number of revisions\n   */\n  revisionNumRevsions() {\n    return this.revisionManager.getRevisionCount();\n  }\n  \n  /**\n   * Returns the current index in the revision history.\n   * \n   * @returns {number} The current revision index\n   */\n  revisionGetCurrentIndex() {\n    return this.revisionManager.getCurrentIndex();\n  }\n\n  /**\n   * Gets the current content from the input textarea.\n   * \n   * @returns {string} The current content\n   */\n  getContent() {\n    return this.input.value;\n  }\n\n  /**\n   * Cleans markdown content by removing markdown code fence markers.\n   * \n   * @param {string} md - The markdown content to clean\n   * @returns {string} The cleaned markdown content\n   */\n  cleanMarkdown(md) {\n    return md.replace(/^```markdown\\s+/, '').replace(/```$/, '');\n  }\n\n  /**\n   * Detects if content has incomplete fence blocks\n   * @private\n   * @param {string} content - The content to check\n   * @returns {Array} Array of incomplete block info {type, startLine, content}\n   */\n  _detectIncompleteBlocks(content) {\n    const incompleteBlocks = [];\n    const lines = content.split('\\n');\n    let inBlock = false;\n    let blockType = '';\n    let blockStartLine = 0;\n    let blockContent = [];\n    let fenceLength = 0;\n\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      const fenceMatch = line.match(/^(`{3,}|~{3,})\\s*(\\w*)/);\n\n      if (fenceMatch && !inBlock) {\n        // Starting a fence block\n        inBlock = true;\n        fenceLength = fenceMatch[1].length;\n        blockType = fenceMatch[2] || 'code';\n        blockStartLine = i;\n        blockContent = [];\n      } else if (inBlock) {\n        const closeFence = line.match(/^(`{3,}|~{3,})\\s*$/);\n        if (closeFence && closeFence[1].length >= fenceLength) {\n          // Closing fence found\n          inBlock = false;\n          blockType = '';\n          blockContent = [];\n          fenceLength = 0;\n        } else {\n          blockContent.push(line);\n        }\n      }\n    }\n\n    // If we're still in a block at the end, it's incomplete\n    if (inBlock) {\n      incompleteBlocks.push({\n        type: blockType,\n        startLine: blockStartLine,\n        content: blockContent.join('\\n')\n      });\n    }\n\n    return incompleteBlocks;\n  }\n\n  /**\n   * Renders a placeholder for incomplete blocks\n   * @private\n   * @param {string} blockType - The type of the incomplete block\n   * @returns {string} HTML for the placeholder\n   */\n  _renderIncompletePlaceholder(blockType) {\n    const placeholder = this.options.incompleteBlockPlaceholder || '⏳ Rendering...';\n    return `<div class=\"incomplete-block\" data-block-type=\"${blockType}\">\n      <div class=\"incomplete-block-message\">${placeholder}</div>\n      <div class=\"incomplete-block-type\">Incomplete ${blockType} block</div>\n    </div>`;\n  }\n\n  /**\n   * Renders a placeholder for render errors\n   * @private\n   * @param {string} blockType - The type of the block that failed\n   * @returns {string} HTML for the error placeholder\n   */\n  _renderErrorPlaceholder(blockType) {\n    const placeholder = this.options.renderErrorPlaceholder || '❌ Render error';\n    return `<div class=\"render-error\" data-block-type=\"${blockType}\">\n      <div class=\"render-error-message\">${placeholder}</div>\n      <div class=\"render-error-type\">${blockType} rendering failed</div>\n    </div>`;\n  }\n\n  /**\n   * Determines if errors should be suppressed for a given type\n   * @private\n   * @param {string} errorType - The type of error (mermaid, math, etc.)\n   * @returns {boolean} True if errors should be suppressed\n   */\n  _shouldSuppressErrors(errorType) {\n    if (this.options.streamingMode) {\n      return true;\n    }\n\n    if (this.options.errorHandling) {\n      const key = `suppress${errorType.charAt(0).toUpperCase() + errorType.slice(1)}Errors`;\n      return this.options.errorHandling[key] === true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Renders Markdown content to HTML and processes the result.\n   * Converts images to data URLs and initializes Mermaid diagrams.\n   *\n   * @param {string} [md] - The Markdown content to render, defaults to current input value\n   * @returns {Promise<void>} A promise that resolves when rendering is complete\n   */\n  async renderMarkdown(md) {\n    let markdown = md || this.input.value;\n\n    // Check for incomplete blocks if in streaming mode\n    if (this.options.streamingMode || (this.options.errorHandling && this.options.errorHandling.showIncompleteBlockPlaceholder)) {\n      const incompleteBlocks = this._detectIncompleteBlocks(markdown);\n\n      if (incompleteBlocks.length > 0) {\n        // Replace incomplete blocks with HTML placeholders instead of processing them\n        const lines = markdown.split('\\n');\n        let result = [];\n        let inIncompleteBlock = false;\n        let currentBlockType = '';\n\n        for (let i = 0; i < lines.length; i++) {\n          const line = lines[i];\n\n          // Check if this line starts an incomplete block\n          const isIncompleteStart = incompleteBlocks.some(block => {\n            if (block.startLine === i) {\n              inIncompleteBlock = true;\n              currentBlockType = block.type;\n              return true;\n            }\n            return false;\n          });\n\n          if (isIncompleteStart) {\n            // Add placeholder instead of the incomplete block\n            result.push(`\\n\\n<div class=\"incomplete-block-marker\" data-type=\"${currentBlockType}\">INCOMPLETE:${currentBlockType}</div>\\n\\n`);\n            // Skip to end of content\n            break;\n          } else if (!inIncompleteBlock) {\n            result.push(line);\n          }\n        }\n\n        markdown = result.join('\\n');\n      }\n    }\n\n    // Check if we need to autoload libraries based on content\n    if (this.autoloadConfig && this.autoloadConfig.enabled) {\n      await this._checkAndAutoloadLibraries(markdown);\n    }\n\n    let html;\n    try {\n      html = this.md.render(markdown);\n    } catch (error) {\n      if (!this._shouldSuppressErrors('markdown')) {\n        console.error('Markdown rendering error:', error);\n      }\n      html = this._renderErrorPlaceholder('markdown');\n    }\n    let processedHtml = html;\n    if (this.linefeedViewEnabled) {\n      // Only process paragraphs, not code blocks or pre\n      processedHtml = processedHtml.replace(/(<p>)([\\s\\S]*?)(<\\/p>)/g, (match, open, content, close) => {\n        // Split by <br> or by line\n        const lines = content.split(/<br\\s*\\/?>(?![^<]*<\\/code>)/g);\n        const processedLines = lines.map(line => {\n          // If line is empty or already ends with <br>, skip\n          if (/\\s*<\\/?.*?>\\s*/.test(line) || line.trim() === '') return line;\n          // If line already ends with <br>, skip\n          if (/<br\\s*\\/?>(\\s*)$/.test(line)) return line;\n          return line + '<br>';\n        });\n        return open + processedLines.join('') + close;\n      });\n    }\n    // Replace incomplete block markers with visual indicators\n    if (this.options.streamingMode || (this.options.errorHandling && this.options.errorHandling.showIncompleteBlockPlaceholder)) {\n      processedHtml = processedHtml.replace(/<div class=\"incomplete-block-marker\" data-type=\"(\\w+)\">INCOMPLETE:(\\w+)<\\/div>/g, (match, type1, type2) => {\n        return this._renderIncompletePlaceholder(type1);\n      });\n    }\n\n    this.output.innerHTML = \"<div contenteditable='true'>\" + processedHtml + \"</div>\";\n\n    // Convert all images to data URLs immediately after rendering\n    const contentDiv = this.output.querySelector('div[contenteditable=\"true\"]');\n    const images = contentDiv.querySelectorAll('img');\n\n    // render images to data urls\n    for (const img of images) {\n      try {\n        // Store original src if we need to preserve it\n        const originalSrc = img.src;\n        \n        // Only convert to data URL if not preserving tags\n        if (!this.options.preserveImageTags) {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          // Create new image and wait for it to load\n          const tempImg = new Image();\n          tempImg.crossOrigin = 'anonymous';\n\n          await new Promise((resolve, reject) => {\n            tempImg.onload = () => {\n              // Set canvas size to match image\n              canvas.width = tempImg.naturalWidth;\n              canvas.height = tempImg.naturalHeight;\n\n              // Draw image to canvas\n              ctx.drawImage(tempImg, 0, 0);\n\n              // Convert to data URL\n              const dataUrl = canvas.toDataURL('image/png', 1.0);\n\n              // Update original image\n              img.src = dataUrl;\n              resolve();\n            };\n            tempImg.onerror = reject;\n            tempImg.src = originalSrc;\n          });\n        }\n      } catch (error) {\n        console.error('Failed to convert image:', error);\n      }\n    }\n\n    // Initialize mermaid diagrams after all images are processed\n    if (typeof window !== 'undefined' && window.mermaid) {\n      const mermaidElements = this.output.querySelectorAll('.mermaid');\n\n      for (const element of mermaidElements) {\n        const originalContent = element.textContent || element.innerHTML;\n\n        // In streaming mode or with error suppression, validate the mermaid syntax before rendering\n        if (this.options.streamingMode || this._shouldSuppressErrors('mermaid')) {\n          // Create a flag to track if an error occurred\n          let hasError = false;\n\n          // Temporarily override console.error to catch mermaid errors\n          const originalConsoleError = console.error;\n          const originalConsoleWarn = console.warn;\n\n          if (this._shouldSuppressErrors('mermaid')) {\n            console.error = () => {};\n            console.warn = () => {};\n          }\n\n          try {\n            // Try to parse using mermaid.parse if available (newer versions)\n            if (window.mermaid.parse) {\n              try {\n                window.mermaid.parse(originalContent);\n              } catch (parseError) {\n                hasError = true;\n              }\n            }\n\n            // If no parse error or parse not available, try to render\n            if (!hasError) {\n              // Store current innerHTML to check if it changes\n              const beforeHtml = element.innerHTML;\n\n              // Try to init the mermaid diagram\n              window.mermaid.init(undefined, element);\n\n              // Check if mermaid actually rendered something\n              // If it failed silently, the content won't change\n              if (element.innerHTML === beforeHtml || element.querySelector('.error')) {\n                hasError = true;\n              }\n            }\n\n            if (hasError) {\n              // Rendering failed - show error placeholder\n              element.innerHTML = this._renderErrorPlaceholder('mermaid');\n              element.classList.remove('mermaid');\n              element.classList.add('render-error');\n            }\n          } catch (error) {\n            // Error occurred - show error placeholder\n            if (!this._shouldSuppressErrors('mermaid')) {\n              originalConsoleError('Mermaid rendering error:', error);\n            }\n            element.innerHTML = this._renderErrorPlaceholder('mermaid');\n            element.classList.remove('mermaid');\n            element.classList.add('render-error');\n          } finally {\n            // Restore original console methods\n            console.error = originalConsoleError;\n            console.warn = originalConsoleWarn;\n          }\n        } else {\n          // Normal mode - use regular init and let errors show\n          try {\n            window.mermaid.init(undefined, element);\n          } catch (error) {\n            console.error('Mermaid rendering error:', error);\n          }\n        }\n      }\n    }\n\n    // Initialize GeoJSON/TopoJSON maps after content is rendered\n    this.initializeGeoRenderers();\n\n    // Initialize STL 3D models after content is rendered\n    this.initializeSTLRenderers();\n    \n    // Ensure MathJax is loaded and typeset all math blocks\n    await this.ensureMathJaxAndTypeset();\n\n    // Emit markdown:rendered event\n    this.events.emit('markdown:rendered', markdown, html);\n  }\n\n  /**\n   * Ensures MathJax is loaded and typesets all math blocks in the output.\n   * @private\n   */\n  async ensureMathJaxAndTypeset() {\n    const mathBlocks = this.output.querySelectorAll('div.math-display');\n    if (!mathBlocks.length) return;\n\n    // Try autoloading first if configured\n    if (this.autoloadConfig && this.autoloadConfig.enabled) {\n      const config = this.autoloadConfig.libraries.mathjax;\n      if (config && config.strategy === 'ondemand') {\n        const loaded = await this._autoloadLibrary('mathjax');\n        if (loaded && typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n          try {\n            return await MathJax.typesetPromise(Array.from(mathBlocks));\n          } catch (error) {\n            if (!this._shouldSuppressErrors('math')) {\n              console.error('MathJax rendering error:', error);\n            }\n            // Mark failed math blocks\n            mathBlocks.forEach(block => {\n              block.innerHTML = this._renderErrorPlaceholder('math');\n              block.classList.add('render-error');\n              block.classList.remove('math-display');\n            });\n            return;\n          }\n        }\n      }\n    }\n\n    const typesetAll = async () => {\n      if (typeof MathJax !== 'undefined' && MathJax.typesetPromise) {\n        try {\n          return await MathJax.typesetPromise(Array.from(mathBlocks));\n        } catch (error) {\n          if (!this._shouldSuppressErrors('math')) {\n            console.error('MathJax rendering error:', error);\n          }\n          // Mark failed math blocks\n          mathBlocks.forEach(block => {\n            block.innerHTML = this._renderErrorPlaceholder('math');\n            block.classList.add('render-error');\n            block.classList.remove('math-display');\n          });\n        }\n      }\n    }\n    if (typeof MathJax === 'undefined') {\n      if (window.mathJaxLoading) return;\n      window.mathJaxLoading = true;\n      return new Promise((resolve, reject) => {\n        // Configure MathJax before loading script to ensure SVG output\n        if (!window.MathJax) {\n          window.MathJax = {\n            loader: { load: ['input/tex', 'output/svg'] },\n            tex: { \n              packages: { '[+]': ['ams'] },\n              inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n              displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n              processEscapes: true,\n              processEnvironments: true\n            },\n            options: { \n              renderActions: { addMenu: [] },\n              ignoreHtmlClass: 'tex2jax_ignore',\n              processHtmlClass: 'tex2jax_process'\n            },\n            svg: { fontCache: 'none' },\n            startup: { typeset: false }\n          };\n        }\n        \n        const script = document.createElement('script');\n        script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js';\n        script.async = true;\n        script.onload = () => {\n          window.mathJaxLoading = false;\n          typesetAll()?.then(resolve).catch(reject);\n        };\n        script.onerror = () => {\n          window.mathJaxLoading = false;\n          reject(new Error('Failed to load MathJax'));\n        };\n        document.head.appendChild(script);\n      });\n    } else {\n      return typesetAll();\n    }\n  }\n\n  /**\n   * Initializes GeoJSON and TopoJSON map renderers.\n   * @private\n   */\n  async initializeGeoRenderers() {\n    // Skip if output element not yet available (during initial setup)\n    if (!this.output) return;\n\n    // Check if we have geo content\n    const geojsonContainers = this.output.querySelectorAll('.geojson-container');\n    const topojsonContainers = this.output.querySelectorAll('.topojson-container');\n\n    if (geojsonContainers.length === 0 && topojsonContainers.length === 0) return;\n\n    // Autoload Leaflet if needed and configured\n    if (this.autoloadConfig && this.autoloadConfig.enabled) {\n      const config = this.autoloadConfig.libraries.leaflet;\n      if (config && config.strategy === 'ondemand') {\n        const loaded = await this._autoloadLibrary('leaflet');\n        if (!loaded) return; // Can't render without Leaflet\n      }\n    }\n\n    // Check if Leaflet is available\n    if (typeof window === 'undefined' || !window.L) return;\n\n    // Initialize GeoJSON containers\n    geojsonContainers.forEach(container => {\n      if (!container.dataset.initialized) {\n        this.renderGeoJSON(container);\n      }\n    });\n\n    // Initialize TopoJSON containers\n    topojsonContainers.forEach(container => {\n      if (!container.dataset.initialized) {\n        this.renderTopoJSON(container);\n      }\n    });\n  }\n\n  /**\n   * Initializes STL 3D model renderers.\n   * @private\n   */\n  async initializeSTLRenderers() {\n    // Skip if output element not yet available (during initial setup)\n    if (!this.output) return;\n\n    const stlContainers = this.output.querySelectorAll('.stl-container');\n    if (stlContainers.length === 0) return;\n\n    // Autoload Three.js if needed and configured\n    if (this.autoloadConfig && this.autoloadConfig.enabled) {\n      const config = this.autoloadConfig.libraries.three;\n      if (config && config.strategy === 'ondemand') {\n        const loaded = await this._autoloadLibrary('three');\n        if (!loaded) return; // Can't render without Three.js\n      }\n    }\n\n    // Check if Three.js is available\n    if (typeof window === 'undefined' || !window.THREE) return;\n    stlContainers.forEach(container => {\n      if (!container.dataset.initialized) {\n        this.renderSTL(container);\n      }\n    });\n  }\n\n  /**\n   * Renders a GeoJSON map in the given container.\n   * @param {HTMLElement} container - The container element\n   * @private\n   */\n  renderGeoJSON(container) {\n    try {\n      const originalData = container.textContent;\n      \n      // Store original data for HtmlToMarkdown conversion FIRST\n      container.setAttribute('data-original-source', originalData);\n      \n      if (typeof window.L === 'undefined') {\n        // No console warning - placeholder message is sufficient\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">Leaflet library not loaded</p>';\n        return;\n      }\n\n      const jsonData = JSON.parse(originalData);\n      \n      // Clear container and set up for map\n      container.innerHTML = '';\n      container.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px;';\n      \n      // Create unique ID for this map\n      const mapId = 'map-' + Math.random().toString(36).substring(2, 15);\n      container.id = mapId;\n      \n      // Initialize Leaflet map\n      const map = window.L.map(mapId).setView([0, 0], 2);\n      \n      // Store map reference for copy functionality\n      window[mapId + '_map'] = map;\n      \n      // Add tile layer\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      \n      // Add GeoJSON layer\n      const geojsonLayer = window.L.geoJSON(jsonData).addTo(map);\n      \n      // Fit map to data bounds\n      if (geojsonLayer.getBounds().isValid()) {\n        map.fitBounds(geojsonLayer.getBounds(), { padding: [20, 20] });\n      }\n      \n      container.dataset.initialized = 'true';\n    } catch (error) {\n      console.error('Error rendering GeoJSON:', error);\n      container.innerHTML = '<p style=\"color: red; text-align: center; padding: 20px;\">Error rendering GeoJSON map</p>';\n      container.dataset.initialized = 'error';\n    }\n  }\n\n  /**\n   * Renders a TopoJSON map in the given container.\n   * @param {HTMLElement} container - The container element\n   * @private\n   */\n  renderTopoJSON(container) {\n    try {\n      const originalData = container.textContent;\n      \n      // Store original data for HtmlToMarkdown conversion FIRST\n      container.setAttribute('data-original-source', originalData);\n      \n      if (typeof window.L === 'undefined') {\n        // No console warning - placeholder message is sufficient\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">Leaflet library not loaded</p>';\n        return;\n      }\n\n      if (typeof topojson === 'undefined') {\n        // No console warning - placeholder message is sufficient\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">TopoJSON client library not loaded</p>';\n        return;\n      }\n\n      const topoData = JSON.parse(originalData);\n      \n      // Convert TopoJSON to GeoJSON\n      const geojsonData = topojson.feature(topoData, Object.keys(topoData.objects)[0]);\n      \n      // Clear container and set up for map\n      container.innerHTML = '';\n      container.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px;';\n      \n      // Create unique ID for this map\n      const mapId = 'map-' + Math.random().toString(36).substring(2, 15);\n      container.id = mapId;\n      \n      // Initialize Leaflet map\n      const map = window.L.map(mapId).setView([0, 0], 2);\n      \n      // Add tile layer\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n      \n      // Add GeoJSON layer\n      const geojsonLayer = L.geoJSON(geojsonData).addTo(map);\n      \n      // Fit map to data bounds\n      if (geojsonLayer.getBounds().isValid()) {\n        map.fitBounds(geojsonLayer.getBounds(), { padding: [20, 20] });\n      }\n      \n      container.dataset.initialized = 'true';\n    } catch (error) {\n      console.error('Error rendering TopoJSON:', error);\n      container.innerHTML = '<p style=\"color: red; text-align: center; padding: 20px;\">Error rendering TopoJSON map</p>';\n      container.dataset.initialized = 'error';\n    }\n  }\n\n  /**\n   * Renders an STL 3D model in the given container.\n   * @param {HTMLElement} container - The container element\n   * @private\n   */\n  renderSTL(container) {\n    try {\n      const originalData = container.textContent;\n      \n      // Store original data for HtmlToMarkdown conversion FIRST\n      container.setAttribute('data-original-source', originalData);\n      \n      if (typeof THREE === 'undefined') {\n        // No console warning - placeholder message is sufficient\n        container.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">Three.js library not loaded</p>';\n        return;\n      }\n\n      const stlData = originalData;\n      \n      // Clear container and set up for 3D rendering\n      container.innerHTML = '';\n      container.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px; position: relative;';\n      \n      // Create Three.js scene\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera(75, container.offsetWidth / container.offsetHeight, 0.1, 1000);\n      const renderer = new THREE.WebGLRenderer({ antialias: true });\n      \n      renderer.setSize(container.offsetWidth, container.offsetHeight);\n      renderer.setClearColor(0xf0f0f0);\n      container.appendChild(renderer.domElement);\n      \n      // Store references for copy functionality\n      container._threeScene = scene;\n      container._threeCamera = camera;\n      container._threeRenderer = renderer;\n      \n      // Parse STL data (basic ASCII STL parser)\n      const geometry = this.parseSTL(stlData);\n      const material = new THREE.MeshLambertMaterial({ color: 0x606060 });\n      const mesh = new THREE.Mesh(geometry, material);\n      \n      scene.add(mesh);\n      \n      // Add lighting\n      const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n      scene.add(ambientLight);\n      \n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n      directionalLight.position.set(1, 1, 1).normalize();\n      scene.add(directionalLight);\n      \n      // Position camera\n      const box = new THREE.Box3().setFromObject(mesh);\n      const center = box.getCenter(new THREE.Vector3());\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      \n      camera.position.set(center.x + maxDim, center.y + maxDim, center.z + maxDim);\n      camera.lookAt(center);\n      \n      // Animation loop\n      const animate = () => {\n        requestAnimationFrame(animate);\n        mesh.rotation.y += 0.01;\n        renderer.render(scene, camera);\n      };\n      animate();\n      \n      container.dataset.initialized = 'true';\n    } catch (error) {\n      console.error('Error rendering STL:', error);\n      container.innerHTML = '<p style=\"color: red; text-align: center; padding: 20px;\">Error rendering STL model</p>';\n      container.dataset.initialized = 'error';\n    }\n  }\n\n  /**\n   * Basic ASCII STL parser.\n   * @param {string} stlData - The STL file content\n   * @returns {THREE.BufferGeometry} - The parsed geometry\n   * @private\n   */\n  parseSTL(stlData) {\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n    const normals = [];\n    \n    const lines = stlData.split('\\n');\n    let currentNormal = null;\n    let vertexCount = 0;\n    \n    for (let line of lines) {\n      line = line.trim();\n      \n      if (line.startsWith('facet normal')) {\n        const parts = line.split(/\\s+/);\n        currentNormal = [parseFloat(parts[2]), parseFloat(parts[3]), parseFloat(parts[4])];\n      } else if (line.startsWith('vertex')) {\n        const parts = line.split(/\\s+/);\n        vertices.push(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3]));\n        if (currentNormal) {\n          normals.push(currentNormal[0], currentNormal[1], currentNormal[2]);\n        }\n        vertexCount++;\n      }\n    }\n    \n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('normal', new THREE.Float32BufferAttribute(normals, 3));\n    \n    return geometry;\n  }\n\n  /**\n   * Converts HTML content to Markdown format using our HtmlToMarkdown converter.\n   * \n   * @param {string} html - The HTML content to convert to Markdown\n   * @param {Object} options - Additional options for conversion\n   * @returns {string} The converted Markdown content\n   */\n  htmlToMarkdown(html, options = {}) {\n    // Use our HtmlToMarkdown converter which uses Turndown internally\n    // with SquibView-specific customizations\n    if (!this._htmlToMarkdownConverter) {\n      // Return simple conversion if converter isn't loaded yet\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      return tempDiv.textContent;\n    }\n    \n    // Use the converter with the original source as context to preserve special blocks\n    return this._htmlToMarkdownConverter.convert(html, {\n      originalSource: options.originalSource || this.input.value\n    });\n  }\n\n  /**\n   * Converts a table in the DOM to CSV format\n   * \n   * @param {string} html - The HTML content containing a table\n   * @param {string} [delimiter=','] - The delimiter to use\n   * @returns {string} The CSV content\n   */\n  tableToCSV(html, delimiter = ',') {\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html;\n    \n    const table = tempDiv.querySelector('table');\n    if (!table) {\n      return '';\n    }\n    \n    const rows = Array.from(table.querySelectorAll('tr'));\n    const csvRows = rows.map(row => {\n      const cells = Array.from(row.querySelectorAll('th, td'));\n      return cells.map(cell => {\n        // Escape quotes and wrap in quotes if needed\n        const text = cell.textContent.trim();\n        if (text.includes(delimiter) || text.includes('\"') || text.includes('\\n')) {\n          return `\"${text.replace(/\"/g, '\"\"')}\"`;\n        }\n        return text;\n      }).join(delimiter);\n    });\n    \n    return csvRows.join('\\n');\n  }\n\n  /**\n   * Removes all horizontal rules (---) from the Markdown content.\n   * Only works when the current content type is Markdown.\n   */\n  markdownRemoveAllHR() {\n    if (this.inputContentType === 'md') {\n      const markdown = this.getMarkdownSource();\n      const newMarkdown = markdown.replace(/---/g, '');\n      this.setContent(newMarkdown, this.inputContentType);\n    }\n  }\n  \n  /**\n   * Adjusts the heading levels in Markdown text by a specified offset.\n   * \n   * @param {string} markdown - The Markdown text to process\n   * @param {number} offset - The amount to adjust heading levels by (positive to increase, negative to decrease)\n   * @returns {string} - The Markdown text with adjusted heading levels\n   */\n  markdownAdjustHeadings(markdown, offset) {\n    // Early exit if offset is 0 or invalid input\n    if (offset === 0 || typeof markdown !== 'string') {\n      return markdown;\n    }\n\n    // Split the input into lines\n    const lines = markdown.split('\\n');\n\n    // Process each line\n    const modifiedLines = lines.map(line => {\n      // Regex to match heading lines: starts with 1-6 hash symbols followed by a space\n      const headingMatch = line.match(/^(#{1,6})\\s/);\n\n      if (!headingMatch) {\n        // Not a heading, return unchanged\n        return line;\n      }\n\n      const currentHeadingLevel = headingMatch[1].length;\n      // Calculate new heading level with bounds checking (min 1, max 6)\n      const newHeadingLevel = Math.min(Math.max(currentHeadingLevel + offset, 1), 6);\n\n      // Replace the heading prefix with the new level\n      return '#'.repeat(newHeadingLevel) + line.substring(currentHeadingLevel);\n    });\n\n    // Join the lines back together\n    return modifiedLines.join('\\n');\n  }\n  \n  /**\n   * Adjusts heading levels in the current Markdown content.\n   * \n   * @param {number} offset - The amount to adjust heading levels by (positive to increase, negative to decrease)\n   */\n  markdownEditorAdjustHeadings(offset) {\n    const markdown = this.getMarkdownSource();\n    const newMarkdown = this.markdownAdjustHeadings(markdown, offset);\n    this.setContent(newMarkdown, this.inputContentType);\n  }\n\n  /**\n   * Sets the current view mode of the editor.\n   * \n   * @param {string} view - The view mode to set: 'src' (source only), 'html' (rendered only), or 'split' (both)\n   */\n  setView(view) {\n    this.currentView = view;\n    \n    // Set data-view attribute on editor for CSS styling\n    this.editor.setAttribute('data-view', view);\n\n    this.controls.querySelectorAll('button[data-view]').forEach(btn => {\n      btn.classList.toggle('active', btn.dataset.view === view);\n    });\n\n    const copyMDButton = this.controls.querySelector('.copy-src-button');\n    const copyHTMLButton = this.controls.querySelector('.copy-html-button');\n\n    if (view === 'src') {\n      if (this.sourcePanel) {\n        this.sourcePanel.classList.remove('squibview-hidden');\n        this.sourcePanel.style.width = '100%';\n      } else {\n        this.input.classList.remove('squibview-hidden');\n        this.input.style.width = '100%';\n      }\n      this.output.classList.add('squibview-hidden');\n      copyMDButton.classList.remove('squibview-hidden');\n      copyHTMLButton.classList.add('squibview-hidden');\n    } else if (view === 'html') {\n      if (this.sourcePanel) {\n        this.sourcePanel.classList.add('squibview-hidden');\n      } else {\n        this.input.classList.add('squibview-hidden');\n      }\n      this.output.classList.remove('squibview-hidden');\n      this.output.style.width = '100%';\n      copyMDButton.classList.add('squibview-hidden');\n      copyHTMLButton.classList.remove('squibview-hidden');\n    } else { // view == 'split'\n      if (this.sourcePanel) {\n        this.sourcePanel.classList.remove('squibview-hidden');\n        this.sourcePanel.style.width = '50%';\n      } else {\n        this.input.classList.remove('squibview-hidden');\n        this.input.style.width = '50%';\n      }\n      this.output.classList.remove('squibview-hidden');\n      this.output.style.width = '50%';\n      copyMDButton.classList.remove('squibview-hidden');\n      copyHTMLButton.classList.remove('squibview-hidden');\n    }\n\n    this.adjustLayout();\n    \n    // Emit view:change event\n    this.events.emit('view:change', view);\n  }\n\n  /**\n   * Renders HTML content in an iframe within the output div.\n   * \n   * @param {string} src - The HTML source content to render\n   */\n  renderHTML(src) {\n    const htmlContent = src;\n    const outputDiv = this.output;\n    this.insertContentInIframe(outputDiv, htmlContent);\n    \n    // Emit html:rendered event\n    this.events.emit('html:rendered', htmlContent);\n  }\n\n  /**\n   * Creates an iframe that fills the entire parent element and injects provided HTML content.\n   * @param {HTMLElement} parentElement - The parent element to contain the iframe.\n   * @param {string} htmlContent - The HTML content to inject into the iframe.\n   */\n  insertContentInIframe(parentElement, htmlContent) {\n    // Create an iframe element\n    const iframe = document.createElement('iframe');\n\n    // Style the iframe to fill the parent completely\n    iframe.style.width = '100%';\n    iframe.style.height = '100%';\n    iframe.style.border = 'none';\n    iframe.style.display = 'block';\n\n    // Append the iframe to the parent element\n    parentElement.innerHTML = '';\n    parentElement.appendChild(iframe);\n\n    // Access the iframe's document and write the HTML content into it\n    const iframeDoc = iframe.contentWindow.document;\n    iframeDoc.open();\n    iframeDoc.write(htmlContent);\n    iframeDoc.close();\n    this.output_iframe = iframe;\n    this.output_ifraome_content = htmlContent;\n  }\n\n  /**\n   * Renders the current content based on its type using the registered renderer.\n   */\n  renderOutput() {\n    const renderer = this.renderers[this.inputContentType];\n    if (renderer && renderer.render) {\n      renderer.render(this.getContent());\n      this.events.emit('content:rendered', this.inputContentType);\n    } else {\n      console.warn(`No renderer for content type: ${this.inputContentType}`);\n      // Fall back to Markdown rendering\n      this.renderMarkdown();\n    }\n  }\n\n  /**\n   * Copies the source content to the clipboard.\n   * Attempts to use the modern Clipboard API with fallbacks for older browsers.\n   * \n   * @returns {Promise<void>} A promise that resolves when copying is complete\n   */\n  async copySource() {\n    const copyButton = this.controls.querySelector('.copy-src-button');\n    copyButton.textContent = 'Copying...';\n\n    try {\n      const markdownText = this.getMarkdownSource();\n\n      try {\n        await navigator.clipboard.writeText(markdownText);\n      } catch (modernErr) {\n        const textarea = document.createElement('textarea');\n        textarea.value = markdownText;\n        textarea.style.position = 'fixed';\n        textarea.style.opacity = '0';\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.body.removeChild(textarea);\n      }\n\n      copyButton.textContent = 'Copied!';\n    } catch (err) {\n      console.error('Copy Markdown failed:', err);\n      copyButton.textContent = 'Copy failed';\n    }\n\n    setTimeout(() => {\n      copyButton.textContent = 'Copy Source';\n    }, 2000);\n  }\n\n  /**\n   * Gets the current markdown source from the input textarea.\n   * \n   * @returns {string} The markdown source\n   */\n  getMarkdownSource() {\n    return this.input.value;\n  }\n\n  /**\n   * Gets the HTML source from the rendered output.\n   * \n   * @returns {string} The HTML content\n   */\n  getHTMLSource() {\n    const contentEditable = this.output.querySelector('div[contenteditable=\"true\"]');\n    if (contentEditable) {\n      return contentEditable.innerHTML;\n    }\n    \n    // If we have an iframe (HTML view)\n    if (this.output_iframe) {\n      return this.output_ifraome_content;\n    }\n    \n    return '';\n  }\n\n  /**\n   * Gets source diff as a programmatic object\n   * \n   * @param {Object} options - Diff options\n   * @param {number} options.fromIndex - Starting revision index (defaults to current - 1)\n   * @param {number} options.toIndex - Ending revision index (defaults to current)\n   * @returns {Object} Diff data object with metadata and line diffs\n   */\n  getSourceDiff(options = {}) {\n    const { fromIndex = null, toIndex = null } = options;\n    \n    // Get metadata about the revisions being compared\n    const currentIndex = this.revisionManager.getCurrentIndex();\n    const actualFromIndex = fromIndex === null ? Math.max(-1, currentIndex - 1) : fromIndex;\n    const actualToIndex = toIndex === null ? currentIndex : toIndex;\n    \n    // Get the line diff\n    const lineDiff = this.revisionManager.computeLineDiff(actualFromIndex, actualToIndex);\n    \n    // Build the diff object\n    const diffData = {\n      fromIndex: actualFromIndex,\n      toIndex: actualToIndex,\n      lineDiff: lineDiff,\n      stats: this.revisionManager.getDiffStats(actualFromIndex, actualToIndex)\n    };\n    \n    // Add revision info if indices are valid\n    try {\n      diffData.fromRevision = this.revisionManager.getRevisionInfo(actualFromIndex);\n      diffData.toRevision = this.revisionManager.getRevisionInfo(actualToIndex);\n    } catch (e) {\n      // Invalid indices, return partial data\n      diffData.error = e.message;\n    }\n    \n    // Emit diff computed event\n    this.events.emit('diff:computed', {\n      fromIndex: diffData.fromIndex,\n      toIndex: diffData.toIndex,\n      stats: diffData.stats,\n      hasChanges: diffData.stats.totalChanges > 0\n    });\n    \n    return diffData;\n  }\n\n  /**\n   * Gets source diff as display-ready HTML\n   * \n   * @param {Object} options - Diff and styling options\n   * @param {number} options.fromIndex - Starting revision index (defaults to current - 1)\n   * @param {number} options.toIndex - Ending revision index (defaults to current)\n   * @param {boolean} options.showLineNumbers - Whether to show line numbers (default: true)\n   * @param {Object} options.cssClasses - Custom CSS classes for styling\n   * @returns {string} HTML string\n   */\n  getSourceDiffHTML(options = {}) {\n    const {\n      fromIndex = null,\n      toIndex = null,\n      showLineNumbers = true,\n      cssClasses = {}\n    } = options;\n    \n    // Get the diff data\n    const diffData = this.getSourceDiff({ fromIndex, toIndex });\n    \n    // Default CSS classes\n    const classes = {\n      container: cssClasses.container || 'squibview-diff',\n      line: cssClasses.line || 'diff-line',\n      added: cssClasses.added || 'diff-added',\n      removed: cssClasses.removed || 'diff-removed',\n      unchanged: cssClasses.unchanged || 'diff-unchanged',\n      lineNumber: cssClasses.lineNumber || 'diff-line-number',\n      content: cssClasses.content || 'diff-content'\n    };\n    \n    // Build HTML\n    let html = `<div class=\"${classes.container}\" contenteditable=\"false\">`;\n    \n    // Add header with revision info and stats\n    html += `<div class=\"diff-header\">`;\n    html += `<div>Comparing revision ${diffData.fromIndex} to ${diffData.toIndex}</div>`;\n    \n    // Add statistics\n    if (diffData.stats && diffData.stats.totalChanges > 0) {\n      html += `<div class=\"diff-stats\">`;\n      if (diffData.stats.additions > 0) {\n        html += `<span class=\"stat additions\">+${diffData.stats.additions} additions</span>`;\n      }\n      if (diffData.stats.deletions > 0) {\n        html += `<span class=\"stat deletions\">-${diffData.stats.deletions} deletions</span>`;\n      }\n      if (diffData.stats.modifications > 0) {\n        html += `<span class=\"stat modifications\">~${diffData.stats.modifications} modifications</span>`;\n      }\n      html += `<span class=\"stat\">${diffData.stats.totalChanges} total changes</span>`;\n      html += `</div>`;\n    } else {\n      html += `<div class=\"diff-stats\"><span class=\"stat\">No changes</span></div>`;\n    }\n    html += `</div>`;\n    \n    // Add diff content\n    html += `<div class=\"diff-content\">`;\n    \n    for (const line of diffData.lineDiff) {\n      const lineClass = `${classes.line} ${classes[line.type]}`;\n      html += `<div class=\"${lineClass}\">`;\n      \n      if (showLineNumbers) {\n        const displayNum = line.type === 'removed' ? (line.oldLineNum || '') : (line.newLineNum || '');\n        html += `<span class=\"${classes.lineNumber}\">${displayNum}</span>`;\n      }\n      \n      // Escape HTML in content\n      const escapedContent = this._escapeHtml(line.content);\n      html += `<span class=\"${classes.content}\">${escapedContent}</span>`;\n      \n      html += `</div>`;\n    }\n    \n    html += `</div>`; // diff-content\n    html += `</div>`; // container\n    \n    // Emit diff displayed event\n    this.events.emit('diff:displayed', {\n      fromIndex: diffData.fromIndex,\n      toIndex: diffData.toIndex,\n      stats: diffData.stats,\n      htmlLength: html.length,\n      showLineNumbers: showLineNumbers\n    });\n    \n    return html;\n  }\n\n  /**\n   * Gets source diff as inline HTML with additions and deletions marked within the text\n   * \n   * @param {Object} options - Diff and styling options\n   * @param {number} options.fromIndex - Starting revision index (defaults to current - 1)\n   * @param {number} options.toIndex - Ending revision index (defaults to current)\n   * @param {Object} options.cssClasses - Custom CSS classes for styling\n   * @returns {string} HTML string with inline diff markup\n   */\n  getSourceDiffInline(options = {}) {\n    const {\n      fromIndex = null,\n      toIndex = null,\n      cssClasses = {}\n    } = options;\n    \n    // Get the raw diff data\n    const diffData = this.getSourceDiff({ fromIndex, toIndex });\n    \n    // Default CSS classes for inline diff\n    const classes = {\n      container: cssClasses.container || 'squibview-diff-inline',\n      added: cssClasses.added || 'diff-inline-added',\n      removed: cssClasses.removed || 'diff-inline-removed'\n    };\n    \n    // Get the actual content from the revisions\n    const currentIndex = this.revisionManager.getCurrentIndex();\n    const actualFromIndex = fromIndex === null ? Math.max(-1, currentIndex - 1) : fromIndex;\n    const actualToIndex = toIndex === null ? currentIndex : toIndex;\n    \n    let fromContent, toContent;\n    try {\n      fromContent = this.revisionManager.getContentAtRevision(actualFromIndex).content;\n      toContent = this.revisionManager.getContentAtRevision(actualToIndex).content;\n    } catch (e) {\n      return `<div class=\"${classes.container}\"><p>Error: ${e.message}</p></div>`;\n    }\n    \n    // Get character-level diff\n    const diff = this.revisionManager.diffEngine.diff_main(fromContent, toContent);\n    this.revisionManager.diffEngine.diff_cleanupSemantic(diff);\n    \n    // Convert diff to inline HTML\n    let html = `<div class=\"${classes.container}\" contenteditable=\"false\">`;\n    \n    // Add header\n    html += `<div class=\"diff-inline-header\">`;\n    html += `<div>Comparing revision ${actualFromIndex} to ${actualToIndex}</div>`;\n    if (diffData.stats && diffData.stats.totalChanges > 0) {\n      html += `<div class=\"diff-inline-stats\">`;\n      html += `<span style=\"color: #007bff;\">+${diffData.stats.additions}</span> `;\n      html += `<span style=\"color: #dc3545;\">-${diffData.stats.deletions}</span>`;\n      if (diffData.stats.modifications > 0) {\n        html += ` <span style=\"color: #ffc107;\">~${diffData.stats.modifications}</span>`;\n      }\n      html += `</div>`;\n    }\n    html += `</div>`;\n    \n    // Add content with inline diffs\n    html += `<div class=\"diff-inline-content\">`;\n    \n    for (const [op, text] of diff) {\n      const escapedText = this._escapeHtml(text);\n      if (op === 1) { // Addition\n        html += `<span class=\"${classes.added}\">${escapedText}</span>`;\n      } else if (op === -1) { // Deletion\n        html += `<span class=\"${classes.removed}\">${escapedText}</span>`;\n      } else { // Unchanged\n        html += escapedText;\n      }\n    }\n    \n    html += `</div></div>`;\n    \n    // Emit diff displayed event\n    this.events.emit('diff:displayed', {\n      fromIndex: actualFromIndex,\n      toIndex: actualToIndex,\n      stats: diffData.stats,\n      htmlLength: html.length,\n      type: 'inline'\n    });\n    \n    return html;\n  }\n\n  /**\n   * Escapes HTML special characters\n   * @private\n   */\n  _escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n  \n  /**\n   * Registers a callback function to be called when text is selected\n   * \n   * @param {Function} callback - Function to call when text is selected\n   * @returns {Function} Unsubscribe function to remove the callback\n   */\n  onTextSelected(callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Callback must be a function');\n    }\n    this.events.on('text:selected', callback);\n    \n    // Return unsubscribe function\n    return () => {\n      this.events.off('text:selected', callback);\n    };\n  }\n  \n  /**\n   * Replaces the currently selected text in either panel\n   * \n   * @param {string} replacement - The text to replace the selection with\n   * @param {Object} selectionData - The selection data from the text:selected event\n   * @returns {boolean} Whether the replacement was successful\n   */\n  replaceSelectedText(replacement, selectionData) {\n    if (!selectionData) {\n      return false;\n    }\n    \n    if (selectionData.panel === 'source') {\n      // Replace in source panel (textarea)\n      const { start, end } = selectionData.range;\n      const currentContent = this.input.value;\n      const newContent = currentContent.substring(0, start) + \n                         replacement + \n                         currentContent.substring(end);\n      \n      // Update content\n      this.setContent(newContent, this.inputContentType);\n      \n      // Return cursor focus to textarea\n      this.input.focus();\n      this.input.setSelectionRange(start + replacement.length, start + replacement.length);\n      \n      return true;\n    } else if (selectionData.panel === 'rendered') {\n      // Replace in rendered panel (contenteditable div)\n      const range = selectionData.range;\n      range.deleteContents();\n      \n      // Create a text node with the replacement text\n      const textNode = document.createTextNode(replacement);\n      range.insertNode(textNode);\n      \n      // Set the cursor at the end of the replaced text\n      range.setStartAfter(textNode);\n      range.setEndAfter(textNode);\n      \n      // Collapse the range to a cursor position\n      range.collapse(true);\n      \n      // Select the range\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      \n      // Update the source content to match the HTML changes\n      const editableContent = this.output.querySelector('[contenteditable=\"true\"]');\n      if (editableContent) {\n        const renderedContent = editableContent.innerHTML;\n        const renderer = this.renderers[this.inputContentType];\n        \n        if (renderer && renderer.outputToSource) {\n          const originalSource = this.input.value;\n          let newSource = renderer.outputToSource(renderedContent, {\n            originalSource: originalSource\n          });\n          \n          // Update source content\n          this.input.value = newSource;\n          \n          // Add to revision history\n          this.revisionManager.addRevision(newSource, this.inputContentType);\n          \n          // Emit content change event\n          this.events.emit('content:change', newSource, this.inputContentType);\n        }\n      }\n      \n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Sets the contenteditable attribute for the selected text\n   * \n   * @param {boolean} editable - Whether the selection should be editable\n   * @param {Object} selectionData - The selection data from the text:selected event\n   * @returns {boolean} Whether the operation was successful\n   */\n  setSelectionEditable(editable, selectionData) {\n    if (!selectionData || selectionData.panel !== 'rendered') {\n      return false;\n    }\n    \n    const range = selectionData.range;\n    \n    if (range) {\n      // Create a wrapper span to control editability\n      const span = document.createElement('span');\n      span.contentEditable = editable.toString(); // 'true' or 'false'\n      \n      // Add a class to visually indicate locked content\n      if (!editable) {\n        span.className = 'squibview-locked-content';\n        span.title = 'This content is locked (not editable)';\n        // Add a small lock icon using CSS ::before\n        span.style.position = 'relative';\n        span.style.backgroundColor = 'rgba(0, 0, 0, 0.05)';\n        span.style.border = '1px dashed #999';\n        span.style.borderRadius = '3px';\n        span.style.padding = '0 2px';\n      } else {\n        span.className = 'squibview-editable-content';\n      }\n      \n      // Clone the range contents into the span\n      span.appendChild(range.cloneContents());\n      \n      // Clear the selected content and insert the wrapped content\n      range.deleteContents();\n      range.insertNode(span);\n      \n      // Update the source content to match the HTML changes\n      const editableContent = this.output.querySelector('[contenteditable=\"true\"]');\n      if (editableContent) {\n        const renderedContent = editableContent.innerHTML;\n        const renderer = this.renderers[this.inputContentType];\n        \n        if (renderer && renderer.outputToSource) {\n          const originalSource = this.input.value;\n          let newSource = renderer.outputToSource(renderedContent, {\n            originalSource: originalSource\n          });\n          \n          // Update source content\n          this.input.value = newSource;\n          \n          // Add to revision history\n          this.revisionManager.addRevision(newSource, this.inputContentType);\n          \n          // Emit content change event\n          this.events.emit('content:change', newSource, this.inputContentType);\n        }\n      }\n      \n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Toggles the editability of the selected text\n   * \n   * @param {Object} selectionData - The selection data from the text:selected event\n   * @returns {boolean} Whether the operation was successful and the new state (true=editable, false=locked)\n   */\n  toggleSelectionLock(selectionData) {\n    if (!selectionData || selectionData.panel !== 'rendered') {\n      return null;\n    }\n    \n    // Detect if selection is inside an already locked/unlocked span\n    let targetNode = selectionData.range.commonAncestorContainer;\n    let isLocked = false;\n    \n    // Navigate up to find if selection is within a contenteditable span\n    while (targetNode && targetNode.nodeType === Node.ELEMENT_NODE) {\n      if (targetNode.hasAttribute('contenteditable')) {\n        // Found a contenteditable attribute, check its value\n        isLocked = targetNode.getAttribute('contenteditable') === 'false';\n        break;\n      }\n      targetNode = targetNode.parentNode;\n    }\n    \n    // Toggle the state - if locked, unlock it; if unlocked or not in a contenteditable span, lock it\n    const newEditableState = isLocked;\n    const result = this.setSelectionEditable(newEditableState, selectionData);\n    \n    // Return both success status and the new state\n    return result ? newEditableState : null;\n  }\n  \n  /**\n   * Gets the current text selection data from either panel\n   * \n   * @returns {Object|null} The selection data object or null if no text is selected\n   */\n  getCurrentSelection() {\n    // First, check if we have a cached selection\n    if (this.lastSelectionData) {\n      return this.lastSelectionData;\n    }\n    \n    const selection = document.getSelection();\n    \n    // Check if we have an active selection\n    if (!selection || selection.toString().trim() === '') {\n      return null;\n    }\n    \n    // Determine which panel contains the selection\n    if (this.input === document.activeElement) {\n      // Source panel selection\n      const selectionData = {\n        panel: 'source',\n        text: selection.toString(),\n        range: {\n          start: this.input.selectionStart,\n          end: this.input.selectionEnd\n        }\n      };\n      this.lastSelectionData = selectionData;\n      return selectionData;\n    } else {\n      // Try to find if selection is within the rendered panel\n      let node = selection.anchorNode;\n      let isInOutput = false;\n      \n      // Walk up the DOM tree to check if selection is within output panel\n      while (node && node !== document.body) {\n        if (node === this.output) {\n          isInOutput = true;\n          break;\n        }\n        node = node.parentNode;\n      }\n      \n      if (isInOutput) {\n        const selectionData = {\n          panel: 'rendered',\n          text: selection.toString(),\n          range: selection.getRangeAt(0),\n          element: this.output.querySelector('[contenteditable=\"true\"]')\n        };\n        this.lastSelectionData = selectionData;\n        return selectionData;\n      }\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Clears the current text selection\n   */\n  clearSelection() {\n    this.lastSelectionData = null;\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n    }\n  }\n  \n  /**\n   * Sets a handler function for text replacement on selection\n   * \n   * @param {Function|null} handler - Function to call when text is selected, or null to remove handler\n   * @throws {Error} If handler is not a function or null\n   */\n  set onReplaceSelectedText(handler) {\n    if (handler !== null && typeof handler !== 'function') {\n      throw new Error('onReplaceSelectedText handler must be a function or null');\n    }\n    \n    // Remove previous handler if it exists\n    if (this._onTextReplacementHandler) {\n      this.events.off('text:selected', this._onTextReplacementHandler);\n      this._onTextReplacementHandler = null;\n    }\n    \n    // Set new handler if provided\n    if (handler) {\n      this._onTextReplacementHandler = (selectionData) => {\n        const result = handler(selectionData);\n        \n        // If the handler returns a string, use it to replace the selected text\n        if (typeof result === 'string') {\n          this.replaceSelectedText(result, selectionData);\n        }\n      };\n      \n      // Register the handler\n      this.events.on('text:selected', this._onTextReplacementHandler);\n    }\n  }\n  \n  /**\n   * Gets the current text replacement handler\n   * \n   * @returns {Function|null} The current handler function or null if none is set\n   */\n  get onReplaceSelectedText() {\n    return this._onTextReplacementHandler ? \n      (selectionData) => {\n        const result = this._onTextReplacementHandler(selectionData);\n        return result;\n      } : null;\n  }\n\n  /**\n   * Copies the rendered content to the clipboard with formatting.\n   * Processes code blocks, SVG elements, and images to ensure they copy correctly.\n   */\n  async copyHTML() {\n    const copyButton = this.controls.querySelector('.copy-html-button');\n    copyButton.textContent = 'Copying...';\n\n    try {\n      const contentDiv = this.output.querySelector('div[contenteditable=\"true\"]');\n      if (!contentDiv) {\n        throw new Error('Content div not found');\n      }\n\n      const clone = contentDiv.cloneNode(true);\n\n      // Process code blocks\n      clone.querySelectorAll('pre code').forEach(block => {\n        const formattedCode = block.innerHTML;\n\n        const table = document.createElement('table');\n        table.style.width = '100%';\n        table.style.borderCollapse = 'collapse';\n        table.style.border = 'none';\n\n        const tr = document.createElement('tr');\n        const td = document.createElement('td');\n        td.style.backgroundColor = '#f7f7f7';\n        td.style.padding = '12px';\n        td.style.fontFamily = 'Consolas, Monaco, \"Courier New\", monospace';\n        td.style.whiteSpace = 'pre';\n        td.style.border = 'none';\n\n        td.innerHTML = formattedCode.trim();\n\n        tr.appendChild(td);\n        table.appendChild(tr);\n        block.parentNode.replaceWith(table);\n      });\n\n      // Convert all images to data URLs for copying\n      const images = clone.querySelectorAll('img');\n      for (const img of images) {\n        try {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          // Create new image and wait for it to load\n          const tempImg = new Image();\n          tempImg.crossOrigin = 'anonymous';\n\n          await new Promise((resolve, reject) => {\n            tempImg.onload = () => {\n              // Get intended display dimensions from HTML attributes or CSS\n              const hasWidthAttr = img.getAttribute('width');\n              const hasHeightAttr = img.getAttribute('height');\n              \n              let displayWidth, displayHeight;\n              \n              if (hasWidthAttr && hasHeightAttr) {\n                // Both dimensions specified\n                displayWidth = parseInt(hasWidthAttr);\n                displayHeight = parseInt(hasHeightAttr);\n              } else if (hasWidthAttr && !hasHeightAttr) {\n                // Only width specified - maintain aspect ratio\n                displayWidth = parseInt(hasWidthAttr);\n                displayHeight = Math.round((displayWidth / tempImg.naturalWidth) * tempImg.naturalHeight);\n              } else if (!hasWidthAttr && hasHeightAttr) {\n                // Only height specified - maintain aspect ratio\n                displayHeight = parseInt(hasHeightAttr);\n                displayWidth = Math.round((displayHeight / tempImg.naturalHeight) * tempImg.naturalWidth);\n              } else {\n                // No dimensions specified - use natural size\n                displayWidth = tempImg.naturalWidth;\n                displayHeight = tempImg.naturalHeight;\n              }\n              \n              // Set canvas size to intended display size (not natural size)\n              canvas.width = displayWidth;\n              canvas.height = displayHeight;\n\n              // Draw image scaled to intended size\n              ctx.drawImage(tempImg, 0, 0, displayWidth, displayHeight);\n\n              // Convert to data URL\n              const dataUrl = canvas.toDataURL('image/png', 1.0);\n\n              // Update original image with proper sizing\n              img.src = dataUrl;\n              img.setAttribute('width', displayWidth.toString());\n              img.setAttribute('height', displayHeight.toString());\n              img.style.width = displayWidth + 'px';\n              img.style.height = displayHeight + 'px';\n              resolve();\n            };\n            tempImg.onerror = reject;\n            tempImg.src = img.src;\n          });\n        } catch (error) {\n          console.error('Failed to convert image for copying:', error);\n          // Preserve the original image source if conversion fails (e.g., for external badges)\n          // This ensures badges from services like shields.io still work when copied\n          if (img.src) {\n            // Keep the original src and any existing dimensions\n            const width = img.getAttribute('width');\n            const height = img.getAttribute('height');\n            if (width) img.style.width = width + (width.match(/\\d+$/) ? 'px' : '');\n            if (height) img.style.height = height + (height.match(/\\d+$/) ? 'px' : '');\n          }\n        }\n      }\n\n      // Convert SVG elements to PNG (excluding math SVGs which are handled separately)\n      const svgElements = clone.querySelectorAll('svg');\n      for (const svg of svgElements) {\n        // Skip SVGs that are inside math elements - they'll be handled separately\n        if (svg.closest('.math-display')) {\n          continue;\n        }\n        try {\n          const pngBlob = await this.svgToPng(svg);\n          const dataUrl = await new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onloadend = () => resolve(reader.result);\n            reader.readAsDataURL(pngBlob);\n          });\n\n          const img = document.createElement('img');\n          img.src = dataUrl;\n          \n          // Use the exact same dimension calculation logic as svgToPng\n          const isMermaidSvg = svg.closest('.mermaid') || svg.classList.contains('mermaid');\n          const hasExplicitDimensions = svg.getAttribute('width') && svg.getAttribute('height');\n          \n          let imgWidth, imgHeight;\n          \n          if (isMermaidSvg || !hasExplicitDimensions) {\n            // For Mermaid or other generated SVGs, prioritize computed dimensions\n            imgWidth = svg.clientWidth || \n                       (svg.viewBox && svg.viewBox.baseVal.width) || \n                       parseFloat(svg.getAttribute('width')) || 400;\n            imgHeight = svg.clientHeight || \n                        (svg.viewBox && svg.viewBox.baseVal.height) || \n                        parseFloat(svg.getAttribute('height')) || 300;\n          } else {\n            // For explicit SVGs (like fenced SVG blocks), prioritize explicit attributes\n            imgWidth = parseFloat(svg.getAttribute('width')) || \n                       (svg.viewBox && svg.viewBox.baseVal.width) || \n                       svg.clientWidth || 400;\n            imgHeight = parseFloat(svg.getAttribute('height')) || \n                        (svg.viewBox && svg.viewBox.baseVal.height) || \n                        svg.clientHeight || 300;\n          }\n          \n          // Set both HTML attributes and CSS properties for maximum compatibility\n          img.width = imgWidth;\n          img.height = imgHeight;\n          img.setAttribute('width', imgWidth.toString());\n          img.setAttribute('height', imgHeight.toString());\n          img.style.width = imgWidth + 'px';\n          img.style.height = imgHeight + 'px';\n          img.style.maxWidth = 'none';  // Prevent CSS from constraining the image\n          img.style.maxHeight = 'none';\n          img.setAttribute('v:shapes', 'image' + Math.random().toString(36).substr(2, 9));\n          img.alt = \"Converted diagram\";\n          \n          \n          svg.parentNode.replaceChild(img, svg);\n        } catch (error) {\n          console.error('Failed to convert SVG:', error);\n        }\n      }\n\n      // Convert Math elements to PNG images using the copy-as-image approach from math-test.html\n      const mathElements = Array.from(clone.querySelectorAll('.math-display'));\n      if (mathElements.length > 0) {\n        \n        for (const mathEl of mathElements) {\n          try {\n            \n            const svg = mathEl.querySelector('svg');\n            if (!svg) {\n              console.warn('No SVG found in math element, skipping');\n              continue;\n            }\n\n            // Convert SVG to PNG data URL using the exact approach from math-test.html\n            const serializer = new XMLSerializer();\n            const svgStr = serializer.serializeToString(svg);\n            const svgBlob = new Blob([svgStr], { type: \"image/svg+xml;charset=utf-8\" });\n            const url = URL.createObjectURL(svgBlob);\n            \n            const img = new Image();\n            const dataUrl = await new Promise((resolve, reject) => {\n              img.onload = function () {\n                const canvas = document.createElement('canvas');\n                \n                // Try different approaches to get SVG dimensions\n                let width, height;\n                try {\n                  // First try baseVal.value (works for absolute units)\n                  width = svg.width.baseVal.value;\n                  height = svg.height.baseVal.value;\n                } catch (e) {\n                  // Fallback for relative units - use viewBox or rendered size\n                  if (svg.viewBox && svg.viewBox.baseVal) {\n                    width = svg.viewBox.baseVal.width;\n                    height = svg.viewBox.baseVal.height;\n                  } else {\n                    // Use the natural size of the loaded image\n                    width = img.naturalWidth || img.width || 200;\n                    height = img.naturalHeight || img.height || 50;\n                  }\n                }\n                \n                \n                // Scale down math images to reasonable size for documents\n                // MathJax SVGs often have large coordinate systems, scale them down aggressively\n                const targetMaxWidth = 100;   // Even smaller target max width for truly compact math\n                const targetMaxHeight = 30;   // Even smaller target max height for inline-like appearance\n\n                // Apply an even smaller base scale factor for very compact output\n                let scaleFactor = 0.025; // Even smaller base scale for very compact math\n\n                // Calculate scaled dimensions\n                let scaledWidth = width * scaleFactor;\n                let scaledHeight = height * scaleFactor;\n\n                // If still too large after base scaling, scale down further\n                if (scaledWidth > targetMaxWidth || scaledHeight > targetMaxHeight) {\n                  const scaleX = targetMaxWidth / scaledWidth;\n                  const scaleY = targetMaxHeight / scaledHeight;\n                  const additionalScale = Math.min(scaleX, scaleY);\n                  scaleFactor *= additionalScale;\n                  scaledWidth *= additionalScale;\n                  scaledHeight *= additionalScale;\n                }\n\n                width = scaledWidth;\n                height = scaledHeight;\n\n                // Use a fixed DPR of 2 for crisp rendering on all displays\n                const dpr = 2;\n\n                // Set canvas size with device pixel ratio for crisp rendering\n                canvas.width = width * dpr;\n                canvas.height = height * dpr;\n                canvas.style.width = width + 'px';\n                canvas.style.height = height + 'px';\n\n                const ctx = canvas.getContext('2d');\n                ctx.scale(dpr, dpr);\n\n                // White background\n                ctx.fillStyle = \"#FFFFFF\";\n                ctx.fillRect(0, 0, width, height);\n\n                // Draw the SVG image with proper scaling\n                ctx.drawImage(img, 0, 0, width, height);\n                \n                // Clean up URL\n                URL.revokeObjectURL(url);\n                \n                // Return data URL\n                resolve(canvas.toDataURL('image/png'));\n              };\n              \n              img.onerror = () => {\n                URL.revokeObjectURL(url);\n                reject(new Error('Failed to load SVG image'));\n              };\n              \n              img.src = url;\n            });\n\n            // Replace math element with img tag containing the PNG data URL\n            const imgElement = document.createElement('img');\n            imgElement.src = dataUrl;\n            imgElement.style.cssText = 'display:block;margin:0.5em 0;max-width:100%;height:auto;';\n            imgElement.alt = 'Math equation';\n            \n            mathEl.parentNode.replaceChild(imgElement, mathEl);\n          } catch (error) {\n            console.error('Failed to convert math element to image:', error);\n            // Keep the original element if conversion fails\n          }\n        }\n      }\n\n      // Handle GeoJSON containers - convert canvas to image\n      const geojsonContainers = clone.querySelectorAll('.geojson-container');\n      for (const container of geojsonContainers) {\n        try {\n          // Find the corresponding GeoJSON container in the original DOM by searching with proper escaping\n          const originalSource = container.getAttribute('data-original-source');\n          if (!originalSource) {\n            console.warn('No original source found for GeoJSON container');\n            throw new Error('No original source');\n          }\n\n          // Find original container more reliably\n          let originalContainer = null;\n          const allOriginalContainers = this.output.querySelectorAll('.geojson-container');\n          for (const candidate of allOriginalContainers) {\n            if (candidate.getAttribute('data-original-source') === originalSource) {\n              originalContainer = candidate;\n              break;\n            }\n          }\n          \n          if (originalContainer) {\n            try {\n              // Use div-to-image conversion to capture the entire container\n              const dataUrl = await this.divToDataUrl(originalContainer);\n              if (dataUrl) {\n                const img = document.createElement('img');\n                img.src = dataUrl;\n                img.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px; margin: 0.5em 0;';\n                img.alt = 'GeoJSON Map';\n                \n                // Replace the container with the image\n                container.parentNode.replaceChild(img, container);\n                continue;\n              }\n            } catch (error) {\n              console.warn('Failed to convert GeoJSON container to image:', error);\n            }\n          } else {\n            console.warn('Could not find original GeoJSON container');\n          }\n          \n          // Fallback to placeholder if canvas conversion fails\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[GeoJSON Map - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        } catch (error) {\n          console.error('Error processing GeoJSON container for copy:', error);\n          // Fallback to placeholder\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[GeoJSON Map - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        }\n      }\n\n      // Handle TopoJSON containers - convert to structured data tables\n      clone.querySelectorAll('.topojson-container').forEach(container => {\n        const originalSource = container.getAttribute('data-original-source');\n        if (originalSource) {\n          try {\n            const topoData = JSON.parse(originalSource);\n            \n            // Create a simple table showing TopoJSON data\n            const table = document.createElement('table');\n            table.style.cssText = 'width: 100%; border-collapse: collapse; border: 1px solid #ddd; margin: 0.5em 0;';\n            \n            const headerRow = document.createElement('tr');\n            headerRow.innerHTML = '<td colspan=\"2\" style=\"background-color: #f5f5f5; padding: 8px; border: 1px solid #ddd; font-weight: bold;\">TopoJSON Data</td>';\n            table.appendChild(headerRow);\n            \n            const typeRow = document.createElement('tr');\n            typeRow.innerHTML = `<td style=\"padding: 8px; border: 1px solid #ddd; font-weight: bold;\">Type:</td><td style=\"padding: 8px; border: 1px solid #ddd;\">${topoData.type || 'Unknown'}</td>`;\n            table.appendChild(typeRow);\n            \n            if (topoData.objects) {\n              const objectsRow = document.createElement('tr');\n              const objectNames = Object.keys(topoData.objects).join(', ');\n              objectsRow.innerHTML = `<td style=\"padding: 8px; border: 1px solid #ddd; font-weight: bold;\">Objects:</td><td style=\"padding: 8px; border: 1px solid #ddd;\">${objectNames}</td>`;\n              table.appendChild(objectsRow);\n            }\n            \n            container.parentNode.replaceChild(table, container);\n          } catch (error) {\n            // If JSON parsing fails, create a simple text block\n            const textBlock = document.createElement('div');\n            textBlock.style.cssText = 'padding: 12px; background-color: #f5f5f5; border: 1px solid #ddd; font-family: monospace; white-space: pre-wrap; margin: 0.5em 0;';\n            textBlock.textContent = `TopoJSON Data:\\n${originalSource}`;\n            container.parentNode.replaceChild(textBlock, container);\n          }\n        } else {\n          // No original source, replace with placeholder\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[TopoJSON Map - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        }\n      });\n\n      // Handle STL containers - convert canvas to image\n      const stlContainers = clone.querySelectorAll('.stl-container');\n      for (const container of stlContainers) {\n        try {\n          // Find the corresponding STL container in the original DOM by searching with proper escaping\n          const originalSource = container.getAttribute('data-original-source');\n          if (!originalSource) {\n            console.warn('No original source found for STL container');\n            throw new Error('No original source');\n          }\n\n          // Find original container more reliably\n          let originalContainer = null;\n          const allOriginalContainers = this.output.querySelectorAll('.stl-container');\n          for (const candidate of allOriginalContainers) {\n            if (candidate.getAttribute('data-original-source') === originalSource) {\n              originalContainer = candidate;\n              break;\n            }\n          }\n          \n          if (originalContainer) {\n            // Look for canvas element in the original container (Three.js WebGL canvas)\n            const canvas = originalContainer.querySelector('canvas');\n            if (canvas && canvas.width > 0 && canvas.height > 0) {\n              try {\n                // Ensure the Three.js scene is rendered before capturing\n                // The renderer should be accessible through the canvas or container\n                const renderer = canvas._threeRenderer || originalContainer._threeRenderer;\n                const scene = originalContainer._threeScene;\n                const camera = originalContainer._threeCamera;\n                \n                // If we have access to the Three.js objects, render the scene\n                if (renderer && scene && camera) {\n                  renderer.render(scene, camera);\n                }\n                \n                // Create image from canvas with error handling for WebGL context\n                const dataUrl = canvas.toDataURL('image/png', 1.0);\n                const img = document.createElement('img');\n                img.src = dataUrl;\n                img.style.cssText = 'width: 100%; height: 300px; border: 1px solid #ddd; border-radius: 4px; margin: 0.5em 0;';\n                img.alt = 'STL 3D Model';\n                \n                // Replace the container with the image\n                container.parentNode.replaceChild(img, container);\n                continue;\n              } catch (error) {\n                console.warn('Failed to convert STL canvas to image (likely WebGL context issue):', error);\n              }\n            } else {\n              console.warn('No valid canvas found in STL container');\n            }\n          } else {\n            console.warn('Could not find original STL container');\n          }\n          \n          // Fallback to placeholder if canvas conversion fails\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[STL 3D Model - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        } catch (error) {\n          console.error('Error processing STL container for copy:', error);\n          // Fallback to placeholder\n          const placeholder = document.createElement('div');\n          placeholder.style.cssText = 'padding: 12px; background-color: #f0f0f0; border: 1px solid #ccc; text-align: center; margin: 0.5em 0;';\n          placeholder.textContent = '[STL 3D Model - Interactive content not available in copy]';\n          container.parentNode.replaceChild(placeholder, container);\n        }\n      }\n\n      const htmlContent = `\n          <html xmlns:v=\"urn:schemas-microsoft-com:vml\"\n                xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n                xmlns:w=\"urn:schemas-microsoft-com:office:word\">\n            <head>\n              <meta charset=\"utf-8\">\n              <style>\n                table { border-collapse: collapse; width: 100%; margin-bottom: 1em; }\n                th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }\n                th { background-color: #f0f0f0; font-weight: bold; }\n\n                /* Code block styling */\n                .hljs { display: block; overflow-x: auto; padding: 1em; }\n                .hljs-keyword { color: #0033B3; }\n                .hljs-string { color: #067D17; }\n                .hljs-comment { color: #8C8C8C; }\n                .hljs-function { color: #00627A; }\n                .hljs-number { color: #1750EB; }\n                .hljs-operator { color: #687687; }\n                .hljs-punctuation { color: #000000; }\n\n                /* Word-specific image handling */\n                img { display: block; max-width: none; }\n              </style>\n            </head>\n            <body>\n              ${clone.innerHTML}\n            </body>\n          </html>`;\n\n      const platform = this.getPlatform();\n\n      if (platform === 'macos') {\n        // macOS approach (previously working version)\n        try {\n          await navigator.clipboard.write([\n            new ClipboardItem({\n              'text/html': new Blob([htmlContent], { type: 'text/html' }),\n              'text/plain': new Blob([clone.innerText], { type: 'text/plain' })\n            })\n          ]);\n        } catch (modernErr) {\n          // Safari fallback\n          if (!this.copyToClipboard(htmlContent)) {\n            throw new Error('Fallback copy failed');\n          }\n        }\n      } else {\n        // Windows/Linux approach\n        const tempDiv = document.createElement('div');\n        tempDiv.style.position = 'fixed';\n        tempDiv.style.left = '-9999px';\n        tempDiv.style.top = '0';\n        tempDiv.innerHTML = htmlContent;\n        document.body.appendChild(tempDiv);\n\n        try {\n          await navigator.clipboard.write([\n            new ClipboardItem({\n              'text/html': new Blob([htmlContent], { type: 'text/html' }),\n              'text/plain': new Blob([clone.innerText], { type: 'text/plain' })\n            })\n          ]);\n        } catch (modernErr) {\n          const selection = window.getSelection();\n          const range = document.createRange();\n          range.selectNodeContents(tempDiv);\n          selection.removeAllRanges();\n          selection.addRange(range);\n\n          const successful = document.execCommand('copy');\n          if (!successful) {\n            throw new Error('Fallback copy failed');\n          }\n        } finally {\n          if (tempDiv && tempDiv.parentNode) {\n            document.body.removeChild(tempDiv);\n          }\n        }\n      }\n\n      copyButton.textContent = 'Copied!';\n    } catch (err) {\n      console.error('Copy HTML failed:', err);\n      copyButton.textContent = 'Copy failed';\n    }\n\n    setTimeout(() => {\n      copyButton.textContent = 'Copy Rendered';\n    }, 2000);\n  }\n\n  /**\n   * Converts an SVG element to a PNG blob.\n   * \n   * @param {SVGElement} svgElement - The SVG element to convert\n   * @returns {Promise<Blob>} A promise that resolves with the PNG blob\n   */\n  svgToPng(svgElement) {\n    return new Promise((resolve, reject) => {\n      const svgString = new XMLSerializer().serializeToString(svgElement);\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n\n      const scale = 2;\n      \n      // Check if this is a Mermaid-generated SVG (they don't have explicit width/height attributes)\n      const isMermaidSvg = svgElement.closest('.mermaid') || svgElement.classList.contains('mermaid');\n      const hasExplicitDimensions = svgElement.getAttribute('width') && svgElement.getAttribute('height');\n      \n      let svgWidth, svgHeight;\n      \n      if (isMermaidSvg || !hasExplicitDimensions) {\n        // For Mermaid or other generated SVGs, prioritize computed dimensions\n        svgWidth = svgElement.clientWidth || \n                   (svgElement.viewBox && svgElement.viewBox.baseVal.width) || \n                   parseFloat(svgElement.getAttribute('width')) || 400;\n        svgHeight = svgElement.clientHeight || \n                    (svgElement.viewBox && svgElement.viewBox.baseVal.height) || \n                    parseFloat(svgElement.getAttribute('height')) || 300;\n      } else {\n        // For explicit SVGs (like fenced SVG blocks), prioritize explicit attributes\n        svgWidth = parseFloat(svgElement.getAttribute('width')) || \n                   (svgElement.viewBox && svgElement.viewBox.baseVal.width) || \n                   svgElement.clientWidth || 400;\n        svgHeight = parseFloat(svgElement.getAttribute('height')) || \n                    (svgElement.viewBox && svgElement.viewBox.baseVal.height) || \n                    svgElement.clientHeight || 300;\n      }\n\n\n      // Ensure the SVG string has explicit dimensions by modifying it if necessary\n      let modifiedSvgString = svgString;\n      if (svgWidth && svgHeight) {\n        // Create a temporary SVG element to modify the serialized string\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = svgString;\n        const tempSvg = tempDiv.querySelector('svg');\n        if (tempSvg) {\n          tempSvg.setAttribute('width', svgWidth.toString());\n          tempSvg.setAttribute('height', svgHeight.toString());\n          modifiedSvgString = new XMLSerializer().serializeToString(tempSvg);\n        }\n      }\n\n\n      canvas.width = svgWidth * scale;\n      canvas.height = svgHeight * scale;\n      ctx.scale(scale, scale);\n\n      img.onload = () => {\n        try {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0, svgWidth, svgHeight);\n          canvas.toBlob(blob => {\n            resolve(blob);\n          }, 'image/png', 1.0);\n        } catch (err) {\n          reject(err);\n        }\n      };\n\n      img.onerror = reject;\n      const svgDataUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(modifiedSvgString)}`;\n      img.src = svgDataUrl;\n    });\n  }\n\n  /**\n   * Shows or hides the control buttons.\n   * \n   * @param {boolean} show - Whether to show the controls\n   */\n  controlsShow(show) {\n    this.controls.style.display = show ? '' : 'none';\n    this.options.showControls = show;\n    this.adjustLayout();\n    \n    // Emit controls visibility change event\n    this.events.emit('controls:visibility', show);\n  }\n\n  /**\n   * Shows or hides the title section.\n   * \n   * @param {boolean} show - Whether to show the title\n   */\n  titleShow(show) {\n    this.title.style.display = show ? '' : 'none';\n    this.options.titleShow = show;\n    this.adjustLayout();\n    \n    // Emit title visibility change event\n    this.events.emit('title:visibility', show);\n  }\n\n  /**\n   * Sets the content of the title section.\n   * \n   * @param {string} content - The HTML content for the title\n   */\n  titleSetContent(content) {\n    this.title.innerHTML = content;\n    this.options.titleContent = content;\n    \n    // Emit title content change event\n    this.events.emit('title:content', content);\n  }\n\n  /**\n   * Gets the content of the title section.\n   * \n   * @returns {string} The HTML content of the title\n   */\n  titleGetContent() {\n    return this.title.innerHTML;\n  }\n\n  /**\n   * Toggles between the different view modes (source, rendered, split).\n   * Cycles through: source -> split -> rendered -> source.\n   */\n  toggleView() {\n    if (this.currentView === 'src') {\n      this.setView('split');\n    } else if (this.currentView === 'split') {\n      this.setView('html');\n    } else {\n      this.setView('src');\n    }\n  }\n\n  /**\n   * Copies text to clipboard using various fallback methods.\n   * \n   * @param {string} string - The text to copy to the clipboard\n   * @returns {boolean} Whether the copy operation was successful\n   */\n  copyToClipboard(string) {\n    let textarea;\n    let result;\n\n    try {\n      textarea = document.createElement('textarea');\n      textarea.setAttribute('readonly', true);\n      textarea.setAttribute('contenteditable', true);\n      textarea.style.position = 'fixed';\n      textarea.style.left = '0';\n      textarea.style.top = '0';\n      textarea.style.opacity = '0';\n      textarea.value = string;\n\n      document.body.appendChild(textarea);\n\n      textarea.focus();\n      textarea.select();\n\n      const range = document.createRange();\n      range.selectNodeContents(textarea);\n\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n\n      textarea.setSelectionRange(0, textarea.value.length);\n      result = document.execCommand('copy');\n    } catch (err) {\n      console.error(err);\n      result = null;\n    } finally {\n      if (textarea && textarea.parentNode) {\n        document.body.removeChild(textarea);\n      }\n    }\n\n    // manual copy fallback using prompt\n    if (!result) {\n      const isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n      const copyHotkey = isMac ? '⌘C' : 'CTRL+C';\n      result = prompt(`Press ${copyHotkey}`, string);\n      if (!result) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Converts a math element to a PNG blob using simple SVG-to-PNG conversion.\n   * Based on the working approach from math-test.html\n   * \n   * @param {HTMLElement} mathElement - The math element to convert\n   * @returns {Promise<Blob>} A promise that resolves with the PNG blob\n   */\n  async mathToPng(mathElement) {\n    return new Promise((resolve, reject) => {\n      try {\n        const svg = mathElement.querySelector('svg');\n        if (!svg) {\n          reject(new Error('No SVG found in math element'));\n          return;\n        }\n\n        // Serialize SVG to string\n        const serializer = new XMLSerializer();\n        const svgStr = serializer.serializeToString(svg);\n        const svgBlob = new Blob([svgStr], { type: \"image/svg+xml;charset=utf-8\" });\n        const url = URL.createObjectURL(svgBlob);\n        \n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement('canvas');\n          canvas.width = svg.width.baseVal.value;\n          canvas.height = svg.height.baseVal.value;\n          const ctx = canvas.getContext('2d');\n          \n          // White background\n          ctx.fillStyle = \"#FFFFFF\";\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          \n          // Draw the SVG image\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          \n          // Clean up URL\n          URL.revokeObjectURL(url);\n          \n          // Convert canvas to blob\n          canvas.toBlob(resolve, 'image/png');\n        };\n        \n        img.onerror = () => {\n          URL.revokeObjectURL(url);\n          reject(new Error('Failed to load SVG image'));\n        };\n        \n        img.src = url;\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n\n  /**\n   * Checks if MathJax 3 is available with the necessary APIs.\n   * \n   * @returns {boolean} True if MathJax 3 is properly loaded\n   * @private\n   */\n  isMathJax3Available() {\n    return typeof MathJax !== 'undefined' &&\n           typeof MathJax.typesetPromise === 'function' &&\n           (typeof MathJax.tex2svgPromise === 'function' || \n            // Allow test environment with basic MathJax mock\n            (typeof jest !== 'undefined' && MathJax.version));\n  }\n\n\n\n  /**\n   * Converts CHTML MathJax output to PNG using html2canvas-like approach.\n   * \n   * @param {HTMLElement} chtmlContainer - The CHTML MathJax container\n   * @returns {Promise<Blob|null>} PNG blob if successful, null otherwise\n   * @private\n   */\n  async mathCHTMLToPng(chtmlContainer) {\n    try {\n      // Get container bounds\n      const rect = chtmlContainer.getBoundingClientRect();\n      if (rect.width === 0 || rect.height === 0) {\n        console.warn('CHTML container has zero dimensions');\n        return null;\n      }\n\n      // Create canvas\n      const padding = 8;\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      const scale = 2; // High DPI\n      const canvasWidth = rect.width + padding * 2;\n      const canvasHeight = rect.height + padding * 2;\n      \n      canvas.width = canvasWidth * scale;\n      canvas.height = canvasHeight * scale;\n      canvas.style.width = canvasWidth + 'px';\n      canvas.style.height = canvasHeight + 'px';\n      ctx.scale(scale, scale);\n\n      // White background\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n      // Convert CHTML to SVG for rendering\n      const foreignObject = `\n        <svg width=\"${canvasWidth}\" height=\"${canvasHeight}\" xmlns=\"http://www.w3.org/2000/svg\">\n          <foreignObject x=\"${padding}\" y=\"${padding}\" width=\"${rect.width}\" height=\"${rect.height}\">\n            <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font-size: 16px; font-family: 'Times New Roman', serif;\">\n              ${chtmlContainer.outerHTML}\n            </div>\n          </foreignObject>\n        </svg>\n      `;\n\n      const svgBlob = new Blob([foreignObject], { type: 'image/svg+xml;charset=utf-8' });\n      const url = URL.createObjectURL(svgBlob);\n\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          try {\n            ctx.drawImage(img, 0, 0, canvasWidth, canvasHeight);\n            URL.revokeObjectURL(url);\n            canvas.toBlob(resolve, 'image/png');\n          } catch (error) {\n            URL.revokeObjectURL(url);\n            reject(error);\n          }\n        };\n        img.onerror = () => {\n          URL.revokeObjectURL(url);\n          reject(new Error('Failed to load CHTML as image'));\n        };\n        img.src = url;\n      });\n\n    } catch (error) {\n      console.error('CHTML to PNG conversion failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Detects the user's operating system platform.\n   * \n   * @returns {string} The detected platform: 'macos', 'windows', 'linux', or 'unknown'\n   */\n  getPlatform() {\n    const platform = navigator.platform.toLowerCase();\n    const userAgent = navigator.userAgent.toLowerCase();\n\n    if (platform.includes('mac') || userAgent.includes('mac')) {\n      return 'macos';\n    } else if (userAgent.includes('windows')) {\n      return 'windows';\n    } else if (userAgent.includes('linux')) {\n      return 'linux';\n    }\n    return 'unknown';\n  }\n  \n  /**\n   * Example of how to use text selection features\n   * This method demonstrates registering selection callbacks and manipulating selected text\n   * \n   * @example\n   * // Register a selection callback\n   * const editor = new SquibView('#editor');\n   * const unsubscribe = editor.onTextSelected(selectionData => {\n   *   console.log(`Selected text: ${selectionData.text} in ${selectionData.panel} panel`);\n   *   \n   *   // Replace selection with bold text if in source panel\n   *   if (selectionData.panel === 'source') {\n   *     editor.replaceSelectedText(`**${selectionData.text}**`, selectionData);\n   *   }\n   *   \n   *   // Make selection non-editable if in rendered panel\n   *   if (selectionData.panel === 'rendered') {\n   *     editor.setSelectionEditable(false, selectionData);\n   *   }\n   * });\n   * \n   * // Later, to stop listening for selections:\n   * unsubscribe();\n   * \n   * // Get current selection manually (without callback)\n   * const selection = editor.getCurrentSelection();\n   * if (selection) {\n   *   editor.replaceSelectedText('replacement text', selection);\n   * }\n   */\n  demonstrateSelectionFeatures() {\n    // This is a documentation method only and doesn't need implementation\n    console.log('See method documentation for usage examples');\n  }\n\n  /**\n   * Creates a complete HTML page from a HTML snippet/div content.\n   * \n   * @param {string} inputDivHTML - The HTML content to include in the page\n   * @param {boolean} [editable=false] - Whether the content should be editable\n   * @returns {string} A complete HTML page as a string\n   */\n  makeHTMLPageFromDiv(inputDivHTML, editable = false) {\n    let editableAttr = editable ? 'contenteditable=\"true\"' : '';\n    let s =\n      `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Markdown Viewer with Graphics Support</title>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n  <xscripx src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></xscripx>\n  <xscripx src=\"https://unpkg.com/mermaid/dist/mermaid.min.js\"></xscripx>\n  <style>\n      body {\n          font-family: Arial, sans-serif;\n          box-sizing: border-box;\n          padding: 20px;\n      }\n      .squibview-output {\n          width: 50%;\n          margin: auto;\n      }\n      pre {\n          background-color: #f4f4f4;\n          padding: 10px;\n          border-radius: 5px;\n          overflow-x: auto;\n      }\n      table {\n          width: 100%;\n          border-collapse: collapse;\n          margin: 20px 0;\n      }\n      table, th, td {\n          border: 1px solid black;\n      }\n      th, td {\n          padding: 8px;\n          text-align: left;\n      }\n  </style>\n</head>\n<body ${editableAttr}>\n  ${inputDivHTML}\n</body>\n</html>`;\n    // Replace the xscript placeholders with real script tags\n    s = s.replaceAll(\"xscripx\", \"script\");\n    return s;\n  }\n\n  /**\n   * Creates a RevealJS presentation page from markdown content.\n   * Splits the markdown on '---' delimiters to create slides.\n   * \n   * @param {string} markdown - The markdown content to convert to slides\n   * @param {string} [title=\"Slide Presentation\"] - The title for the presentation\n   * @returns {string} A complete HTML page with RevealJS for presenting slides\n   */\n  makeRevealJSFullPage(markdown, title = \"Slide Presentation\") {\n    return `<!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>${title}</title>\n      <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.css\">\n      <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/reveal.js/dist/theme/black.css\">\n      <script src=\"https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\"></script>\n  </head>\n  <body>\n      <div class=\"reveal\" contenteditable=\"true\">\n          <div class=\"slides\">\n              ${markdown.split('---').map(slide => `<section data-markdown><script type=\"text/template\">${slide.trim()}</script></section>`).join('\\n')}\n          </div>\n      </div>\n      <script src=\"https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/reveal.js/plugin/markdown/markdown.js\"></script>\n      <script>\n          Reveal.initialize({\n              plugins: [ RevealMarkdown ]\n          });\n          \n          // Ensure Mermaid diagrams initialize correctly\n          document.addEventListener('DOMContentLoaded', () => {\n              mermaid.initialize({ startOnLoad: true , securityLevel: 'loose', theme: 'dark' });\n              document.querySelectorAll('.mermaid').forEach(el => {\n                  el.innerHTML = el.textContent;\n                  mermaid.init(undefined, el);\n              });\n          });\n      </script>\n  </body>\n  </html>`;\n  }\n\n  /**\n   * Converts CSV/TSV content to a markdown table.\n   * \n   * @param {string} input - The CSV/TSV string to convert\n   * @param {string} [delimiter=','] - The delimiter used in the input (comma, tab, etc.)\n   * @returns {string} A markdown formatted table\n   */\n  csvOrTsvToMarkdownTable(input, delimiter = ',') {\n    // Parse CSV/TSV content\n    const parsedData = Papa.parse(input, {\n      delimiter,\n      skipEmptyLines: true\n    });\n\n    const rows = parsedData.data;\n\n    if (rows.length === 0) return 'No data found.';\n\n    // Markdown table header\n    const header = `| ${rows[0].join(' | ')} |`;\n    const separator = `| ${rows[0].map(() => '---').join(' | ')} |`;\n    const tableRows = rows.slice(1).map(row => `| ${row.join(' | ')} |`).join('\\n');\n\n    return `${header}\\n${separator}\\n${tableRows}`;\n  }\n\n  /**\n   * Gets whether image tags are preserved in source view\n   * @returns {boolean} Whether image tags are preserved\n   */\n  get preserveImageTags() {\n    return this.options.preserveImageTags;\n  }\n\n  /**\n   * Sets whether image tags should be preserved in source view\n   * @param {boolean} value - Whether to preserve image tags\n   */\n  set preserveImageTags(value) {\n    this.options.preserveImageTags = value;\n    // Re-render content to apply the new setting\n    this.renderMarkdown();\n  }\n\n  /**\n   * Fixes linefeeds in markdown by adding two spaces at the end of lines that are not already hard breaks, not empty, and not part of a list, heading, or code block.\n   * @param {string} markdown - The markdown text to process\n   * @returns {string} - The markdown text with fixed linefeeds\n   */\n  fixLinefeedsInMarkdown(markdown) {\n    if (typeof markdown !== 'string') return markdown;\n    const lines = markdown.split('\\n');\n    let inCodeBlock = false;\n    return lines.map(line => {\n      // Toggle code block state\n      if (/^```/.test(line)) {\n        inCodeBlock = !inCodeBlock;\n        return line;\n      }\n      if (inCodeBlock) return line;\n      // Skip headings, lists, blockquotes, tables, and empty lines\n      if (/^\\s*([#\\-*>]|\\d+\\.|\\|)/.test(line) || line.trim() === '') return line;\n      // If line already ends with two or more spaces, or is just whitespace, skip\n      if (/\\s{2,}$/.test(line)) return line;\n      // Otherwise, add two spaces\n      return line + '  ';\n    }).join('\\n');\n  }\n\n  /**\n   * Toggles the linefeed view state. When enabled, rendered HTML will have <br> at the end of lines that would otherwise be collapsed.\n   */\n  toggleLinefeedView() {\n    this.linefeedViewEnabled = !this.linefeedViewEnabled;\n    this.renderOutput();\n  }\n\n  /**\n   * Converts a DOM element to a data URL image.\n   * @param {HTMLElement} element - The DOM element to convert\n   * @returns {Promise<string>} A promise that resolves with the data URL\n   */\n  async divToDataUrl(element) {\n    return new Promise((resolve, reject) => {\n      try {\n        // Get the element's dimensions\n        const rect = element.getBoundingClientRect();\n        const width = rect.width || 400;\n        const height = rect.height || 300;\n\n        // Special handling for Leaflet maps (GeoJSON containers)\n        if (element.classList.contains('geojson-container') || element.id && element.id.startsWith('map-')) {\n          // Try to access the Leaflet map instance\n          const mapId = element.id;\n          if (typeof window.L !== 'undefined' && mapId && window[mapId + '_map']) {\n            const map = window[mapId + '_map'];\n            \n            // Use Leaflet's built-in screenshot functionality if available\n            if (map.getContainer) {\n              try {\n                // Create a canvas from the map container using html2canvas-like approach\n                const mapContainer = map.getContainer();\n                const mapRect = mapContainer.getBoundingClientRect();\n                \n                // Create canvas and draw the map tiles\n                const canvas = document.createElement('canvas');\n                canvas.width = mapRect.width;\n                canvas.height = mapRect.height;\n                const ctx = canvas.getContext('2d');\n                \n                // White background\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                \n                // Try to capture tile layers\n                const tileLayers = mapContainer.querySelectorAll('.leaflet-tile');\n                let tilesLoaded = 0;\n                const totalTiles = tileLayers.length;\n                \n                if (totalTiles === 0) {\n                  // No tiles, just return white canvas\n                  const dataUrl = canvas.toDataURL('image/png', 1.0);\n                  resolve(dataUrl);\n                  return;\n                }\n                \n                // Load and draw each tile\n                for (const tile of tileLayers) {\n                  const img = new Image();\n                  img.crossOrigin = 'anonymous';\n                  \n                  img.onload = () => {\n                    try {\n                      const tileRect = tile.getBoundingClientRect();\n                      const offsetX = tileRect.left - mapRect.left;\n                      const offsetY = tileRect.top - mapRect.top;\n                      \n                      ctx.drawImage(img, offsetX, offsetY, tileRect.width, tileRect.height);\n                    } catch (e) {\n                      console.warn('Failed to draw tile:', e);\n                    }\n                    \n                    tilesLoaded++;\n                    if (tilesLoaded === totalTiles) {\n                      // All tiles loaded, now draw SVG overlays\n                      const svgElements = mapContainer.querySelectorAll('svg');\n                      for (const svg of svgElements) {\n                        if (svg.classList.contains('leaflet-attribution-flag')) continue;\n                        \n                        try {\n                          const svgRect = svg.getBoundingClientRect();\n                          const svgOffsetX = svgRect.left - mapRect.left;\n                          const svgOffsetY = svgRect.top - mapRect.top;\n                          \n                          // Convert SVG to image and draw it\n                          const svgData = new XMLSerializer().serializeToString(svg);\n                          const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\n                          const svgUrl = URL.createObjectURL(svgBlob);\n                          \n                          const svgImg = new Image();\n                          svgImg.onload = () => {\n                            ctx.drawImage(svgImg, svgOffsetX, svgOffsetY);\n                            URL.revokeObjectURL(svgUrl);\n                          };\n                          svgImg.src = svgUrl;\n                        } catch (e) {\n                          console.warn('Failed to draw SVG overlay:', e);\n                        }\n                      }\n                      \n                      const dataUrl = canvas.toDataURL('image/png', 1.0);\n                      resolve(dataUrl);\n                    }\n                  };\n                  \n                  img.onerror = () => {\n                    tilesLoaded++;\n                    if (tilesLoaded === totalTiles) {\n                      const dataUrl = canvas.toDataURL('image/png', 1.0);\n                      resolve(dataUrl);\n                    }\n                  };\n                  \n                  img.src = tile.src;\n                }\n                \n                return;\n              } catch (error) {\n                console.warn('Leaflet-specific approach failed:', error);\n              }\n            }\n          }\n        }\n\n        // First try to find existing canvas or SVG elements\n        const canvas = element.querySelector('canvas');\n        if (canvas && canvas.width > 0 && canvas.height > 0) {\n          try {\n            const dataUrl = canvas.toDataURL('image/png', 1.0);\n            resolve(dataUrl);\n            return;\n          } catch (error) {\n            console.warn('Canvas toDataURL failed, trying SVG approach:', error);\n          }\n        }\n\n        // Try to find SVG elements\n        const svgs = element.querySelectorAll('svg');\n        if (svgs.length > 0) {\n          // Find the largest SVG (excluding small attribution icons)\n          let bestSvg = null;\n          let maxArea = 0;\n          \n          for (const svg of svgs) {\n            if (svg.classList.contains('leaflet-attribution-flag')) continue;\n            \n            const svgWidth = svg.clientWidth || parseFloat(svg.getAttribute('width')) || 0;\n            const svgHeight = svg.clientHeight || parseFloat(svg.getAttribute('height')) || 0;\n            const area = svgWidth * svgHeight;\n            \n            if (area > maxArea && area > 100) {\n              maxArea = area;\n              bestSvg = svg;\n            }\n          }\n          \n          if (bestSvg) {\n            try {\n              this.svgToPng(bestSvg).then(pngBlob => {\n                const reader = new FileReader();\n                reader.onloadend = () => resolve(reader.result);\n                reader.readAsDataURL(pngBlob);\n              }).catch(reject);\n              return;\n            } catch (error) {\n              console.warn('SVG conversion failed, trying simple approach:', error);\n            }\n          }\n        }\n\n        // Simple fallback: create a placeholder image\n        const fallbackCanvas = document.createElement('canvas');\n        fallbackCanvas.width = width;\n        fallbackCanvas.height = height;\n        const ctx = fallbackCanvas.getContext('2d');\n        \n        // White background\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, width, height);\n        \n        // Draw simple text indicating content type\n        ctx.fillStyle = '#666';\n        ctx.font = '16px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('GeoJSON Map', width / 2, height / 2);\n        ctx.fillText('(Interactive content)', width / 2, height / 2 + 20);\n        \n        const dataUrl = fallbackCanvas.toDataURL('image/png', 1.0);\n        resolve(dataUrl);\n        \n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Initialize line numbers functionality\n   * @private\n   */\n  initializeLineNumbers() {\n    // Create line mirror for measuring line heights\n    this.lineMirror = document.createElement('div');\n    this.lineMirror.className = `${this.options.baseClass}-line-mirror`;\n    this.lineMirror.setAttribute('aria-hidden', 'true');\n    this.container.appendChild(this.lineMirror);\n    \n    // Track last line count for optimization\n    this.lastLineCount = 0;\n    \n    // Set up scroll synchronization\n    this.setupLineNumberScrollSync();\n    \n    // Store bound handler for cleanup\n    this._lineNumberInputHandler = () => {\n      this.updateLineNumbersIfNeeded();\n    };\n    \n    // Update line numbers on input\n    this.input.addEventListener('input', this._lineNumberInputHandler);\n    \n    // Store bound resize handler for cleanup\n    this._lineNumberResizeHandler = this.updateLineNumbersDebounced.bind(this);\n    \n    // Update on window resize\n    window.addEventListener('resize', this._lineNumberResizeHandler);\n    \n    // Initial update\n    this.updateLineNumbers();\n  }\n\n  /**\n   * Cleanup line numbers functionality\n   * @private\n   */\n  cleanupLineNumbers() {\n    // Remove event listeners\n    if (this._lineNumberInputHandler) {\n      this.input.removeEventListener('input', this._lineNumberInputHandler);\n      this._lineNumberInputHandler = null;\n    }\n    if (this._lineNumberResizeHandler) {\n      window.removeEventListener('resize', this._lineNumberResizeHandler);\n      this._lineNumberResizeHandler = null;\n    }\n    \n    // Remove line mirror\n    if (this.lineMirror && this.lineMirror.parentNode) {\n      this.lineMirror.parentNode.removeChild(this.lineMirror);\n    }\n    \n    // Clear references\n    this.lineMirror = undefined;\n    this.lineGutter = undefined;\n    this.sourcePanel = undefined;\n  }\n\n  /**\n   * Set up scroll synchronization between textarea and line gutter\n   * @private\n   */\n  setupLineNumberScrollSync() {\n    if (!this.lineGutter) return;\n    \n    this.input.addEventListener('scroll', () => {\n      if (this.lineGutter) {\n        this.lineGutter.scrollTop = this.input.scrollTop;\n      }\n    });\n  }\n\n  /**\n   * Update line numbers if the line count has changed\n   * @private\n   */\n  updateLineNumbersIfNeeded() {\n    const newLineCount = (this.input.value.match(/\\n/g) || []).length + 1;\n    if (newLineCount !== this.lastLineCount) {\n      this.lastLineCount = newLineCount;\n      this.updateLineNumbersDebounced();\n    }\n  }\n\n  /**\n   * Debounced version of updateLineNumbers\n   * @private\n   */\n  updateLineNumbersDebounced = this.debounce(() => {\n    requestAnimationFrame(() => this.updateLineNumbers());\n  }, 100);\n\n  /**\n   * Update the line numbers in the gutter\n   * @private\n   */\n  updateLineNumbers() {\n    if (!this.options.showLineNumbers || !this.lineGutter) return;\n    \n    const lines = this.input.value.split('\\n');\n    const totalLines = lines.length;\n    const minDigits = Math.max(\n      this.options.lineNumberMinDigits,\n      String(totalLines + this.options.lineNumberStart - 1).length\n    );\n    \n    // Clear gutter\n    this.lineGutter.innerHTML = '';\n    \n    // Sync mirror styles with textarea\n    this.syncMirrorStyles();\n    \n    // Create line number elements\n    lines.forEach((line, index) => {\n      const lineNum = this.options.lineNumberStart + index;\n      const lineNumStr = String(lineNum).padStart(minDigits, '0');\n      \n      // Measure line height\n      const lineHeight = this.measureLineHeight(line);\n      \n      // Create line number element\n      const gutterLine = document.createElement('div');\n      gutterLine.className = `${this.options.baseClass}-gutter-line`;\n      gutterLine.textContent = lineNumStr;\n      gutterLine.style.height = lineHeight + 'px';\n      gutterLine.style.lineHeight = lineHeight + 'px';\n      \n      this.lineGutter.appendChild(gutterLine);\n    });\n  }\n\n  /**\n   * Measure the height of a single line of text\n   * @private\n   * @param {string} lineContent - The content of the line\n   * @returns {number} The height in pixels\n   */\n  measureLineHeight(lineContent) {\n    // Create temporary element in mirror\n    const tempLine = document.createElement('div');\n    tempLine.textContent = lineContent || '\\u00A0'; // nbsp for empty lines\n    tempLine.style.wordBreak = 'break-all';\n    tempLine.style.whiteSpace = 'pre-wrap';\n    tempLine.style.overflow = 'hidden';\n    \n    this.lineMirror.appendChild(tempLine);\n    const rect = tempLine.getBoundingClientRect();\n    const height = Math.ceil(rect.height); // Round up to avoid sub-pixel issues\n    this.lineMirror.removeChild(tempLine);\n    \n    return height;\n  }\n\n  /**\n   * Sync the mirror div styles with the textarea\n   * @private\n   */\n  syncMirrorStyles() {\n    const computed = window.getComputedStyle(this.input);\n    const stylesToCopy = [\n      'fontFamily', 'fontSize', 'lineHeight', 'letterSpacing',\n      'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight',\n      'borderTopWidth', 'borderBottomWidth', 'borderLeftWidth', 'borderRightWidth',\n      'boxSizing', 'whiteSpace', 'wordWrap', 'wordBreak', 'overflowWrap'\n    ];\n    \n    stylesToCopy.forEach(prop => {\n      this.lineMirror.style[prop] = computed[prop];\n    });\n    \n    // Match textarea content width exactly\n    this.lineMirror.style.width = this.input.clientWidth + 'px';\n  }\n\n  /**\n   * Toggle line numbers on/off\n   * @param {boolean} show - Whether to show line numbers\n   */\n  setLineNumbers(show) {\n    if (this.options.showLineNumbers === show) return;\n    \n    this.options.showLineNumbers = show;\n    \n    // Store current state\n    const currentContent = this.getContent();\n    const currentType = this.inputContentType;\n    const currentView = this.currentView;\n    \n    // Clean up existing line numbers if any\n    if (!show && this.lineMirror) {\n      this.cleanupLineNumbers();\n    }\n    \n    // Re-create structure\n    this.createStructure();\n    this.initializeEventHandlers();\n    this.initializeResizeObserver();\n    \n    if (show) {\n      this.initializeLineNumbers();\n    }\n    \n    // Restore content and view\n    this.setContent(currentContent, currentType, false);\n    this.setView(currentView);\n    \n    // Update type buttons\n    this.updateTypeButtons();\n  }\n\n  /**\n   * Get the current line numbers state\n   * @returns {boolean} Whether line numbers are shown\n   */\n  getLineNumbers() {\n    return this.options.showLineNumbers;\n  }\n\n  /**\n   * Set the starting line number\n   * @param {number} start - The starting line number\n   */\n  setLineNumberStart(start) {\n    this.options.lineNumberStart = start;\n    if (this.options.showLineNumbers) {\n      this.updateLineNumbers();\n    }\n  }\n\n  /**\n   * Utility function to debounce function calls\n   * @private\n   * @param {Function} func - The function to debounce\n   * @param {number} wait - The debounce delay in milliseconds\n   * @returns {Function} The debounced function\n   */\n  debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n}\n\n// The React component wrapper has been moved to a separate file\n// to avoid dependency issues when React is not available\n\n// Export the main class\nexport default SquibView;","// This file is auto-generated by tools/updateVersion.js. Do not edit directly.\nexport const VERSION = \"1.0.20\";\nexport const REPO_URL = \"https://github.com/deftio/squibview\";\n\nexport default { version: VERSION, url: REPO_URL };\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","moduleFactory","global","self","window","getWorkerBlob","URL","webkitURL","code","toString","Papa","BLOB_URL","createObjectURL","Blob","type","IS_WORKER","document","postMessage","IS_PAPA_WORKER","workers","workerIdCounter","parse","CsvToJson","unparse","JsonToCsv","RECORD_SEP","String","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","BAD_DELIMITERS","WORKERS_SUPPORTED","Worker","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","PAPA_BROWSER_CONTEXT","DuplexStreamStreamer","jQuery","$","options","config","queue","each","idx","prop","toUpperCase","attr","toLowerCase","FileReader","files","file","inputElem","instanceConfig","extend","parseNextFile","f","isFunction","before","returned","_typeof","action","error","reason","fileComplete","userCompleteFunc","complete","results","elem","splice","_input","_config","dynamicTyping","dynamicTypingFunction","transform","worker","w","newWorker","userStep","step","userChunk","chunk","userComplete","userError","input","workerId","id","streamer","getStream","stripBom","download","readable","read","File","stream","string","charCodeAt","_quotes","_writeHeader","_delimiter","_newline","_quoteChar","_escapedQuote","_skipEmptyLines","_columns","_escapeFormulae","unpackConfig","quoteCharRegex","RegExp","escapeRegExp","JSON","isArray","serialize","keys","data","fields","meta","Error","delimiter","filter","value","indexOf","quotes","skipEmptyLines","newline","quoteChar","header","columns","escapeChar","escapeFormulae","csv","hasHeader","dataKeyedByField","safe","row","maxCol","emptyLine","nullLine","join","trim","line","c","cx","col","colIdx","str","constructor","Date","stringify","needsQuotes","test","escapedQuoteStr","replace","hasAny","charAt","substrings","ChunkStreamer","replaceConfig","configCopy","copy","chunkSize","parseInt","_handle","_finished","_completed","_halted","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","parseChunk","isFakeChunk","skipFirstNLines","guessLineEndings","splitChunk","split","_toConsumableArray","beforeFirstChunk","modifiedChunk","aggregate","paused","aborted","lastIndex","cursor","substring","finishedIncludingPreview","preview","WORKER_ID","finished","_sendError","xhr","getFileSize","contentRange","getResponseHeader","lastIndexOf","_readChunk","_chunkLoaded","url","XMLHttpRequest","withCredentials","onload","bindFunction","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","headers","headerName","setRequestHeader","end","send","err","message","status","readyState","responseText","errorMessage","errorText","statusText","reader","usingAsyncReader","webkitSlice","mozSlice","FileReaderSync","Math","min","size","txt","readAsText","encoding","target","result","remaining","s","parseOnData","streamHasEnded","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","shift","_streamCleanUp","Duplex","require$$0","parseOnWrite","writeStreamHasFinished","parseCallbackQueue","_onCsvData","_onCsvComplete","_addToParseQueue","callback","_onRead","_onWrite","_onWriteComplete","readableObjectMode","decodeStrings","write","_parser","_delimiterError","MAX_FLOAT","pow","MIN_FLOAT","FLOAT","ISO_DATE","_stepCounter","_rowCounter","_paused","_aborted","_fields","_results","needsHeaderRow","processResults","abort","testEmptyLine","testFloat","floatValue","parseFloat","addError","d","fillHeaderFields","applyHeaderAndDynamicTypingAndTransformation","forEach","addHeader","transformHeader","shouldApplyDynamicTyping","field","parseDynamic","processRow","rowSource","incrementBy","map","guessDelimiter","comments","delimitersToGuess","bestDelim","bestDelta","fieldCountPrevRow","maxFieldCount","delim","delta","avgFieldCount","emptyLinesCount","fieldCount","abs","successful","bestDelimiter","msg","baseIndex","ignoreLastRow","delimGuess","parserConfig","getCharIndex","setTimeout","re","r","n","nAppearsFirst","numWithN","fastMode","renamedHeaders","headerParsed","inputLen","delimLen","newlineLen","commentsLen","stepIsFunction","lastCursor","returnable","rows","pushRow","doStep","nextDelim","nextNewline","quoteSearch","saveRow","index","finish","spacesBetweenQuoteAndDelimiter","extraSpaces","substr","spacesBetweenQuoteAndNewLine","spaceLength","textBetweenClosingQuoteAndIndex","newCursor","stopped","headerCount","usedHeaders","Set","duplicateHeaders","newHeader","suffixCount","add","console","warn","linebreak","truncated","workerUrl","onmessage","mainThreadReceivedMessage","e","handle","completeWorker","notImplemented","terminate","workerThreadReceivedMessage","obj","cpy","key","func","factory","repeat","character","count","blockElements","isBlock","node","is","voidElements","isVoid","meaningfulWhenBlankElements","tagNames","nodeName","getElementsByTagName","some","tagName","rules","cleanAttribute","attribute","Rules","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","findRule","rule","filterValue","remove","next","nextSibling","parentNode","removeChild","prev","current","isPre","firstChild","paragraph","content","lineBreak","br","heading","hLevel","Number","headingStyle","blockquote","list","parent","lastElementChild","listItem","bulletListMarker","start","getAttribute","children","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","match","language","fenceChar","fence","fenceSize","fenceInCodeRegex","exec","horizontalRule","hr","inlineLink","linkStyle","href","title","referenceLink","reference","linkReferenceStyle","references","append","emphasis","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","extraSpace","matches","image","alt","src","unshift","keep","forNode","isBlank","root","domino","_htmlParser","HTMLParser","DOMParser","canParse","parseFromString","canParseHTMLNatively","require","createDocument","RootNode","getElementById","cloneNode","element","prevText","keepLeadingWs","nodeType","text","nextNode","collapseWhitespace","preformattedCode","isPreOrCode","Node","isCode","isMeaningfulWhenBlank","hasVoid","hasMeaningfulWhenBlank","flankingWhitespace","leading","trailing","edges","m","leadingAscii","leadingNonAscii","trailingNonAscii","trailingAscii","isFlankedByWhitespace","side","sibling","regExp","isFlanked","nodeValue","reduce","escapes","TurndownService","defaults","outerHTML","destination","source","process","childNodes","output","escape","replacementForNode","postProcess","whitespace","s1","indexEnd","trimTrailingNewlines","s2","nls","max","turndown","canConvert","use","plugin","addRule","accumulator","HtmlToMarkdown","_createClass","_classCallCheck","turndownService","_objectSpread","cache","Map","cacheSize","_specialBlocks","configureTurndownRules","_this","hasAttribute","lang","innerContent","contentFromHtml","innerHTML","tempDiv","ownerDocument","createElement","innerText","tableElement","querySelector","_htmlTableToDelimitedText","preElement","langTag","finalInnerContent","classList","contains","blockId","random","set","geojsonContent","dataset","geojson","mathContent","className","cells","querySelectorAll","parentElement","markdown","headerRow","th","td","checkbox","checked","restOfLiContent","hash","html","clear","_placeholders","cacheKey","_getStringHash","get","processedHtml","_preProcessSpecialContainers","_postProcessMarkdown","originalSource","firstKey","_this2","_regexFallbackPreProcess","specialDivs","placeholders","div","sourceType","placeholder","includes","placeholderText","createTextNode","replaceChild","_ref","blockContent","fencedBlock","textPlaceholder","escapedPlaceholder","svgMatch","codeBlockRegex","blockIndex","originalBlocks","mermaidIndex","svgIndex","geojsonIndex","mathIndex","mermaidBlocks","b","svgBlocks","geojsonBlocks","topojsonIndex","topojsonBlocks","stlIndex","stlBlocks","mathBlocks","_extractTableDataFromHtml","rowData","cell","cellText","htmlContent","rowRegex","rowContent","cellRegex","cellMatch","_this3","extractedContent","originalSourceMatch","preMatch","RevisionManager","initialContent","initialContentType","contentType","diffs","currentIndex","diffEngine","DiffMatchPatch","newContent","currentContent","getCurrentContent","diff","diff_main","diff_cleanupSemantic","patchText","patch_toText","patch_make","getCurrentContentType","patches","patch_fromText","_slicedToArray","patch_apply","currentType","fromIndex","toIndex","fromContent","getContentAtRevision","toContent","lineDiff","diff_linesToChars_","chars1","chars2","diff_charsToLines_","lineArray","_step","lineDiffs","oldLineNum","newLineNum","_iterator","_createForOfIteratorHelper","done","_step2","_step$value","operation","lines","arr","_iterator2","DIFF_EQUAL","DIFF_DELETE","DIFF_INSERT","computeLineDiff","stats","additions","deletions","modifications","totalChanges","_this$getContentAtRev","info","contentSize","lineCount","isCurrent","diffSize","hasContentTypeChange","getDiffStats","changeStats","getHljs","hljs","SquibView","_defineProperty","debounce","requestAnimationFrame","updateLineNumbers","defaultOptions","container","_initializeAutoload","TinyEmitter","revisionManager","RevisionHistory","lastSelectionData","_onTextReplacementHandler","renderers","_initializeHtmlToMarkdown","initializeLibraries","registerDefaultRenderers","createStructure","initializeEventHandlers","initializeResizeObserver","showLineNumbers","initializeLineNumbers","initialize","inputContentType","setContent","setView","initialView","updateTypeButtons","onReplaceSelectedText","autoloadConfig","autoload_deps","enabled","cdnUrls","DEFAULT_CDN_URLS","libraries","lib","libName","all","strategy","libConfig","handler","parseLibConfig","loadedLibraries","loadingPromises","_loadAutoLibraries","_loadAutoLibraries2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_i","_Object$entries","_Object$entries$_i","wrap","_context","abrupt","entries","_autoloadLibrary","stop","Promise","resolve","reject","script","head","appendChild","link","rel","_autoloadLibrary2","_callee2","cdnConfig","_result","_context2","_isLibraryLoaded","sent","_loadLibraryAssets","_x","_loadLibraryAssets2","_callee3","promises","_context3","_loadScript","css","_loadCSS","_waitForLibrary","THREE","stlLoader","orbitControls","t0","debug","_x2","_x3","maxAttempts","attempts","check","mermaid","MathJax","L","_checkAndAutoloadLibraries2","_callee4","_config2","_config3","_config4","_context4","mathjax","leaflet","three","_x4","_initializeHtmlToMarkdown2","_callee5","HtmlToMarkdownClass","_context5","_htmlToMarkdownConverter","then","HtmlToMarkdown$1","convert","_this4","startOnLoad","securityLevel","theme","errorCallback","_shouldSuppressErrors","streamingMode","init","md","MarkdownIt","linkify","typographer","highlight","getLanguage","renderer","tokens","env","token","escapedContent","utils","escapeHtml","escapedSource","mathId","singleLineContent","codeHtml","langName","escapedLangName","parseConfig","parsedData","errorMessages","_dataToHtmlTable","highlightedContent","ignoreIllegals","_this5","headerCells","bodyCells","cellContent","_this6","registerRenderer","render","renderMarkdown","sourceToOutput","outputToSource","htmlToMarkdown","operations","increaseHeadings","markdownAdjustHeadings","decreaseHeadings","removeHR","fixLinefeeds","fixLinefeedsInMarkdown","toggleLinefeedView","getContent","buttons","label","renderHTML","makeRevealJSFullPage","markdownTable","csvOrTsvToMarkdownTable","tableToCSV","baseClass","titleShow","titleContent","showControls","controls","editor","typeButtonsContainer","universalButtonsContainer","sourcePanel","lineGutter","_this7","button","btn","addEventListener","_this8","view","copySource","copyHTML","revisionUndo","revisionRedo","selection","getSelection","selectionData","panel","range","selectionStart","selectionEnd","editDebounceTimer","specialContentBlocks","currentView","editableContent","clearTimeout","renderedContent","newSource","addRevision","getRangeAt","mermaidMatch","specialBlocks","mermaidRegex","startIndex","endIndex","geojsonMatch","geojsonRegex","mathMatch","mathRegex","mermaidDivMatch","geojsonDivMatch","modifiedSource","mermaidDivRegex","geojsonDivRegex","mathDivRegex","block","mathDivMatch","_this9","ResizeObserver","adjustLayout","observe","containerRect","getBoundingClientRect","titleHeight","offsetHeight","controlsHeight","availableHeight","height","availableWidth","width","style","containerWidth","containerHeight","Boolean","saveRevision","renderOutput","prevState","undo","nextState","redo","state","setRevision","getRevisionCount","getCurrentIndex","incompleteBlocks","inBlock","blockType","blockStartLine","fenceLength","fenceMatch","closeFence","startLine","incompleteBlockPlaceholder","renderErrorPlaceholder","errorType","errorHandling","_renderMarkdown","_callee6","inIncompleteBlock","currentBlockType","_loop","contentDiv","images","_loop2","mermaidElements","_iterator3","_step3","originalContent","hasError","originalConsoleError","originalConsoleWarn","beforeHtml","_this10","_context8","showIncompleteBlockPlaceholder","_detectIncompleteBlocks","_context6","delegateYield","_checkAndAutoloadLibraries","_renderErrorPlaceholder","linefeedViewEnabled","close","type1","type2","_renderIncompletePlaceholder","img","originalSrc","canvas","ctx","tempImg","_context7","preserveImageTags","getContext","Image","crossOrigin","naturalWidth","naturalHeight","drawImage","dataUrl","toDataURL","t2","parseError","initializeGeoRenderers","initializeSTLRenderers","ensureMathJaxAndTypeset","_x5","_ensureMathJaxAndTypeset","_callee8","typesetAll","_this11","_context10","typesetPromise","from","_callee7","_context9","mathJaxLoading","loader","load","tex","packages","inlineMath","displayMath","processEscapes","processEnvironments","renderActions","addMenu","ignoreHtmlClass","processHtmlClass","svg","fontCache","startup","typeset","async","_typesetAll","_initializeGeoRenderers","_callee9","geojsonContainers","topojsonContainers","_this12","_context11","initialized","renderGeoJSON","renderTopoJSON","_initializeSTLRenderers","_callee10","stlContainers","_this13","_context12","renderSTL","originalData","setAttribute","jsonData","cssText","mapId","tileLayer","attribution","addTo","geojsonLayer","geoJSON","getBounds","isValid","fitBounds","padding","topojson","topoData","geojsonData","feature","objects","stlData","scene","Scene","camera","PerspectiveCamera","offsetWidth","WebGLRenderer","antialias","setSize","setClearColor","domElement","_threeScene","_threeCamera","_threeRenderer","geometry","parseSTL","material","MeshLambertMaterial","color","mesh","Mesh","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","normalize","box","Box3","setFromObject","center","getCenter","Vector3","getSize","maxDim","x","y","z","lookAt","animate","rotation","_step4","BufferGeometry","vertices","normals","currentNormal","_iterator4","startsWith","parts","Float32BufferAttribute","table","newMarkdown","getMarkdownSource","offset","headingMatch","currentHeadingLevel","newHeadingLevel","toggle","copyMDButton","copyHTMLButton","outputDiv","insertContentInIframe","iframe","border","display","iframeDoc","contentWindow","output_iframe","output_ifraome_content","_copySource","_callee11","copyButton","markdownText","textarea","_context13","navigator","clipboard","writeText","opacity","body","select","t1","contentEditable","_options$fromIndex","_options$toIndex","actualFromIndex","actualToIndex","diffData","fromRevision","getRevisionInfo","toRevision","hasChanges","_options$fromIndex2","_options$toIndex2","_options$showLineNumb","_options$cssClasses","cssClasses","getSourceDiff","classes","added","removed","unchanged","lineNumber","_step5","_iterator5","lineClass","displayNum","_escapeHtml","htmlLength","_options$fromIndex3","_options$toIndex3","_options$cssClasses2","_step6","_iterator6","_step6$value","op","escapedText","_this14","_selectionData$range","focus","setSelectionRange","deleteContents","textNode","insertNode","setStartAfter","setEndAfter","collapse","removeAllRanges","addRange","editable","span","backgroundColor","borderRadius","cloneContents","targetNode","commonAncestorContainer","isLocked","ELEMENT_NODE","newEditableState","setSelectionEditable","activeElement","anchorNode","isInOutput","_this15","_this16","replaceSelectedText","_copyHTML","_callee12","clone","_iterator7","_step7","_loop4","svgElements","_iterator8","_step8","_loop5","mathElements","_iterator9","_step9","_loop3","_iterator10","_step10","originalContainer","allOriginalContainers","_iterator12","_step12","candidate","_placeholder","_iterator11","_step11","_container","_originalSource","_originalContainer","_allOriginalContainers","_iterator13","_step13","_candidate","_dataUrl","_img","_placeholder2","_placeholder3","_this17","_context17","formattedCode","borderCollapse","tr","fontFamily","whiteSpace","replaceWith","_context15","displayWidth","displayHeight","hasWidthAttr","hasHeightAttr","round","pngBlob","isMermaidSvg","hasExplicitDimensions","imgWidth","imgHeight","_context16","closest","svgToPng","onloadend","readAsDataURL","clientWidth","viewBox","baseVal","clientHeight","maxWidth","maxHeight","t3","mathEl","serializer","svgStr","svgBlob","imgElement","_context14","XMLSerializer","serializeToString","scaleFactor","scaledWidth","scaledHeight","scaleX","scaleY","additionalScale","scale","fillStyle","fillRect","revokeObjectURL","t4","t5","t6","divToDataUrl","t7","t8","t9","typeRow","objectsRow","objectNames","textBlock","t10","t11","t12","t13","getPlatform","ClipboardItem","t14","copyToClipboard","left","top","t15","createRange","selectNodeContents","execCommand","t16","svgElement","svgWidth","svgHeight","svgString","modifiedSvgString","tempSvg","clearRect","toBlob","blob","svgDataUrl","encodeURIComponent","show","sel","isMac","platform","prompt","_mathToPng","_callee13","mathElement","_context18","_x6","tex2svgPromise","jest","version","_mathCHTMLToPng","_callee14","chtmlContainer","rect","canvasWidth","canvasHeight","foreignObject","_context19","_x7","userAgent","log","inputDivHTML","replaceAll","slide","separator","tableRows","inCodeBlock","_divToDataUrl","_callee15","_this18","_context20","getContainer","mapContainer","mapRect","tileLayers","tilesLoaded","totalTiles","_step14","_iterator14","_loop6","tile","tileRect","offsetX","offsetY","_step15","_iterator15","_loop7","svgRect","svgOffsetX","svgOffsetY","svgData","svgUrl","svgImg","svgs","_step16","bestSvg","maxArea","_iterator16","area","fallbackCanvas","font","textAlign","fillText","_x8","_this19","lineMirror","lastLineCount","setupLineNumberScrollSync","_lineNumberInputHandler","updateLineNumbersIfNeeded","_lineNumberResizeHandler","updateLineNumbersDebounced","bind","removeEventListener","_this20","scrollTop","newLineCount","_this21","totalLines","minDigits","lineNumberMinDigits","lineNumberStart","syncMirrorStyles","lineNum","lineNumStr","padStart","lineHeight","measureLineHeight","gutterLine","lineContent","tempLine","wordBreak","overflow","ceil","_this22","computed","getComputedStyle","cleanupLineNumbers","wait","timeout","_len","_key"],"mappings":"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","x_google_ignoreList":[0,1,2]}